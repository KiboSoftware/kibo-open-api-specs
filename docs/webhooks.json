{
  "openapi": "3.0.1",
  "info": {
    "title": "WebHooks",
    "version": "1.0"
  },
  "x-explorer-enabled": false,
  "x-samples-enabled": false,
  "x-samples-languages":[],
  "x-code-samples": [],
  "x-readme": {
    "explorer-enabled": false,
    "samples-enabled": false,
    "code-samples": [],
    "headers": [
      {
        "key": "X-Static-Header-One",
        "value": "owlbert"
      },
      {
        "key": "X-Static-Header-Two",
        "value": "owlivia"
      }
    ]
  },
  "paths": {
    "/ApplicationEvents/ApplicationDisabled": {
      "post": {
        "tags": ["ApplicationEvents"],
        "summary": "Application Disabled",
        "operationId": "ApplicationDisabled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["application.disabled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "application.disabled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ApplicationEvents/ApplicationEnabled": {
      "post": {
        "tags": ["ApplicationEvents"],
        "summary": "Application Enabled",
        "operationId": "ApplicationEnabled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["application.enabled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "application.enabled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ApplicationEvents/ApplicationInstalled": {
      "post": {
        "tags": ["ApplicationEvents"],
        "summary": "Application Installed",
        "operationId": "ApplicationInstalled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["application.installed"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "application.installed"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ApplicationEvents/ApplicationUninstalled": {
      "post": {
        "tags": ["ApplicationEvents"],
        "summary": "Application Uninstalled",
        "operationId": "ApplicationUninstalled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["application.uninstalled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "application.uninstalled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ApplicationEvents/ApplicationUpgraded": {
      "post": {
        "tags": ["ApplicationEvents"],
        "summary": "Application Upgraded",
        "operationId": "ApplicationUpgraded",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["application.upgraded"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "application.upgraded"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/B2bAccountEvents/B2BAccountStatusChanged": {
      "post": {
        "tags": ["B2bAccountEvents"],
        "summary": "B2 B Account Status Changed",
        "operationId": "B2BAccountStatusChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["b2baccount.statuschanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "b2baccount.statuschanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as accountId, oldstatus, newstatus, isActive",
                    "example": [
                      {
                        "key": "accountId",
                        "value": {}
                      },
                      {
                        "key": "oldstatus",
                        "value": {}
                      },
                      {
                        "key": "newstatus",
                        "value": {}
                      },
                      {
                        "key": "isActive",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CartEvents/CartCreated": {
      "post": {
        "tags": ["CartEvents"],
        "summary": "Cart Created",
        "operationId": "CartCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["cart.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "cart.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CartEvents/CartDeleted": {
      "post": {
        "tags": ["CartEvents"],
        "summary": "Cart Deleted",
        "operationId": "CartDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["cart.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "cart.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CartEvents/CartUpdated": {
      "post": {
        "tags": ["CartEvents"],
        "summary": "Cart Updated",
        "operationId": "CartUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["cart.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "cart.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CreditEvents/CreditCreated": {
      "post": {
        "tags": ["CreditEvents"],
        "summary": "Credit Created",
        "operationId": "CreditCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["credit.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "credit.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CreditEvents/CreditDeleted": {
      "post": {
        "tags": ["CreditEvents"],
        "summary": "Credit Deleted",
        "operationId": "CreditDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["credit.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "credit.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CreditEvents/CreditUpdated": {
      "post": {
        "tags": ["CreditEvents"],
        "summary": "Credit Updated",
        "operationId": "CreditUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["credit.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "credit.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerAccountCreated": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer Account Created",
        "operationId": "CustomerAccountCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customeraccount.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customeraccount.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerAccountDeleted": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer Account Deleted",
        "operationId": "CustomerAccountDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customeraccount.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customeraccount.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerAccountUpdated": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer Account Updated",
        "operationId": "CustomerAccountUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customeraccount.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customeraccount.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerInSegmentAdded": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer In Segment Added",
        "operationId": "CustomerInSegmentAdded",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customersegment.customeradded"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customersegment.customeradded"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as customerAccountId",
                    "example": [
                      {
                        "key": "customerAccountId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerInSegmentRemoved": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer In Segment Removed",
        "operationId": "CustomerInSegmentRemoved",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customersegment.customerremoved"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customersegment.customerremoved"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as customerAccountId",
                    "example": [
                      {
                        "key": "customerAccountId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerSegmentCreated": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer Segment Created",
        "operationId": "CustomerSegmentCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customersegment.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customersegment.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerSegmentDeleted": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer Segment Deleted",
        "operationId": "CustomerSegmentDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customersegment.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customersegment.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CustomerEvents/CustomerSegmentUpdated": {
      "post": {
        "tags": ["CustomerEvents"],
        "summary": "Customer Segment Updated",
        "operationId": "CustomerSegmentUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customersegment.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customersegment.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/CategoryAttributeCreated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Category Attribute Created",
        "operationId": "CategoryAttributeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["categoryattribute.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "categoryattribute.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/CategoryAttributeDeleted": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Category Attribute Deleted",
        "operationId": "CategoryAttributeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["categoryattribute.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "categoryattribute.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/CategoryAttributeUpdated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Category Attribute Updated",
        "operationId": "CategoryAttributeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["categoryattribute.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "categoryattribute.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/CustomerAttributeCreated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Customer Attribute Created",
        "operationId": "CustomerAttributeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customerattribute.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customerattribute.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/CustomerAttributeDeleted": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Customer Attribute Deleted",
        "operationId": "CustomerAttributeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customerattribute.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customerattribute.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/CustomerAttributeUpdated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Customer Attribute Updated",
        "operationId": "CustomerAttributeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["customerattribute.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "customerattribute.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/LocationAttributeCreated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Location Attribute Created",
        "operationId": "LocationAttributeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["locationattribute.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "locationattribute.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/LocationAttributeDeleted": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Location Attribute Deleted",
        "operationId": "LocationAttributeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["locationattribute.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "locationattribute.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/LocationAttributeUpdated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Location Attribute Updated",
        "operationId": "LocationAttributeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["locationattribute.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "locationattribute.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/OrderAttributeCreated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Order Attribute Created",
        "operationId": "OrderAttributeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["orderattribute.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "orderattribute.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/OrderAttributeDeleted": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Order Attribute Deleted",
        "operationId": "OrderAttributeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["orderattribute.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "orderattribute.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/EventsEvents/OrderAttributeUpdated": {
      "post": {
        "tags": ["EventsEvents"],
        "summary": "Order Attribute Updated",
        "operationId": "OrderAttributeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["orderattribute.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "orderattribute.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentAdjusted": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Adjusted",
        "operationId": "ShipmentAdjusted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.adjusted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.adjusted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as orderId",
                    "example": [
                      {
                        "key": "orderId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentItemAdjusted": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Item Adjusted",
        "operationId": "ShipmentItemAdjusted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.itemadjusted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.itemadjusted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as orderId, LineId",
                    "example": [
                      {
                        "key": "orderId",
                        "value": {}
                      },
                      {
                        "key": "LineId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentItemsCanceled": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Items Canceled",
        "operationId": "ShipmentItemsCanceled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.itemscanceled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.itemscanceled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as itemsString",
                    "example": [
                      {
                        "key": "itemsString",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentItemsDeclined": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Items Declined",
        "operationId": "ShipmentItemsDeclined",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.itemsdeclined"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.itemsdeclined"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as itemsString",
                    "example": [
                      {
                        "key": "itemsString",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentItemsRejected": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Items Rejected",
        "operationId": "ShipmentItemsRejected",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.itemsrejected"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.itemsrejected"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as itemsString",
                    "example": [
                      {
                        "key": "itemsString",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentStatusChanged": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Status Changed",
        "operationId": "ShipmentStatusChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.statuschanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.statuschanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as orderId, oldstatus, newstatus, locationCode, childShipmentNumbers",
                    "example": [
                      {
                        "key": "orderId",
                        "value": {}
                      },
                      {
                        "key": "oldstatus",
                        "value": {}
                      },
                      {
                        "key": "newstatus",
                        "value": {}
                      },
                      {
                        "key": "locationCode",
                        "value": {}
                      },
                      {
                        "key": "childShipmentNumbers",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfillmentEvents/ShipmentWorkflowStateChanged": {
      "post": {
        "tags": ["FulfillmentEvents"],
        "summary": "Shipment Workflow State Changed",
        "operationId": "ShipmentWorkflowStateChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["shipment.workflowstatechanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "shipment.workflowstatechanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as orderId, oldstate, newstate",
                    "example": [
                      {
                        "key": "orderId",
                        "value": {}
                      },
                      {
                        "key": "oldstate",
                        "value": {}
                      },
                      {
                        "key": "newstate",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/LocationEvents/LocationTypeCreated": {
      "post": {
        "tags": ["LocationEvents"],
        "summary": "Location Type Created",
        "operationId": "LocationTypeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["locationtype.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "locationtype.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/LocationEvents/LocationTypeDeleted": {
      "post": {
        "tags": ["LocationEvents"],
        "summary": "Location Type Deleted",
        "operationId": "LocationTypeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["locationtype.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "locationtype.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/LocationEvents/LocationTypeUpdated": {
      "post": {
        "tags": ["LocationEvents"],
        "summary": "Location Type Updated",
        "operationId": "LocationTypeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["locationtype.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "locationtype.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/NotificationEvents/EmailRequested": {
      "post": {
        "tags": ["NotificationEvents"],
        "summary": "Email Requested",
        "operationId": "EmailRequested",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["email.requested"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "email.requested"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/CreateSubscription": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Create Subscription",
        "operationId": "CreateSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.subscriptioncreated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.subscriptioncreated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderAbandoned": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Abandoned",
        "operationId": "OrderAbandoned",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.abandoned"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.abandoned"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderAddressChanged": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Address Changed",
        "operationId": "OrderAddressChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.addresschanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.addresschanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderCancelled": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Cancelled",
        "operationId": "OrderCancelled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.cancelled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.cancelled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderClosed": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Closed",
        "operationId": "OrderClosed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.closed"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.closed"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderErrored": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Errored",
        "operationId": "OrderErrored",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.errored"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.errored"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderFulfilled": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Fulfilled",
        "operationId": "OrderFulfilled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.fulfilled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.fulfilled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderImported": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Imported",
        "operationId": "OrderImported",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.imported"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.imported"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderOpened": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Opened",
        "operationId": "OrderOpened",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.opened"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.opened"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderPendingReview": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Pending Review",
        "operationId": "OrderPendingReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.pendingreview"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.pendingreview"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderSaved": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Saved",
        "operationId": "OrderSaved",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.saved"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.saved"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/OrderUpdated": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Order Updated",
        "operationId": "OrderUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["order.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "order.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/PaymentRefunded": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Payment Refunded",
        "operationId": "PaymentRefunded",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["payment.refunded"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "payment.refunded"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as targetType, targetId, amount, reason, paymenttype",
                    "example": [
                      {
                        "key": "targetType",
                        "value": {}
                      },
                      {
                        "key": "targetId",
                        "value": {}
                      },
                      {
                        "key": "amount",
                        "value": {}
                      },
                      {
                        "key": "reason",
                        "value": {}
                      },
                      {
                        "key": "paymenttype",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/PaymentTransactionError": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Payment Transaction Error",
        "operationId": "PaymentTransactionError",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["payment.transactionerror"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "payment.transactionerror"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as targetType, targetId, paymentactionname, paymenttype, interactionmessage",
                    "example": [
                      {
                        "key": "targetType",
                        "value": {}
                      },
                      {
                        "key": "targetId",
                        "value": {}
                      },
                      {
                        "key": "paymentactionname",
                        "value": {}
                      },
                      {
                        "key": "paymenttype",
                        "value": {}
                      },
                      {
                        "key": "interactionmessage",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/ReturnAuthorized": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Return Authorized",
        "operationId": "ReturnAuthorized",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["return.authorized"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "return.authorized"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/ReturnCancelled": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Return Cancelled",
        "operationId": "ReturnCancelled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["return.cancelled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "return.cancelled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/ReturnClosed": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Return Closed",
        "operationId": "ReturnClosed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["return.closed"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "return.closed"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/ReturnOpened": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Return Opened",
        "operationId": "ReturnOpened",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["return.opened"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "return.opened"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/ReturnRejected": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Return Rejected",
        "operationId": "ReturnRejected",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["return.rejected"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "return.rejected"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderEvents/ReturnUpdated": {
      "post": {
        "tags": ["OrderEvents"],
        "summary": "Return Updated",
        "operationId": "ReturnUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["return.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "return.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/AttributeCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Attribute Created",
        "operationId": "AttributeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["attribute.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "attribute.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/AttributeDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Attribute Deleted",
        "operationId": "AttributeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["attribute.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "attribute.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/AttributeUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Attribute Updated",
        "operationId": "AttributeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["attribute.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "attribute.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/CategoryCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Category Created",
        "operationId": "CategoryCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["category.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "category.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/CategoryDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Category Deleted",
        "operationId": "CategoryDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["category.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "category.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/CategoryStatusChanged": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Category Status Changed",
        "operationId": "CategoryStatusChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["category.statuschanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "category.statuschanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/CategoryUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Category Updated",
        "operationId": "CategoryUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["category.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "category.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/DiscountCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Discount Created",
        "operationId": "DiscountCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["discount.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "discount.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/DiscountDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Discount Deleted",
        "operationId": "DiscountDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["discount.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "discount.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/DiscountExpired": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Discount Expired",
        "operationId": "DiscountExpired",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["discount.expired"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "discount.expired"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/DiscountUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Discount Updated",
        "operationId": "DiscountUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["discount.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "discount.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/FacetCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Facet Created",
        "operationId": "FacetCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["facet.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "facet.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/FacetDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Facet Deleted",
        "operationId": "FacetDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["facet.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "facet.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/FacetUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Facet Updated",
        "operationId": "FacetUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["facet.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "facet.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Created",
        "operationId": "PriceListCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelist.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelist.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Deleted",
        "operationId": "PriceListDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelist.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelist.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListEntryCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Entry Created",
        "operationId": "PriceListEntryCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelistentry.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelistentry.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListEntryDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Entry Deleted",
        "operationId": "PriceListEntryDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelistentry.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelistentry.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListEntryStatusChanged": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Entry Status Changed",
        "operationId": "PriceListEntryStatusChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelistentry.statuschanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelistentry.statuschanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListEntryUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Entry Updated",
        "operationId": "PriceListEntryUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelistentry.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelistentry.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/PriceListUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Price List Updated",
        "operationId": "PriceListUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["pricelist.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "pricelist.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductCodeRenamed": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Code Renamed",
        "operationId": "ProductCodeRenamed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["product.coderenamed"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "product.coderenamed"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as previousProductCode",
                    "example": [
                      {
                        "key": "previousProductCode",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Created",
        "operationId": "ProductCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["product.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "product.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Deleted",
        "operationId": "ProductDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["product.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "product.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductDraftCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Draft Created",
        "operationId": "ProductDraftCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productdraft.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productdraft.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductDraftDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Draft Deleted",
        "operationId": "ProductDraftDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productdraft.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productdraft.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductDraftDiscarded": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Draft Discarded",
        "operationId": "ProductDraftDiscarded",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productdraft.discarded"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productdraft.discarded"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductDraftPublished": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Draft Published",
        "operationId": "ProductDraftPublished",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productdraft.published"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productdraft.published"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductDraftUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Draft Updated",
        "operationId": "ProductDraftUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productdraft.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productdraft.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductInventoryInStock": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Inventory In Stock",
        "operationId": "ProductInventoryInStock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productinventory.instock"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productinventory.instock"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as locationCode",
                    "example": [
                      {
                        "key": "locationCode",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductInventoryOutOfStock": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Inventory Out Of Stock",
        "operationId": "ProductInventoryOutOfStock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productinventory.outofstock"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productinventory.outofstock"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as locationCode",
                    "example": [
                      {
                        "key": "locationCode",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductInventoryUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Inventory Updated",
        "operationId": "ProductInventoryUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["productinventory.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "productinventory.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as locationCode",
                    "example": [
                      {
                        "key": "locationCode",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductTypeCreated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Type Created",
        "operationId": "ProductTypeCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["producttype.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "producttype.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductTypeDeleted": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Type Deleted",
        "operationId": "ProductTypeDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["producttype.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "producttype.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductTypeUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Type Updated",
        "operationId": "ProductTypeUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["producttype.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "producttype.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ProductEvents/ProductUpdated": {
      "post": {
        "tags": ["ProductEvents"],
        "summary": "Product Updated",
        "operationId": "ProductUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["product.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "product.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ReservationEvents/ReservationDeallocated": {
      "post": {
        "tags": ["ReservationEvents"],
        "summary": "Reservation Deallocated",
        "operationId": "ReservationDeallocated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["reservation.deallocate"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "reservation.deallocate"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as reservationId",
                    "example": [
                      {
                        "key": "reservationId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ReservationEvents/ReservationExpired": {
      "post": {
        "tags": ["ReservationEvents"],
        "summary": "Reservation Expired",
        "operationId": "ReservationExpired",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["reservation.expired"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "reservation.expired"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as reservationId, cartId, expirationDateTime",
                    "example": [
                      {
                        "key": "reservationId",
                        "value": {}
                      },
                      {
                        "key": "cartId",
                        "value": {}
                      },
                      {
                        "key": "expirationDateTime",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SearchEvents/SearchSettingsUpdated": {
      "post": {
        "tags": ["SearchEvents"],
        "summary": "Search Settings Updated",
        "operationId": "SearchSettingsUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["searchsettings.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "searchsettings.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SiteEvents/SiteCloned": {
      "post": {
        "tags": ["SiteEvents"],
        "summary": "Site Cloned",
        "operationId": "SiteCloned",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["site.cloned"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "site.cloned"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SiteEvents/SiteCreated": {
      "post": {
        "tags": ["SiteEvents"],
        "summary": "Site Created",
        "operationId": "SiteCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["site.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "site.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SiteEvents/SiteDeleted": {
      "post": {
        "tags": ["SiteEvents"],
        "summary": "Site Deleted",
        "operationId": "SiteDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["site.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "site.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SiteEvents/SiteUpdated": {
      "post": {
        "tags": ["SiteEvents"],
        "summary": "Site Updated",
        "operationId": "SiteUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["site.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "site.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SubscriptionEvents/SubscriptionActivated": {
      "post": {
        "tags": ["SubscriptionEvents"],
        "summary": "Subscription Activated",
        "operationId": "SubscriptionActivated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["subscription.activated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "subscription.activated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as subscriptionId",
                    "example": [
                      {
                        "key": "subscriptionId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SubscriptionEvents/SubscriptionCancelled": {
      "post": {
        "tags": ["SubscriptionEvents"],
        "summary": "Subscription Cancelled",
        "operationId": "SubscriptionCancelled",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["subscription.cancelled"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "subscription.cancelled"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as subscriptionId",
                    "example": [
                      {
                        "key": "subscriptionId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SubscriptionEvents/SubscriptionErrored": {
      "post": {
        "tags": ["SubscriptionEvents"],
        "summary": "Subscription Errored",
        "operationId": "SubscriptionErrored",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["subscription.errored"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "subscription.errored"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as subscriptionId",
                    "example": [
                      {
                        "key": "subscriptionId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SubscriptionEvents/SubscriptionPaused": {
      "post": {
        "tags": ["SubscriptionEvents"],
        "summary": "Subscription Paused",
        "operationId": "SubscriptionPaused",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["subscription.paused"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "subscription.paused"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as subscriptionId",
                    "example": [
                      {
                        "key": "subscriptionId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SubscriptionEvents/SubscriptionPaymentUpdated": {
      "post": {
        "tags": ["SubscriptionEvents"],
        "summary": "Subscription Payment Updated",
        "operationId": "SubscriptionPaymentUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["subscription.paymentupdated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "subscription.paymentupdated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as subscriptionId, oldPaymentId, newPaymentId",
                    "example": [
                      {
                        "key": "subscriptionId",
                        "value": {}
                      },
                      {
                        "key": "oldPaymentId",
                        "value": {}
                      },
                      {
                        "key": "newPaymentId",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/SubscriptionEvents/SubscriptionStatusChanged": {
      "post": {
        "tags": ["SubscriptionEvents"],
        "summary": "Subscription Status Changed",
        "operationId": "SubscriptionStatusChanged",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["subscription.statuschanged"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "subscription.statuschanged"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  },
                  "extendedProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object"
                        }
                      }
                    },
                    "description": "May contain additional properties such as subscriptionId, oldstatus, newstatus",
                    "example": [
                      {
                        "key": "subscriptionId",
                        "value": {}
                      },
                      {
                        "key": "oldstatus",
                        "value": {}
                      },
                      {
                        "key": "newstatus",
                        "value": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/TenantEvents/TenantCreated": {
      "post": {
        "tags": ["TenantEvents"],
        "summary": "Tenant Created",
        "operationId": "TenantCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["tenant.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "tenant.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/TenantEvents/TenantDeleted": {
      "post": {
        "tags": ["TenantEvents"],
        "summary": "Tenant Deleted",
        "operationId": "TenantDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["tenant.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "tenant.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/TenantEvents/TenantExpiring": {
      "post": {
        "tags": ["TenantEvents"],
        "summary": "Tenant Expiring",
        "operationId": "TenantExpiring",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["tenant.expiring"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "tenant.expiring"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/TenantEvents/TenantHardDeleted": {
      "post": {
        "tags": ["TenantEvents"],
        "summary": "Tenant Hard Deleted",
        "operationId": "TenantHardDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["tenant.hard_deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "tenant.hard_deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/TenantEvents/TenantUpdated": {
      "post": {
        "tags": ["TenantEvents"],
        "summary": "Tenant Updated",
        "operationId": "TenantUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["tenant.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "tenant.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/TenantEvents/TenantUserLogin": {
      "post": {
        "tags": ["TenantEvents"],
        "summary": "Tenant User Login",
        "operationId": "TenantUserLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["tenant.userlogin"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "tenant.userlogin"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WishlistEvents/WishlistCreated": {
      "post": {
        "tags": ["WishlistEvents"],
        "summary": "Wishlist Created",
        "operationId": "WishlistCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["wishlist.created"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "wishlist.created"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WishlistEvents/WishlistDeleted": {
      "post": {
        "tags": ["WishlistEvents"],
        "summary": "Wishlist Deleted",
        "operationId": "WishlistDeleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["wishlist.deleted"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "wishlist.deleted"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WishlistEvents/WishlistUpdated": {
      "post": {
        "tags": ["WishlistEvents"],
        "summary": "Wishlist Updated",
        "operationId": "WishlistUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier for the event.",
                    "format": "uuid"
                  },
                  "topic": {
                    "enum": ["wishlist.updated"],
                    "type": "string",
                    "description": "The Event Type.",
                    "example": "wishlist.updated"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The id of the entity."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "The time stamp of the event.",
                    "format": "date-time"
                  },
                  "correlationId": {
                    "type": "string",
                    "description": "The Correlation Id the api that triggered the event.",
                    "format": "date-time"
                  },
                  "isTest": {
                    "type": "boolean",
                    "description": "True if the event is test only event.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {}
}
