{
  "openapi": "3.0.1",
  "info": {
    "title": "Subscriptions",
    "description": "<div id=\"overview_SUBSCRIPTION\">\r\n            <h2>SUBSCRIPTIONS</h2>\r\n            <p>The Subscription APIs are used to create and manage subscriptions in either an eCommerce+OMS implementation or a standalone \r\n                Subscriptions solution. This includes updating items and quantities, subscription frequency, coupons, and performing actions \r\n                on a subscription in addition to turning a subscription into an order. For more information, see the <a href=\"https://docs.kibocommerce.com/help/product-subscriptions\">Subscriptions feature guide</a>.\r\n            </p>\r\n        </div>",
    "version": "1.0.1"
  },
  "paths": {
    "/commerce/subscriptions/{subscriptionId}/attributes": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create Subscription Attributes",
        "description": "Creates list of subscription attributes specified by subscription Id.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionAttribute"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Subscription Attributes",
        "description": "Gets the list of attributes specified by subscription Id.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Subscription Attribute",
        "description": "Updates the list of subscription attributes specified by subscription id and removes the missing attributes if not passed when removeMissing flag is set.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "removeMissing",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionAttribute"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionAttribute"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Subscriptions",
        "description": "Retrieves a list of subscriptions according to any specified filter criteria and sort options.",
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "description": "The start index.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The sort by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The q.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qLimit",
            "in": "query",
            "description": "The q limit.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscriptionCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscriptionCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscriptionCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Creates Subscription",
        "description": "Creates and validates a new subscription.",
        "requestBody": {
          "description": "The subscription.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/commerce/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Gets Subscription",
        "description": "Retrieves the details of a subscription specified by the subscription ID.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "description": "return draft version of subscription.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Subscription",
        "description": "Update the info for an existing subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The subscription.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/actions": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Perform Subscription Action",
        "description": "Perform the specified action on subscription. Available actions are Activate, Pause, Cancel, and RetryFailedContinuityOrder.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action to perform, which can be \"Activate,\" \"Pause,\" \"Cancel\".",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/reasons": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Reasons",
        "description": "Gets available subscription action reasons for the given category. If no category is supplied will give available Cancel action reasons.",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Action to get available reasons for. Defaults to CANCEL",
            "schema": {
              "type": "string",
              "default": "CANCEL"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionReasonCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionReasonCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionReasonCollection"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/ordernow": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Order Now",
        "description": "Lets the user place an instant order from the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/skip": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Skip Subscription",
        "description": "Skips the next continuity order for the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/fulfillmentinfo": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Fulfillment Info",
        "description": "Modifies the Fulfillment Info for a subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New fulfillment info for subscription.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FulfillmentInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfillmentInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfillmentInfo"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FulfillmentInfo"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/shipments/methods": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Available Shipment Methods",
        "description": "Gets valid shipping methods for subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionRuntimeShippingRate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionRuntimeShippingRate"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionRuntimeShippingRate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/converttoorder": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Convert To Order",
        "description": "Convert the subscription to order.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeOrder"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/frequency": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Subscription Frequency",
        "description": "Update the frequency on an existing subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The requested frequency for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Frequency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/nextorderdate": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Next Order Date",
        "description": "Updates the next order date on an existing subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Next Order date to be set.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionNextOrderDate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/coupons/{couponCode}": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Apply Coupon",
        "description": "Apply coupon to the Subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique identifier of the Subscription with which to associate the coupon.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "couponCode",
            "in": "path",
            "description": "Coupon code that the customer supplies to get the discounted price.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "updateMode\">Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/adjustments": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Adjustments",
        "description": "Update item, shipping and handling adjustments on the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Adjustments for subscription.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionAdjustment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/payment": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Payment",
        "description": "Updates the payment on the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new payment to be applied.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/installmentPlan": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Installment plan",
        "description": "Updates the installment plan on the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallmentPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/priceList": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Change Pricelist On Subscription",
        "description": "Updates the price list on the subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The price list to be applied.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPriceList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/removecoupon": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Remove Coupons",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "CouponCodes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCoupons"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        },
        "description": "Removes existing coupons from a subscription."
      }
    },
    "/commerce/subscriptions/{subscriptionId}/cleardraft": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete Subscription Draft",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        },
        "description": "Delete subscription draft"
      }
    },
    "/commerce/subscriptions/{subscriptionId}/orderpartialdraft": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Order Partial Subscription",
        "description": "Lets the user place an order from Partial Draft.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/data": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Subscription Data",
        "description": "Retrieves all the values in the Subscription Data bag",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique Identifier of the Subscription whose Data you want to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/item/{subscriptionItemId}/data": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get Subscription Item Data",
        "description": "Retrieves a specific value in the SubscriptionItem Data bag.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique Identifier of the Subscription you want to get the Subscription Items for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "description": "Unique Identifier of the SubscriptionItem whose Data you want to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/data/{subscriptionDataId}": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Subscription Data",
        "description": "Insert / Updates the Value of the given Key in the Subscription Data bag.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique Identifier of the Subscription you want to insert / update the Databag for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionDataId",
            "in": "path",
            "description": "URLEncoded Key for the Value you want to Insert / Update from the Subscription DataBag",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Data Object you are trying to insert / update",
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete Subscription Data",
        "description": "Delete Value of the given Key in the SubscriptionData bag.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique Identifier of the Subscription you want to Delete the Databag for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionDataId",
            "in": "path",
            "description": "URLEncoded Key for the Value you want to Delete from the Subscription DataBag",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/item/{subscriptionItemId}/data/{subscriptionItemDataId}": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Subscription Item Data",
        "description": "Updates the value of the given key on a subscription item bag.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique Identifier of the Subscription you want to get the Items for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "description": "Unique Identifier of the SubscriptionItem you want to Insert / Update the Databag for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemDataId",
            "in": "path",
            "description": "URLEncoded Key for the Value you want to Insert / Update from the SubscriptionItem DataBag",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Data Object you are trying to insert / update",
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete Subscription Item Data",
        "description": "Deletes the Value of the given Key in the SubscriptionItem Data bag.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Unique Identifier of the Subscription you want to get the Items for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "description": "Unique Identifier of the SubscriptionItem you want to delete the Databag for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemDataId",
            "in": "path",
            "description": "URLEncoded Key for the Value you want to Delete from the SubscriptionItem DataBag",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/items": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Add Subscription Item",
        "description": "Add a subscription item in existing subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "subscription item to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/items/{subscriptionItemId}/quantity/{quantity}": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Item Quantity",
        "description": "Updates an item's quantity on a existing subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "description": "subscription item id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "New quantity for the specified subscription item.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "cancellation reason if item quantity is decreased.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/items/{subscriptionItemId}/remove": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete Subscription Item",
        "description": "Removes a particular subscription item from the subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "description": "subscription item id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "cancellation reason",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/subscriptions/{subscriptionId}/items/{subscriptionItemId}/upsertinventorytags": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryTags"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        },
        "summary": "Upsert Inventory Tags",
        "description": "Updates and replaces inventory tags."
      }
    },
    "/commerce/subscriptions/{subscriptionId}/items/{subscriptionItemId}/fulfillment": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update Item Fulfillment",
        "description": "Update an item's fulfillment type on an existing subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscription id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "description": "subscription item id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateMode",
            "in": "query",
            "description": "Determines the update strategy for this update (ApplyToOriginal, ApplyToDraft).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "subscription item id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SubscriptionAttribute": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CommerceRuntimeOrderAttribute"
          }
        ],
        "additionalProperties": false
      },
      "ProductStock": {
        "type": "object",
        "properties": {
          "manageStock": {
            "type": "boolean"
          },
          "isOnBackOrder": {
            "type": "boolean"
          },
          "availableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stockAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "aggregateInventory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "futureInventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeFutureInventory"
            },
            "nullable": true
          },
          "availableFutureInventories": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalAvailableStock": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isSubstitutable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBase": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Merchant-created code that uniquely identifies the product.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the product, this is the current value of the product's name in the language specified by LocaleCode.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Short description of the product in the language specified by LocaleCode.",
            "nullable": true
          },
          "goodsType": {
            "type": "string",
            "description": "Goods Type",
            "nullable": true
          },
          "isPackagedStandAlone": {
            "type": "boolean",
            "description": "Indicates that this product ships by itself."
          },
          "stock": {
            "$ref": "#/components/schemas/ProductStock"
          },
          "productReservationId": {
            "type": "integer",
            "description": "Reservation ID associated with this product in the bundle.",
            "format": "int32",
            "nullable": true
          },
          "allocationId": {
            "type": "integer",
            "description": "Allocation ID associated with this product on this order.",
            "format": "int32",
            "nullable": true
          },
          "allocationExpiration": {
            "type": "string",
            "description": "Allocation ID associated with this product on this order.",
            "format": "date-time",
            "nullable": true
          },
          "measurements": {
            "$ref": "#/components/schemas/CommerceRuntimePackageMeasurements"
          },
          "fulfillmentStatus": {
            "type": "string",
            "description": "Fulfillment status of the product.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceUnitPrice": {
        "type": "object",
        "properties": {
          "extendedAmount": {
            "type": "number",
            "description": "Extended amount, this is in order of precedence: OverrideAmount, SaleAmount, ListAmount",
            "format": "double",
            "nullable": true
          },
          "listAmount": {
            "type": "number",
            "description": "Product list amount.",
            "format": "double",
            "nullable": true
          },
          "saleAmount": {
            "type": "number",
            "description": "Sale amount indicated on the product.",
            "format": "double",
            "nullable": true
          },
          "overrideAmount": {
            "type": "number",
            "description": "Amount as manually overridden by the Merchant",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Pricing details for the product listed on a cart item, including the original price, discount amount, and final price."
      },
      "InventoryTags": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubstituteInfo": {
        "type": "object",
        "properties": {
          "optIn": {
            "type": "string",
            "description": "Determines if and when substitution is allowed. Allowed values are `None`, `Yes`, `No`, or `OnlyAtFulfillment`. Default is `None`.",
            "nullable": true
          },
          "substituteProductCode": {
            "type": "string",
            "description": "Allows user to provide a specific product that should be substituted if substitution occurs.",
            "nullable": true
          },
          "substituteVariantCode": {
            "type": "string",
            "description": "Allows user to provide a specific variant that should be substituted if substitution occurs.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeCommerceItem"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the order line item. System-supplied and read-only.",
            "nullable": true
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "description": "Location code from which to obtain this item",
            "nullable": true
          },
          "fulfillmentMethod": {
            "type": "string",
            "description": "Fulfillment method used to fulfill this item",
            "nullable": true
          },
          "parentItemCode": {
            "type": "string",
            "description": "Product code of the parent item if split because of the splitItemOnSubsription attribute on the item",
            "nullable": true
          },
          "isOnetimeItem": {
            "type": "boolean",
            "description": "is onetime item"
          }
        },
        "additionalProperties": false
      },
      "PaymentActionTarget": {
        "type": "object",
        "properties": {
          "targetType": {
            "type": "string",
            "description": "Specifies if the Mozu.CommerceRuntime.Contracts.Payments.PaymentActionTarget.TargetId is a Checkout Id, Order Id, or Return Id.",
            "nullable": true
          },
          "targetId": {
            "type": "string",
            "description": "The Id of the Checkout/Order/Return to target.",
            "nullable": true
          },
          "targetNumber": {
            "type": "integer",
            "description": "The number of the Checkout/Order/Return to target.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentCardReference": {
        "type": "object",
        "properties": {
          "paymentOrCardType": {
            "type": "string",
            "description": "Card type such as Visa, MasterCard, American Express, or Discover.",
            "nullable": true
          },
          "cardNumberPartOrMask": {
            "type": "string",
            "description": "The visible part of the card number that the merchant uses to refer to \r\npayment information, for example, the last for digits of the card number.",
            "nullable": true
          },
          "expireMonth": {
            "type": "integer",
            "description": "Month when the card expires.",
            "format": "int32"
          },
          "expireYear": {
            "type": "integer",
            "description": "Year when the card expires.",
            "format": "int32"
          },
          "bin": {
            "type": "string",
            "description": "Year when the card expires.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentCard": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentCardReference"
          }
        ],
        "properties": {
          "paymentServiceCardId": {
            "type": "string",
            "description": "Credit card number.",
            "nullable": true
          },
          "isUsedRecurring": {
            "type": "boolean",
            "description": "If true, the credit card is charged on a regular interval, such as for a subscription. (Not supported currently.)",
            "nullable": true
          },
          "nameOnCard": {
            "type": "string",
            "description": "Card holder's name as it appears on the card.",
            "nullable": true
          },
          "isCardInfoSaved": {
            "type": "boolean",
            "description": "If true, the card information is stored in the customer's account."
          },
          "isTokenized": {
            "type": "boolean",
            "description": "If true, the card is tokenized by external provider"
          },
          "ccLastFour": {
            "type": "string",
            "description": "Last four digit of Credit card\r\nOnly for OMS Only tenant.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "If the customer is paying by credit card, the card holder's details, such as the name on the card, number, billing \r\naddress, and expiration dates."
      },
      "PaymentToken": {
        "type": "object",
        "properties": {
          "paymentServiceTokenId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseOrderPayment": {
        "type": "object",
        "properties": {
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number",
            "nullable": true
          },
          "paymentTerm": {
            "$ref": "#/components/schemas/CommerceRuntimePurchaseOrderPaymentTerm"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimePurchaseOrderCustomField"
            },
            "description": "Memo/custom fields",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Purchase order payment"
      },
      "CheckPayment": {
        "type": "object",
        "properties": {
          "checkNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingInfo": {
        "type": "object",
        "properties": {
          "paymentType": {
            "type": "string",
            "description": "Type of payment, such as credit card, check by mail, or PayPal.\r\nsee Mozu.CommerceRuntime.Contracts.Payments.PaymentTypeConst for valid values",
            "nullable": true
          },
          "paymentWorkflow": {
            "type": "string",
            "nullable": true
          },
          "billingContact": {
            "$ref": "#/components/schemas/CommerceRuntimeContact"
          },
          "isSameBillingShippingAddress": {
            "type": "boolean",
            "description": "Indicates that billing and shipping address are the same"
          },
          "card": {
            "$ref": "#/components/schemas/PaymentCard"
          },
          "token": {
            "$ref": "#/components/schemas/PaymentToken"
          },
          "purchaseOrder": {
            "$ref": "#/components/schemas/PurchaseOrderPayment"
          },
          "check": {
            "$ref": "#/components/schemas/CheckPayment"
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "storeCreditCode": {
            "type": "string",
            "description": "The store credit to use for this purchase",
            "nullable": true
          },
          "storeCreditType": {
            "type": "string",
            "description": "The type of store credit used for this purchase",
            "nullable": true
          },
          "customCreditType": {
            "type": "string",
            "description": "Name of custom stored credit type",
            "nullable": true
          },
          "externalTransactionId": {
            "type": "string",
            "description": "Transaction Id from third party payment source like Visa Checkout, Amazon",
            "nullable": true
          },
          "isRecurring": {
            "type": "boolean",
            "description": "Indicates whether the payment is used in recurring transactions. ex- subscription payments"
          },
          "recurringTransactionId": {
            "type": "string",
            "description": "Recurring Payment Id returned by Payment Gateway\r\nnetworkTransactionId for vantiv\r\npreviousTransactionId for cybersource etc",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data from payment providers",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Customer's payment details such as payment type (credit card, check by mail, or PayPal)\r\nand cardholder information if payment is by credit card."
      },
      "SubPayment": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "amountCollected": {
            "type": "number",
            "format": "double"
          },
          "amountCredited": {
            "type": "number",
            "format": "double"
          },
          "amountRequested": {
            "type": "number",
            "format": "double"
          },
          "amountRefunded": {
            "type": "number",
            "format": "double"
          },
          "target": {
            "$ref": "#/components/schemas/PaymentActionTarget"
          }
        },
        "additionalProperties": false
      },
      "PaymentGatewayResponseData": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key from payment gateway",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value from payment gateway",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payment gateway reponse data"
      },
      "CapturableShipmentSummary": {
        "type": "object",
        "properties": {
          "shipmentNumber": {
            "type": "integer",
            "description": "The identifying number of the shipment affected by the payment action",
            "format": "int32"
          },
          "shipmentTotal": {
            "type": "number",
            "description": "The shipment's total when the payment action occurred",
            "format": "double"
          },
          "amountApplied": {
            "type": "number",
            "description": "The amount applied by the payment action",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentInteraction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of this payment transaction interaction.",
            "nullable": true
          },
          "gatewayInteractionId": {
            "type": "integer",
            "description": "Unique identifier of the gateway interaction. Used for credit card transactions, where the\r\npayment service creates a GatewayInteractionId for each transaction interaction.",
            "format": "int32",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "description": "Unique identifier of the original transaction of which this current interaction is a part.",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "description": "Unique identifier of the order with which this transaction is associated.",
            "nullable": true
          },
          "target": {
            "$ref": "#/components/schemas/PaymentActionTarget"
          },
          "currencyCode": {
            "type": "string",
            "description": "ISO currency code for the transaction. Currently, only USD is supported.",
            "nullable": true
          },
          "interactionType": {
            "type": "string",
            "description": "Types of transaction interactions which can be \"Authorization,\" \"Capture,\" \"AuthorizeAndCapture,\"\r\n\"Void,\" or \"Credit,\" \"CheckRequested,\" or \"CheckReceived.\"",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "description": "If paying by check, the check number.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the payment transaction interaction which can be either \"Success\" or \"Failure.\"",
            "nullable": true
          },
          "paymentEntryStatus": {
            "type": "string",
            "description": "Status of the payment when the transaction interaction was created",
            "nullable": true
          },
          "isRecurring": {
            "type": "boolean",
            "description": "If true, the product is purchased or fulfilled at regular intervals, for example, a monthly billing or a subscription. (Not currently implemented.)",
            "nullable": true
          },
          "isManual": {
            "type": "boolean",
            "description": "If the payment is a manual payment, this is set to true"
          },
          "isPending": {
            "type": "boolean",
            "description": "If true, indicates payment action is still pending and not yet confirmed."
          },
          "gatewayTransactionId": {
            "type": "string",
            "description": "Unique identifier of the transaction supplied by PCIaaS.",
            "nullable": true
          },
          "gatewayAuthCode": {
            "type": "string",
            "description": "If required by the payment gateway, the authorization code of the transaction. Supplied by PCIaaS.",
            "nullable": true
          },
          "gatewayAVSCodes": {
            "type": "string",
            "description": "Gateway AVS Codes. Supplied by PCIaaS.",
            "nullable": true
          },
          "gatewayCVV2Codes": {
            "type": "string",
            "description": "Gateway CVV2 Codes. Supplied by PCIaaS.",
            "nullable": true
          },
          "gatewayResponseCode": {
            "type": "string",
            "description": "Gateway response code. Supplied by PCIaaS.",
            "nullable": true
          },
          "gatewayResponseText": {
            "type": "string",
            "description": "Gateway response text. Supplied by PCIaaS.",
            "nullable": true
          },
          "gatewayResponseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentGatewayResponseData"
            },
            "description": "A List of payment response data required to act on authorization when using external order management systems",
            "nullable": true
          },
          "paymentTransactionInteractionIdReference": {
            "type": "integer",
            "description": "Unique identifier of previous PaymentTransactionInteraction that this PaymentTransactionInteraction is modifying.\r\nFor instance, when crediting a capture, set the PaymentTransactionInteractionIdReference to the capture PaymentTransactionInteractionID.",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount of funds associated with this interaction.",
            "format": "double",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note to be entered by merchant/application",
            "nullable": true
          },
          "interactionDate": {
            "type": "string",
            "description": "Date the interaction occurred",
            "format": "date-time",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "returnId": {
            "type": "string",
            "description": "Return Id, if the interaction is a Credit for a return-refund.",
            "nullable": true
          },
          "refundId": {
            "type": "string",
            "description": "Refund Id, if the interaction is for a stand alone refund.",
            "nullable": true
          },
          "capturableShipmentsSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CapturableShipmentSummary"
            },
            "description": "Stores pairings of shipment number to shipment total for all captured shipments. This was added for generating TLogs.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single interaction of a potential list of intereactions for a transaction. The scope of the transaction is the entire payment\r\ninterchange. It is created upon authorization and is used for all subsequent interactions performed against the authorize,\r\nsuch as consecutive captures."
      },
      "GatewayGiftCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardPin": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of this order transaction.",
            "nullable": true
          },
          "groupId": {
            "$ref": "#/components/schemas/PaymentActionTarget"
          },
          "paymentServiceTransactionId": {
            "type": "string",
            "description": "Unique identifier of the transaction, specified by the payment service processesing this transaction.",
            "nullable": true
          },
          "availableActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Actions available to the payment",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "description": "Unique identifier of the order with which this transaction is associated.",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "description": "Type of Payment",
            "nullable": true
          },
          "paymentWorkflow": {
            "type": "string",
            "description": "The source of data for this payment.  By default, this will be set to 'mozu'",
            "nullable": true
          },
          "externalTransactionId": {
            "type": "string",
            "description": "The external/third party transaction Id for this payment. This is used to store the transaction Id from digital wallet like Visa Checkout",
            "nullable": true
          },
          "billingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "data": {
            "type": "object",
            "description": "Custom data from payment providers",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Current status of this transaction which are described by the PaymentStatusConst class.",
            "nullable": true
          },
          "subPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubPayment"
            },
            "description": "List of sub payments that correspond to child orders in case of multiship orders.",
            "nullable": true
          },
          "interactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInteraction"
            },
            "description": "List of intereactions for this transaction. A transaction is created upon authorization and lasts across the payment \r\ninterchange, which can consist of multiple interactions, such as consecutive captures.",
            "nullable": true
          },
          "isRecurring": {
            "type": "boolean",
            "description": "If true, the product is purchased or fulfilled at regular intervals, for example, \r\nmonthly billing or a subscription. (Not currently supported.)"
          },
          "amountCollected": {
            "type": "number",
            "description": "Amount collected on the payment",
            "format": "double"
          },
          "amountCredited": {
            "type": "number",
            "description": "Amount credited back to the payment.",
            "format": "double"
          },
          "amountRequested": {
            "type": "number",
            "description": "Derived from the Amount on the initial payment create, used to help storefront determine how much can be captured for multiple payments.\r\nSee Order.AmountRemainingForPayment for an example.",
            "format": "double"
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "description": "Change messages related to the payment.",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "gatewayGiftCard": {
            "$ref": "#/components/schemas/GatewayGiftCard"
          },
          "installmentPlanCode": {
            "type": "string",
            "description": "Stores the Installment Plan code. Installment is only supported on subscription orders",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payment transaction associated with this order. It is the entire payment interchange between the merchant who is forwarding the customer's payment \r\ninformation and the payment service who is authorizing and capturing payment. Payment can be either by credit card, check, or PayPal. (PayPal not\r\ncurrently supported.)"
      },
      "OrderNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the note. System-supplied and read-only.",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Text of the note. Maximum 250 characters.",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false,
        "description": "Internal notes that a merchant may add to the order. Maximum 250 characters."
      },
      "FulfillmentInfo": {
        "type": "object",
        "properties": {
          "fulfillmentContact": {
            "$ref": "#/components/schemas/CommerceRuntimeContact"
          },
          "isDestinationCommercial": {
            "type": "boolean",
            "description": "Indicates that the destination is commercial",
            "nullable": true
          },
          "shippingMethodCode": {
            "type": "string",
            "description": "Code that uniquely identifies the shipping method such as \"Ground,\" \"Overnight,\" or \"Digital.\"\r\nThe site's shipping settings lists the valid shipping methods specified for this site.",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "description": "Readable name of the shipping method",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data originated by the shipping service.",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false,
        "description": "Shipment information, which includes the shipping address, price, estimated delivery date, tracking information, method (for example, Ground, Overnight, or Pick-up), \r\ncarrier (for example, USPS, UPS, FedEx), and current status (for example, Not Shipped, In Transit, Delayed, or Returned To Sender)."
      },
      "Frequency": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Trial": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates if the trial is enabled"
          },
          "duration": {
            "type": "integer",
            "description": "Trial duration in days",
            "format": "int32"
          },
          "substituteProductCode": {
            "type": "string",
            "description": "Product code to substitute once the trial period is finished.",
            "nullable": true
          },
          "substituteProductQuantity": {
            "type": "integer",
            "description": "Product quantity to substitute once the trail period is finished.",
            "format": "int32"
          },
          "substituteVariationProductCode": {
            "type": "string",
            "description": "Variation product code to substitute once the trail period is finished.",
            "nullable": true
          },
          "substituteProductOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeProductOption"
            },
            "description": "Configurable Options to substitute once the trial period is finished.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Adjustment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internalComment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionReason": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "moreInfo": {
            "type": "string",
            "nullable": true
          },
          "actionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvalidCoupon": {
        "type": "object",
        "properties": {
          "couponCode": {
            "type": "string",
            "description": "Code that identifies the coupon.",
            "nullable": true
          },
          "reasonCode": {
            "type": "integer",
            "description": "Code that identifies the reason the coupon was invalid.",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "description": "Description text of the reason.",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "description": "Create date of the invalid coupon.",
            "format": "date-time"
          },
          "discountId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a coupon that is considered invalid by the Mozu pricing service."
      },
      "SubscriptionAction": {
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "$ref": "#/components/schemas/SubscriptionReason"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionReasonOption": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "needsMoreInfo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionReasonCollection": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionReasonOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingPrice": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "ISO currency code such as US dollars. Currently, only USD is supported.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "How much the customer pays for shipping which includes any shipping discounts that the merchant offers.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Shipping pricing information which includes the cost to the merchant and the price that the customer pays."
      },
      "SuggestedDiscount": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "autoAdd": {
            "type": "boolean"
          },
          "discountId": {
            "type": "integer",
            "format": "int32"
          },
          "hasMultipleProducts": {
            "type": "boolean"
          },
          "hasOptions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExtendedProperty": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlternateContact": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First Name of alternate contact during order process",
            "nullable": true
          },
          "lastNameOrSurname": {
            "type": "string",
            "description": "Last Name of alternate contact during order process",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "Email Address of alternate contact during order process",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone Number of alternate contact during order process",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionInfo": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Indicates commerce item is subscribed or not.",
            "nullable": true
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "trial": {
            "$ref": "#/components/schemas/Trial"
          }
        },
        "additionalProperties": false
      },
      "GiftInfo": {
        "type": "object",
        "properties": {
          "isGiftItem": {
            "type": "boolean",
            "description": "Flag to indicate whether the item is a gift item",
            "nullable": true
          },
          "giftMessage": {
            "type": "string",
            "description": "Item level gift message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReturnRuleInfo": {
        "type": "object",
        "properties": {
          "isReturnable": {
            "type": "boolean",
            "description": "Indicate product is returnable or not",
            "nullable": true
          },
          "maxQty": {
            "type": "integer",
            "description": "Maximum quantity that can be returned",
            "format": "int32",
            "nullable": true
          },
          "maxDays": {
            "type": "integer",
            "description": "Return window within which an item can be returned",
            "format": "int32",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "description": "Return rule code which is applied",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderValidationMessage": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "description": "Order item id that this message applies to.  Can be empty.",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "description": "Identifier to indicate the type of the message, See OrderValidatorMessageTypeConst for options.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Actual message returned by the validator.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Validation message returned by an order validator."
      },
      "OrderValidationResult": {
        "type": "object",
        "properties": {
          "validationId": {
            "type": "string",
            "description": "Identifier set by the capability that states the id of this specific validation attempt",
            "nullable": true
          },
          "validatorName": {
            "type": "string",
            "description": "Identifier set by the capability that states the specific name of this validator.",
            "nullable": true
          },
          "validatorType": {
            "type": "string",
            "description": "Identifies the type of the validator (types are enumerated in OrderValidatorTypeConst)",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the order validation result.  See OrderValidatorStatusConst for options.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "DateTime that this validation result was created",
            "format": "date-time",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderValidationMessage"
            },
            "description": "Messages returned by the order validator",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The result of an order validator."
      },
      "Refund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of this order transaction.",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "description": "Unique identifier of the order with which this refund is associated.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Merchant-entered reason for this refund.",
            "nullable": true
          },
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "amount": {
            "type": "number",
            "description": "Amount refunded.",
            "format": "double"
          },
          "refundMethod": {
            "type": "string",
            "description": "Refund Method.",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false,
        "description": "Refund associated with an order. A refund is a single exchange of money from merchant to customer\r\nthat either encapsulates a refund to a credit card or an issuance of a store credit.\r\nA refund does not reduce the 'amount collected' on an order and it is possible for a refund to exceed the total order amount."
      },
      "AbstractFulfillmentItem": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Code of the Product to be fulfilled.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the order item",
            "format": "int32"
          },
          "fulfillmentItemType": {
            "type": "string",
            "description": "The type of fulfillment item",
            "nullable": true
          },
          "lineId": {
            "type": "integer",
            "description": "The line id associated with the fulfillment.",
            "format": "int32",
            "nullable": true
          },
          "optionAttributeFQN": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackageItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractFulfillmentItem"
          }
        ],
        "additionalProperties": false,
        "description": "An item in a package representing a particular product."
      },
      "CollectionOfPackageItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the fulfillment unit.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "A human-readable identifier for this fulfillment unit.  If not set on create, will be autogenerated as a string of the form\r\n    {fulfillmentUnitType} #{next available int}",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the fulfillment unit\r\nSee FulfillmentStatusConst",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageItem"
            },
            "description": "List of items in the fulfillment unit",
            "nullable": true
          },
          "fulfillmentDate": {
            "type": "string",
            "description": "Date of the pickup",
            "format": "date-time",
            "nullable": true
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "description": "Location code from which to obtain this item",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "availableActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Actions that can be taken on this fulfillment unit",
            "nullable": true
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "description": "Change messages related to the fulfillment unit.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PackingSlipItemDetail": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Gets or Sets Attributes",
            "nullable": true
          },
          "lineId": {
            "type": "integer",
            "description": "Gets or Sets LineId",
            "format": "int32",
            "nullable": true
          },
          "originalOrderItemId": {
            "type": "string",
            "description": "Gets or Sets OriginalOrderItemId",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Gets or Sets Quantity",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollectionOfPickupItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the fulfillment unit.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "A human-readable identifier for this fulfillment unit.  If not set on create, will be autogenerated as a string of the form\r\n    {fulfillmentUnitType} #{next available int}",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the fulfillment unit\r\nSee FulfillmentStatusConst",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimePickupItem"
            },
            "description": "List of items in the fulfillment unit",
            "nullable": true
          },
          "fulfillmentDate": {
            "type": "string",
            "description": "Date of the pickup",
            "format": "date-time",
            "nullable": true
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "description": "Location code from which to obtain this item",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "availableActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Actions that can be taken on this fulfillment unit",
            "nullable": true
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "description": "Change messages related to the fulfillment unit.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Pickup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfPickupItem"
          }
        ],
        "additionalProperties": false,
        "description": "Represents a pickup by a customer from a merchant."
      },
      "DigitalPackageItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractFulfillmentItem"
          }
        ],
        "properties": {
          "giftCardCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollectionOfDigitalPackageItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the fulfillment unit.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "A human-readable identifier for this fulfillment unit.  If not set on create, will be autogenerated as a string of the form\r\n    {fulfillmentUnitType} #{next available int}",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the fulfillment unit\r\nSee FulfillmentStatusConst",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigitalPackageItem"
            },
            "description": "List of items in the fulfillment unit",
            "nullable": true
          },
          "fulfillmentDate": {
            "type": "string",
            "description": "Date of the pickup",
            "format": "date-time",
            "nullable": true
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "description": "Location code from which to obtain this item",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "availableActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Actions that can be taken on this fulfillment unit",
            "nullable": true
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "description": "Change messages related to the fulfillment unit.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DigitalPackage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfDigitalPackageItem"
          }
        ],
        "additionalProperties": false
      },
      "FulfillmentTask": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CommerceRuntimeLink"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "completed": {
            "type": "boolean",
            "nullable": true
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeTaskInput"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "skippable": {
            "type": "boolean",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "taskId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentShopperNotes": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "string",
            "nullable": true
          },
          "deliveryInstructions": {
            "type": "string",
            "nullable": true
          },
          "giftMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentAlternateContact": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First Name of alternate contact during order process",
            "nullable": true
          },
          "lastNameOrSurname": {
            "type": "string",
            "description": "Last Name of alternate contact during order process",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email Address of alternate contact during order process",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone Number of alternate contact during order process",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceAppeasementReason": {
        "type": "object",
        "properties": {
          "moreInfo": {
            "type": "string",
            "nullable": true
          },
          "reasonCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceAuditInfo": {
        "type": "object",
        "properties": {
          "createBy": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updateBy": {
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceFulfillmentField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "userEnteredValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceGiftCard": {
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "creditType": {
            "type": "string",
            "nullable": true
          },
          "creditValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "initialBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceInventoryTag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceProductOption": {
        "type": "object",
        "properties": {
          "attributeFQN": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shopperEnteredValue": {
            "nullable": true
          },
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceReturnRuleInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "isReturnable": {
            "type": "boolean",
            "nullable": true
          },
          "maxDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ruleCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceSubstituteInfo": {
        "type": "object",
        "properties": {
          "optIn": {
            "type": "string",
            "nullable": true
          },
          "substituteProductCode": {
            "type": "string",
            "nullable": true
          },
          "substituteVariantCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfillmentServiceSubstituteReason": {
        "type": "object",
        "properties": {
          "moreInfo": {
            "type": "string",
            "nullable": true
          },
          "reasonCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionNextOrderDate": {
        "type": "object",
        "properties": {
          "nextOrderDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionAdjustment": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SubscriptionReason"
          },
          "itemAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shippingAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "handlingAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstallmentPlanRequest": {
        "type": "object",
        "properties": {
          "installmentPlanCode": {
            "type": "string",
            "description": "Installment Plan code on the subscription. Installment is only supported on subscription orders",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Installment plan to be updated on the subscription"
      },
      "SubscriptionPriceList": {
        "type": "object",
        "properties": {
          "priceListCode": {
            "type": "string",
            "description": "Price-list code for the Subscription",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionCoupons": {
        "type": "object",
        "properties": {
          "couponCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserAuditInfo": {
        "type": "object",
        "properties": {
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updateBy": {
            "type": "string",
            "nullable": true
          },
          "createBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimePackage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfPackageItem"
          }
        ],
        "properties": {
          "shippingMethodCode": {
            "type": "string",
            "description": "Code describing the shipping method.",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "description": "Name of the shipping method",
            "nullable": true
          },
          "shipmentId": {
            "type": "string",
            "description": "ID of the related shipment",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "description": "Tracking number of this package (to support classic use cases)",
            "nullable": true
          },
          "trackingNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tracking number of this package",
            "nullable": true
          },
          "packagingType": {
            "type": "string",
            "description": "Packaging type of this package",
            "nullable": true
          },
          "hasLabel": {
            "type": "boolean",
            "description": "If there is a shipping label present for this Package, this will be set to true"
          },
          "measurements": {
            "$ref": "#/components/schemas/CommerceRuntimePackageMeasurements"
          },
          "carrier": {
            "type": "string",
            "description": "Carrier of this package",
            "nullable": true
          },
          "signatureRequired": {
            "type": "boolean",
            "description": "SignatureRequired for this package",
            "nullable": true
          },
          "trackings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeTracking"
            },
            "description": "Tracking number and url data for this package",
            "nullable": true
          },
          "packingSlipItemDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackingSlipItemDetail"
            },
            "description": "PackingSlipItemDetails for this package",
            "nullable": true
          },
          "packingSlipNumber": {
            "type": "integer",
            "description": "PackingSlipNumber for this package",
            "format": "int32",
            "nullable": true
          },
          "returnTrackings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeTracking"
            },
            "nullable": true
          },
          "returnTrackingNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "returnCarrier": {
            "type": "string",
            "nullable": true
          },
          "packageId": {
            "type": "string",
            "nullable": true
          },
          "manifestId": {
            "type": "string",
            "nullable": true
          },
          "labelFormat": {
            "type": "string",
            "nullable": true
          },
          "integratorId": {
            "type": "string",
            "nullable": true
          },
          "fxcbPackNotificationId": {
            "type": "string",
            "nullable": true
          },
          "fxcbDocumentsUrl": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Describes a package that will be shipped to somebody"
      },
      "CommerceRuntimePhone": {
        "type": "object",
        "properties": {
          "home": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "work": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "address4": {
            "type": "string",
            "nullable": true
          },
          "cityOrTown": {
            "type": "string",
            "nullable": true
          },
          "stateOrProvince": {
            "type": "string",
            "nullable": true
          },
          "postalOrZipCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "isValidated": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeContact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleNameOrInitial": {
            "type": "string",
            "nullable": true
          },
          "lastNameOrSurname": {
            "type": "string",
            "nullable": true
          },
          "companyOrOrganization": {
            "type": "string",
            "nullable": true
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/CommerceRuntimePhone"
          },
          "address": {
            "$ref": "#/components/schemas/CommerceRuntimeAddress"
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeDiscount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the discount.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the discount in the language specified by LocaleCode.",
            "nullable": true
          },
          "itemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of discounts for each order item.",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Date when the discount expires. Default is null (no expiration date).",
            "format": "date-time",
            "nullable": true
          },
          "hasMultipleTargetProducts": {
            "type": "boolean",
            "description": "Indicates that the discount targets more than a product.  Used\r\nprimarily for BoGa discounts with multiple targets."
          }
        },
        "additionalProperties": false,
        "description": "Discounts that apply to the order, if any. For example, when the \r\nsubtotal of the order exceeds a certain amount, or for free shipping."
      },
      "SubscriptionRuntimeAppliedDiscount": {
        "type": "object",
        "properties": {
          "impact": {
            "type": "number",
            "description": "Value of the discount applied. This is a negative number to be subtracted from the original price to get the final price.",
            "format": "double",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/CommerceRuntimeDiscount"
          },
          "couponCode": {
            "type": "string",
            "description": "Code of the coupon associated with the discount if a coupon code is required to get the discount.",
            "nullable": true
          },
          "excluded": {
            "type": "boolean",
            "description": "Determines whether or not this discount is set up to be ignored by the pricing runtime.",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Stores any custom data sent from external discounts.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Discount applied to the order, which is a negative number to be subtracted from the original price to get the final price. \r\nIf multiple discounts for the order exist, this is the value most advantageous to the shopper."
      },
      "CommerceRuntimeChangeMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the  message. System-supplied. Read-only.",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "description": "Correlation Id",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User Id that identifies the user that performed the related change",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "User First Name",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "User Last Name",
            "nullable": true
          },
          "userScopeType": {
            "type": "string",
            "description": "User Type (e.g. Shopper, Admin, etc.)",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "description": "App Id that identifies the user that performed the related change",
            "nullable": true
          },
          "appKey": {
            "type": "string",
            "description": "App Key",
            "nullable": true
          },
          "appName": {
            "type": "string",
            "description": "App Name",
            "nullable": true
          },
          "subjectType": {
            "type": "string",
            "description": "Subject of the message, for example, \"Product.\" System-supplied. Read-only.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "Indicates if the message is related to a success or failure.",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "description": "Unique identifier to what the message pertains, which can be a cart item, cart or another generic entity. System-supplied. Read-only.",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Text on the subject line of the message, for example, the product name. System-supplied. Read-only.",
            "nullable": true
          },
          "verb": {
            "type": "string",
            "description": "Action applicable to the message. This can be \"Increased,\" when the product price has increased, \"Decreased,\" when the \r\nproduct price has decreased, and \"Invalidated,\" when the product is no longer available. System-supplied. Read-only.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Human readable message. System-supplied. Read-only.",
            "nullable": true
          },
          "metadata": {
            "description": "Data. This property will be a JSON array that will contain 0-N items, when there is 1 item it will still be an array containing only one item. System-supplied. Read-only.",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "description": "Original price of the item. System-supplied. Read-only.",
            "nullable": true,
            "deprecated": true
          },
          "newValue": {
            "type": "string",
            "description": "Current price of the item. System-supplied. Read-only.",
            "nullable": true,
            "deprecated": true
          },
          "amount": {
            "type": "number",
            "description": "Monetary amount that pertains to the change if applicable",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "createDate": {
            "type": "string",
            "description": "When the message was created. System-supplied. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Additional Data. This property will be a Dictionary of objects.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A message displayed by the system based on the last  action, for example, when a product price has changed. System-supplied and read-only."
      },
      "CommerceRuntimeThresholdMessage": {
        "type": "object",
        "properties": {
          "discountId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "thresholdValue": {
            "type": "number",
            "format": "double"
          },
          "showOnCheckout": {
            "type": "boolean"
          },
          "showInCart": {
            "type": "boolean"
          },
          "requiresCouponCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeCommerceAggregate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier of the shopper who created the cart.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the CommerceAggregate object (e.g. order, cart, wishlist, etc.).",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "description": "Unique identifier of the Tenant.",
            "format": "int32",
            "nullable": true
          },
          "siteId": {
            "type": "integer",
            "description": "Unique identifier of the Site.",
            "format": "int32",
            "nullable": true
          },
          "channelCode": {
            "type": "string",
            "description": "Unique identifier of the channel for this item.",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "description": "ISO Currency Code. Currently, only USD is supported.",
            "nullable": true
          },
          "visitId": {
            "type": "string",
            "description": "Identifies the Visit ID that was current when the order was placed or when the cart was last updated.",
            "nullable": true
          },
          "webSessionId": {
            "type": "string",
            "description": "Identifies the web session used to place the order or last update the cart.",
            "nullable": true
          },
          "customerInteractionType": {
            "type": "string",
            "description": "Determines the interaction type that a customer will use to create this object.\r\nValid values are: Website, Store, Call, Unknown",
            "nullable": true
          },
          "fulfillmentInfo": {
            "$ref": "#/components/schemas/FulfillmentInfo"
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
            },
            "description": "The discount that has been applied to the cart itself. If multiple discounts exist, this is the discount that the system applies because it offers the best savings for the shopper. This is a negative number.",
            "nullable": true
          },
          "suggestedDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestedDiscount"
            },
            "nullable": true
          },
          "rejectedDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestedDiscount"
            },
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data for a given vendor set within the commerce process.",
            "nullable": true
          },
          "taxData": {
            "type": "object",
            "description": "Storage for any additional/custom tax data.",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "description": "Combined price for all cart items, including all selected options but excluding any discounts.",
            "format": "double",
            "nullable": true
          },
          "discountedSubtotal": {
            "type": "number",
            "description": "Combined price for all cart items, including all selected options as well as any discounts.",
            "format": "double",
            "nullable": true
          },
          "discountTotal": {
            "type": "number",
            "description": "Amount of the discounts applied to all items in the cart. This is a negative number.  This also includes the order level discounts.",
            "format": "double",
            "nullable": true
          },
          "discountedTotal": {
            "type": "number",
            "description": "Subtotal minus the discounted total",
            "format": "double",
            "nullable": true
          },
          "shippingTotal": {
            "type": "number",
            "description": "Shipping does not appear on cart.",
            "format": "double",
            "nullable": true
          },
          "shippingSubTotal": {
            "type": "number",
            "description": "Shipping total without discounts applied.",
            "format": "double",
            "nullable": true
          },
          "shippingTaxTotal": {
            "type": "number",
            "description": "Not implemented. Tax does not appear on cart.",
            "format": "double",
            "nullable": true
          },
          "handlingTaxTotal": {
            "type": "number",
            "description": "Total tax on handling",
            "format": "double",
            "nullable": true
          },
          "itemTaxTotal": {
            "type": "number",
            "description": "Not implemented. Tax does not appear on cart.",
            "format": "double",
            "nullable": true
          },
          "taxTotal": {
            "type": "number",
            "description": "Tax does not appear on cart.",
            "format": "double",
            "nullable": true
          },
          "feeTotal": {
            "type": "number",
            "description": "Not implemented. Total cost of fees for all items in the cart.",
            "format": "double",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "Final total amount of the order including all discounts, shipping, and tax.",
            "format": "double",
            "nullable": true
          },
          "lineItemSubtotalWithOrderAdjustments": {
            "type": "number",
            "description": "Line Item Subtotals with Order Adjustments",
            "format": "double",
            "nullable": true
          },
          "shippingAmountBeforeDiscountsAndAdjustments": {
            "type": "number",
            "description": "Shipping Amount before discount and adjustments",
            "format": "double",
            "nullable": true
          },
          "lastValidationDate": {
            "type": "string",
            "description": "Occasionally the commerce runtime may validate that item/product names, descriptions, and prices have not changed. \r\nIf changed, it updates LastValidationDate.",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "When the order will no longer be active. That is, the order is considered abandoned. \r\nOrders of anonymous shoppers expire after 14 days of inactivity. \r\nAn order never expires for shoppers who are logged into their account. \r\nDate in UTC Date/Time.",
            "format": "date-time",
            "nullable": true
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "description": "List of messages displayed by the system based on the last cart action, for example, when a product price has changed or is out-of-stock. System-supplied and read-only.",
            "nullable": true
          },
          "extendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extra properties (key-value pairs) that extend the primary object. Think of this as a property bag of string keys and string values.",
            "nullable": true
          },
          "discountThresholdMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeThresholdMessage"
            },
            "description": "List of Mozu.CommerceRuntime.Contracts.Commerce.ThresholdMessage objects that are valid for the current value of the cart/order.",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false,
        "description": "Base class for cart and order"
      },
      "CommerceRuntimeFutureInventory": {
        "type": "object",
        "properties": {
          "futureInventoryID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "onhand": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "available": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allocated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pending": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeMeasurement": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimePackageMeasurements": {
        "type": "object",
        "properties": {
          "height": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          },
          "width": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          },
          "length": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          },
          "weight": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          }
        },
        "additionalProperties": false,
        "description": "Physical dimensions of the package required to ship the product and its weight."
      },
      "CommerceRuntimeProductOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the product option that appears with the order item in the language specified by LocaleCode.",
            "nullable": true
          },
          "value": {
            "description": "Value of the product option.",
            "nullable": true
          },
          "shopperEnteredValue": {
            "description": "The value entered by the shopper if this is an option that requires shopper input, for example, a monogram.",
            "nullable": true
          },
          "attributeFQN": {
            "type": "string",
            "description": "Value of the product option.",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "Value of the product option.",
            "nullable": true
          },
          "stringValue": {
            "type": "string",
            "description": "Value of the product option.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product option for the product listed on this order item. If the product contains \r\nconfigurable or stand-alone options, this is a product option that the shopper has selected."
      },
      "CommerceRuntimeProductPropertyValue": {
        "type": "object",
        "properties": {
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeProductProperty": {
        "type": "object",
        "properties": {
          "attributeFQN": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "isMultiValue": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeProductPropertyValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the category. System-supplied and read-only.",
            "format": "int32",
            "nullable": true
          },
          "parent": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "description": "Categories to which the product belongs. Discounts can apply to categories where any product in the category is discounted."
      },
      "CommerceRuntimeProductPrice": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price of the product. This is the price that the merchant intends to sell the product if no sale price is present.",
            "format": "double",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "Current sale price of the product, which is a specific numerical amount (not a percentage off).",
            "format": "double",
            "nullable": true
          },
          "tenantOverridePrice": {
            "type": "number",
            "description": "An override price applied on the product by the tenant.",
            "format": "double",
            "nullable": true
          },
          "msrp": {
            "type": "number",
            "description": "MSRP of product.",
            "format": "double",
            "nullable": true
          },
          "creditValue": {
            "type": "number",
            "description": "Credit Value when the product happens to be a gift card or similar product",
            "format": "double",
            "nullable": true
          },
          "priceListCode": {
            "type": "string",
            "description": "Pricelist code for the product",
            "nullable": true
          },
          "priceListEntryMode": {
            "type": "string",
            "description": "Pricelist entry mode of the product.\r\nNote: possible values are below\r\n1. null : Product doesn't participate in pricelist\r\n2. Bulk : Bulk volume price available(unit price vary based on quantity)\r\n3. Simple:",
            "nullable": true
          },
          "isOverRidePriceSalePrice": {
            "type": "boolean",
            "description": "Indicate that External Price (TenantOverridePrice) is a Sale Price. And is used to calculate the line item discounts.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Price of the product with any sale and discounts applied."
      },
      "CommerceRuntimeBundledProduct": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductBase"
          }
        ],
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "Quantity of the product included in the bundle.",
            "format": "int32"
          },
          "optionAttributeFQN": {
            "type": "string",
            "description": "Fully Qualified Name of the selected option's attribute",
            "nullable": true
          },
          "optionValue": {
            "description": "Value of the selected option",
            "nullable": true
          },
          "creditValue": {
            "type": "number",
            "description": "Credit value.  Only populated if the bundled product is a gift card or digital credit",
            "format": "double",
            "nullable": true
          },
          "deltaPrice": {
            "type": "number",
            "description": "Only populated for extras",
            "format": "double",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "ImageUrl of product",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Describes products that are bundled inside of a main bundle product."
      },
      "CommerceRuntimeFulfillmentField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "userEnteredValue": {
            "nullable": true
          },
          "required": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeProduct": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductBase"
          }
        ],
        "properties": {
          "mfgPartNumber": {
            "type": "string",
            "description": "Manufacturing Part Number of the product.",
            "nullable": true
          },
          "upc": {
            "type": "string",
            "description": "Universal Product Code of the product.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "description": "Product Identifier specific to the store",
            "nullable": true
          },
          "fulfillmentTypesSupported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of fulfillment that are supported for this product.",
            "nullable": true
          },
          "imageAlternateText": {
            "type": "string",
            "description": "Descriptive text of the image associated with the product in the language specified by LocaleCode.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "URL of the image that appears next to the product on the order item. Optional.",
            "nullable": true
          },
          "variationProductCode": {
            "type": "string",
            "description": "For configurable products, the unique identifier of the product variation that has been selected.",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeProductOption"
            },
            "description": "If the product contains configurable or stand-alone options, the list of product options that the shopper selected for this product.",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeProductProperty"
            },
            "description": "If the product contains properties, the list of properties that the shopper selected for this product.",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeCategory"
            },
            "description": "Categories to which this product belongs.",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/CommerceRuntimeProductPrice"
          },
          "discountsRestricted": {
            "type": "boolean",
            "description": "Is the product discount restricted",
            "nullable": true
          },
          "discountsRestrictedStartDate": {
            "type": "string",
            "description": "Product discount restriction start date",
            "format": "date-time",
            "nullable": true
          },
          "discountsRestrictedEndDate": {
            "type": "string",
            "description": "Product discount restriction end date",
            "format": "date-time",
            "nullable": true
          },
          "isRecurring": {
            "type": "boolean",
            "description": "If true, the product is purchased or fulfilled at regular intervals, for example, a monthly billing or a subscription.",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean",
            "description": "If true, the product is eligible for tax.",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "description": "Type of product, which can be a product with configurable options, a product with stand-alone options, or a simple product with no options.",
            "nullable": true
          },
          "productUsage": {
            "type": "string",
            "description": "Usage of the product, primarily used to indicate a bundle in this context",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial Number",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "description": "Condition",
            "nullable": true
          },
          "bundledProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeBundledProduct"
            },
            "description": "Products bundled with this product (if the current product is a bundle)",
            "nullable": true
          },
          "fulfillmentFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeFulfillmentField"
            },
            "description": "List of unique product identifiers for an item on shipment",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The product as it appears on the order item."
      },
      "CommerceRuntimeOrderAttribute": {
        "type": "object",
        "properties": {
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true
          },
          "attributeDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeOrderItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeCommerceItem"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the order line item. System-supplied and read-only.",
            "nullable": true
          },
          "destinationId": {
            "type": "string",
            "description": "The destination associated with this item when used with a multi-ship checkout.",
            "nullable": true
          },
          "originalCartItemId": {
            "type": "string",
            "description": "Unique identifier of the cart item that is associated with this line item. \r\n(This is the original Cart Item ID expressed as a GUID.)",
            "nullable": true
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "description": "Location code from which to obtain this item",
            "nullable": true
          },
          "fulfillmentMethod": {
            "type": "string",
            "description": "Fulfillment method used to fulfill this item",
            "nullable": true
          },
          "dutyAmount": {
            "type": "number",
            "description": "Duty or Tariff for this item",
            "format": "double",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Expected Delivery Date of shipment",
            "format": "date-time",
            "nullable": true
          },
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionInfo"
          },
          "isReservationEnabled": {
            "type": "boolean",
            "description": "Flag to indicate reserve inventory in cart"
          },
          "giftInfo": {
            "$ref": "#/components/schemas/GiftInfo"
          },
          "priceMode": {
            "type": "string",
            "description": "Determines if the item is using external or internal(catalog) pricing",
            "nullable": true
          },
          "returnRuleInfo": {
            "$ref": "#/components/schemas/ReturnRuleInfo"
          }
        },
        "additionalProperties": false,
        "description": "A single line item of an order."
      },
      "CommerceRuntimeDestination": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "An identifier for this entry.",
            "nullable": true
          },
          "destinationContact": {
            "$ref": "#/components/schemas/CommerceRuntimeContact"
          },
          "isDestinationCommercial": {
            "type": "boolean",
            "description": "Indicates that the destination is commercial",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimePurchaseOrderPaymentTerm": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimePurchaseOrderCustomField": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeShopperNotes": {
        "type": "object",
        "properties": {
          "giftMessage": {
            "type": "string",
            "description": "Gift message associated with this order.",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Comments associated with this order.",
            "nullable": true
          },
          "deliveryInstructions": {
            "type": "string",
            "description": "DeliveryInstructions associated with this order.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Notes that the shopper has added to this order, for example, a gift message or other comments."
      },
      "SubscriptionRuntimeShippingRate": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ShippingPrice"
          }
        ],
        "properties": {
          "shippingMethodCode": {
            "type": "string",
            "description": "Code that uniquely identifies the selected shipping method.",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "description": "Shipping Method Name",
            "nullable": true
          },
          "shippingZoneCode": {
            "type": "string",
            "description": "The shipping zone to which this rate applies.",
            "nullable": true
          },
          "isValid": {
            "type": "boolean",
            "description": "If true, the shipping rate is valid.",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Messages and detail about why the shipping rate may be invalid.",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data returned by the shipping service.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "How much the customer and merchant pay for shipping based on the current shipping rate. \r\nThe cost can differ between the merchant and customer depending on any merchant discounts or \r\nextra fees."
      },
      "CommerceRuntimeTracking": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeCredit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of this order transaction.",
            "nullable": true
          },
          "parentPaymentId": {
            "type": "string",
            "description": "The paymentid of the Parent Payment associated with this Credit (if applicable).",
            "nullable": true
          },
          "parentPaymentInteractionId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount credited.",
            "format": "double"
          },
          "giftCard": {
            "$ref": "#/components/schemas/GatewayGiftCard"
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimePickupItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractFulfillmentItem"
          }
        ],
        "additionalProperties": false,
        "description": "Item that goes into the pickup to determine which items will be picked up."
      },
      "CommerceRuntimeShipmentStatusReason": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "moreInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeLink": {
        "type": "object",
        "properties": {
          "deprecation": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "hreflang": {
            "type": "string",
            "nullable": true
          },
          "media": {
            "type": "string",
            "nullable": true
          },
          "rel": {
            "type": "string",
            "nullable": true
          },
          "templated": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeTaskInput": {
        "type": "object",
        "properties": {
          "helpMessage": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximum": {
            "type": "number",
            "format": "double"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minimum": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {},
            "nullable": true
          },
          "pattern": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeWorkflowState": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "shipmentState": {
            "type": "string",
            "nullable": true
          },
          "taskList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulfillmentTask"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeGiftCard": {
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "creditType": {
            "type": "string",
            "nullable": true
          },
          "creditValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "initialBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeShipmentItem": {
        "type": "object",
        "properties": {
          "lineId": {
            "type": "integer",
            "format": "int32"
          },
          "originalOrderItemId": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "variationProductCode": {
            "type": "string",
            "nullable": true
          },
          "optionAttributeFQN": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "actualPrice": {
            "type": "number",
            "format": "double"
          },
          "overridePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemDiscount": {
            "type": "number",
            "format": "double"
          },
          "lineItemCost": {
            "type": "number",
            "format": "double"
          },
          "itemTax": {
            "type": "number",
            "format": "double"
          },
          "shipping": {
            "type": "number",
            "format": "double"
          },
          "shippingDiscount": {
            "type": "number",
            "format": "double"
          },
          "shippingTax": {
            "type": "number",
            "format": "double"
          },
          "handling": {
            "type": "number",
            "format": "double"
          },
          "handlingDiscount": {
            "type": "number",
            "format": "double"
          },
          "handlingTax": {
            "type": "number",
            "format": "double"
          },
          "duty": {
            "type": "number",
            "format": "double"
          },
          "isPackagedStandAlone": {
            "type": "boolean",
            "nullable": true
          },
          "readyForPickupQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "backorderReleaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "measurements": {
            "$ref": "#/components/schemas/CommerceRuntimePackageMeasurements"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeProductOption"
            },
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "taxData": {
            "type": "object",
            "nullable": true
          },
          "weightedShipmentAdjustment": {
            "type": "number",
            "format": "double"
          },
          "weightedLineItemTaxAdjustment": {
            "type": "number",
            "format": "double"
          },
          "weightedShippingAdjustment": {
            "type": "number",
            "format": "double"
          },
          "weightedShippingTaxAdjustment": {
            "type": "number",
            "format": "double"
          },
          "weightedHandlingAdjustment": {
            "type": "number",
            "format": "double"
          },
          "weightedHandlingTaxAdjustment": {
            "type": "number",
            "format": "double"
          },
          "weightedDutyAdjustment": {
            "type": "number",
            "format": "double"
          },
          "taxableShipping": {
            "type": "number",
            "format": "double"
          },
          "taxableLineItemCost": {
            "type": "number",
            "format": "double"
          },
          "taxableHandling": {
            "type": "number",
            "format": "double"
          },
          "fulfillmentFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeFulfillmentField"
            },
            "nullable": true
          },
          "isAssemblyRequired": {
            "type": "boolean",
            "nullable": true
          },
          "parentItemId": {
            "type": "string",
            "nullable": true
          },
          "childItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "giftCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeGiftCard"
            },
            "nullable": true
          },
          "locatorName": {
            "type": "string",
            "nullable": true
          },
          "inventoryTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTags"
            },
            "nullable": true
          },
          "lineItemAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isReservedInventory": {
            "type": "boolean"
          },
          "cartItemId": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "partNumber": {
            "type": "string",
            "nullable": true
          },
          "upc": {
            "type": "string",
            "nullable": true
          },
          "isSubstitutable": {
            "type": "boolean",
            "nullable": true
          },
          "originalLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originalQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "substituteQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseLocation": {
            "type": "string",
            "nullable": true
          },
          "isGift": {
            "type": "boolean",
            "description": "Indicate item is gift or not",
            "nullable": true
          },
          "giftMessage": {
            "type": "string",
            "description": "Gift message for item",
            "nullable": true
          },
          "priceMode": {
            "type": "string",
            "description": "Determines if the item is using external or internal(catalog) pricing",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "substituteInfo": {
            "$ref": "#/components/schemas/SubstituteInfo"
          },
          "allowsSubstitution": {
            "type": "boolean",
            "nullable": true
          },
          "returnRuleInfo": {
            "$ref": "#/components/schemas/ReturnRuleInfo"
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeCanceledReason": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "moreInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeCustomer": {
        "type": "object",
        "properties": {
          "customerContact": {
            "$ref": "#/components/schemas/CommerceRuntimeContact"
          },
          "data": {
            "description": "Custom data",
            "nullable": true
          },
          "isDestinationCommercial": {
            "type": "boolean",
            "description": "Destination Commercial Flag",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeShipmentNote": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "noteId": {
            "type": "string",
            "nullable": true
          },
          "noteText": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeFulfillmentServiceInventoryAllocation": {
        "type": "object",
        "properties": {
          "auditInfo": {
            "$ref": "#/components/schemas/FulfillmentServiceAuditInfo"
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fulfilledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inventoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lotCode": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeSubstitutedItem": {
        "type": "object",
        "properties": {
          "actualPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allocatedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowsBackOrder": {
            "type": "boolean",
            "nullable": true
          },
          "allowsFutureAllocate": {
            "type": "boolean",
            "nullable": true
          },
          "allowsSubstitution": {
            "type": "boolean",
            "nullable": true
          },
          "appeasementReason": {
            "$ref": "#/components/schemas/FulfillmentServiceAppeasementReason"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/FulfillmentServiceAuditInfo"
          },
          "autoSubstitution": {
            "type": "boolean",
            "nullable": true
          },
          "backorderReleaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cartItemId": {
            "type": "string",
            "nullable": true
          },
          "childItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "creditCurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "creditValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "duty": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fulfillmentFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulfillmentServiceFulfillmentField"
            },
            "nullable": true
          },
          "giftCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulfillmentServiceGiftCard"
            },
            "nullable": true
          },
          "giftMessage": {
            "type": "string",
            "nullable": true
          },
          "goodsType": {
            "type": "string",
            "nullable": true
          },
          "handling": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "handlingDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "handlingTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "inventoryAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeFulfillmentServiceInventoryAllocation"
            },
            "nullable": true
          },
          "inventoryTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulfillmentServiceInventoryTag"
            },
            "nullable": true
          },
          "isAssemblyRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isGift": {
            "type": "boolean",
            "nullable": true
          },
          "isPackagedStandAlone": {
            "type": "boolean",
            "nullable": true
          },
          "isReservedInventory": {
            "type": "boolean",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean",
            "nullable": true
          },
          "itemDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "length": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lineItemAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItemCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "locatorName": {
            "type": "string",
            "nullable": true
          },
          "manageStock": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "optionAttributeFQN": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FulfillmentServiceProductOption"
            },
            "nullable": true
          },
          "originalLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originalOrderItemId": {
            "type": "string",
            "nullable": true
          },
          "originalQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overridePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "parentItemId": {
            "type": "string",
            "nullable": true
          },
          "partNumber": {
            "type": "string",
            "nullable": true
          },
          "priceMode": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "purchaseLocation": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "readyForPickupQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "returnRuleInfo": {
            "$ref": "#/components/schemas/FulfillmentServiceReturnRuleInfo"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "shipping": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shippingDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shippingTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "substituteInfo": {
            "$ref": "#/components/schemas/FulfillmentServiceSubstituteInfo"
          },
          "substituteItemLineIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "substituteQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "substituteReason": {
            "$ref": "#/components/schemas/FulfillmentServiceSubstituteReason"
          },
          "taxData": {
            "nullable": true
          },
          "taxableHandling": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxableLineItemCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxableShipping": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "transferQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trueTransferQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "upc": {
            "type": "string",
            "nullable": true
          },
          "variationProductCode": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightUnit": {
            "type": "string",
            "nullable": true
          },
          "weightedDutyAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedHandlingAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedHandlingTaxAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedLineItemTaxAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedShipmentAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedShippingAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weightedShippingTaxAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeOrder": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeCommerceAggregate"
          }
        ],
        "properties": {
          "orderNumber": {
            "type": "integer",
            "description": "Order Number. This is an integer that is only assigned after an order is placed and enters the open state.",
            "format": "int32",
            "nullable": true
          },
          "locationCode": {
            "type": "string",
            "description": "Identifies the location at which the order was placed if the order was placed externally.",
            "nullable": true
          },
          "version": {
            "type": "string",
            "description": "Version for concurrency purposes",
            "nullable": true
          },
          "parentOrderId": {
            "type": "string",
            "description": "If this Order has a parent order, this should be the parent's ID.",
            "nullable": true
          },
          "parentOrderNumber": {
            "type": "integer",
            "description": "If this order has a parent order, this should be the parent's Mozu.CommerceRuntime.Contracts.Orders.Order.OrderNumber.",
            "format": "int32",
            "nullable": true
          },
          "parentCheckoutId": {
            "type": "string",
            "description": "If this order originated from a multi-ship enabled site, this is the identifier of the originating checkout.",
            "nullable": true
          },
          "parentCheckoutNumber": {
            "type": "integer",
            "description": "If this order originated from a multi-ship enabled site, this is the number of the originating checkout.",
            "format": "int32",
            "nullable": true
          },
          "partialOrderNumber": {
            "type": "integer",
            "description": "If this order originated from a checkout, this is a sequence number out of the total orders created from that checkout.",
            "format": "int32",
            "nullable": true
          },
          "partialOrderCount": {
            "type": "integer",
            "description": "If this order originated from a checkout, this is the total number of orders created from that checkout.",
            "format": "int32",
            "nullable": true
          },
          "isPartialOrder": {
            "type": "boolean",
            "description": "Returns {true} if this order originated from a checkout and has sibling partial orders, otherwise {false}."
          },
          "parentReturnId": {
            "type": "string",
            "description": "If this order was created as part of a return, this should be the return's ID.",
            "nullable": true
          },
          "parentReturnNumber": {
            "type": "integer",
            "description": "If this order was created as part of a return, this should be the return's ReturnNumber.",
            "format": "int32",
            "nullable": true
          },
          "originalCartId": {
            "type": "string",
            "description": "Unique identifier for the cart that was converted to order.",
            "nullable": true
          },
          "originalQuoteId": {
            "type": "string",
            "description": "If this order originated from a quote, this is the identifier of the originating quote.",
            "nullable": true
          },
          "originalQuoteNumber": {
            "type": "integer",
            "description": "If this order originated from a quote, this is the number of the originating quote.",
            "format": "int32",
            "nullable": true
          },
          "priceListCode": {
            "type": "string",
            "description": "Pricelist code for the order",
            "nullable": true
          },
          "availableActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Actions available to the payment",
            "nullable": true
          },
          "shopperNotes": {
            "$ref": "#/components/schemas/CommerceRuntimeShopperNotes"
          },
          "customerAccountId": {
            "type": "integer",
            "description": "Unique identifier of the customer account.",
            "format": "int32",
            "nullable": true
          },
          "customerTaxId": {
            "type": "string",
            "description": "The customers tax ID.  If Customer Account ID exists in the system, will set this.",
            "nullable": true
          },
          "isTaxExempt": {
            "type": "boolean",
            "description": "Unique identifier of the customer account.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address of the customer at the time the order is placed.",
            "nullable": true
          },
          "alternateContact": {
            "$ref": "#/components/schemas/AlternateContact"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the user placing the order. (User or customer?)",
            "nullable": true
          },
          "sourceDevice": {
            "type": "string",
            "description": "Source device of the user placing the order. (User or customer?)",
            "nullable": true
          },
          "acceptsMarketing": {
            "type": "boolean",
            "description": "Does the customer accept marketing",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Current status of the order, which can be viewed in OrderStatusConst. System-supplied and read-only.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Is this Order Online or Offline? Online means shopper entered at checkout, offline means a phone order.",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "description": "Current status of payment, which can be \"Null,\" \"AwaitingCheck,\" \"AwaitingPayment,\" \"Paid,\" \"Authorized,\" or \"Void.\" \r\nSystem-supplied and read-only.",
            "nullable": true
          },
          "returnStatus": {
            "type": "string",
            "description": "System-supplied and read-only.",
            "nullable": true
          },
          "isEligibleForReturns": {
            "type": "boolean",
            "description": "Marker for determining if the order is a) complete or b) has some items that are shipped and not part of any other return"
          },
          "totalCollected": {
            "type": "number",
            "description": "Total amount of money collected on the order via payments.",
            "format": "double"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeOrderAttribute"
            },
            "nullable": true
          },
          "adjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "shippingAdjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "handlingAdjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "shippingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeShippingDiscount"
            },
            "nullable": true
          },
          "handlingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
            },
            "description": "The list of historically-applied handling discounts.  The active one will have IsExcluded == false",
            "nullable": true
          },
          "handlingAmount": {
            "type": "number",
            "description": "Order level handling fees excluding any discounts.",
            "format": "double",
            "nullable": true
          },
          "handlingSubTotal": {
            "type": "number",
            "description": "Handling fees for the Order as well as OrderItems (e.g. if the Order has a $5 handling fee and an OrderItem has a $2 handling fee per item quantity and the quantity of items is 2 then the value in this property would be $9)",
            "format": "double",
            "nullable": true
          },
          "handlingTotal": {
            "type": "number",
            "description": "Handling fees including any discounts.",
            "format": "double",
            "nullable": true
          },
          "dutyAmount": {
            "type": "number",
            "description": "Order level duty or tariff amount. Does not take into account duties or tariffs specifically on items on the order",
            "format": "double",
            "nullable": true
          },
          "dutyTotal": {
            "type": "number",
            "description": "Duties or tariffs for the Order as well as OrderItems (e.g. if the Order has a $5 duty or tariff for any reason and an OrderItem has a $2 duty or tariff then the value in this property would be $7)",
            "format": "double",
            "nullable": true
          },
          "fulfillmentStatus": {
            "type": "string",
            "description": "Current fulfillment status, which can be \"NotFulfilled,\", \"PartiallyFulfilled\", or \"Fufilled.\" \r\nSystem-supplied and read-only.  Values are available in FulfillmentStatusConst of this class.",
            "nullable": true
          },
          "isFulfillable": {
            "type": "boolean",
            "description": "Flag to indicate whether it is safe to proceed with fulfillment on shipments on the order."
          },
          "submittedDate": {
            "type": "string",
            "description": "When the customer placed (submitted) the order.",
            "format": "date-time",
            "nullable": true
          },
          "shipmentCreationOffset": {
            "type": "integer",
            "description": "Release Shipment After(in minutes) (Order Submitted Date).",
            "format": "int32",
            "nullable": true
          },
          "releaseShipmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "type": "string",
            "description": "Date the order was cancelled.",
            "format": "date-time",
            "nullable": true
          },
          "closedDate": {
            "type": "string",
            "description": "Date the order was closed. A closed order means that the order has been processed and items shipped.",
            "format": "date-time",
            "nullable": true
          },
          "acceptedDate": {
            "type": "string",
            "description": "When the order was accepted by the merchant",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderNote"
            },
            "description": "Internal notes that a merchant may add to the order. Maximum 250 characters.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeOrderItem"
            },
            "description": "List of items in the order.",
            "nullable": true
          },
          "validationResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderValidationResult"
            },
            "description": "Validation results for the order when processes against validation capabilities.",
            "nullable": true
          },
          "billingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "description": "Payment transaction associated with this order. It is the entire payment interchange between the merchant \r\nwho is forwarding the customer's payment information and the payment service who is authorizing and \r\ncapturing payment. Payment can be either by credit card, check, or PayPal.",
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Refund"
            },
            "description": "Refunds associated with this order. A refund is a single exchange of money from merchant to customer\r\nthat either encapsulates a refund to a credit card or an issuance of a store credit.\r\nRefunds does not reduce the 'amount collected' on an order and it is possible for refunds to exceed the total order amount.",
            "nullable": true
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeCredit"
            },
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimePackage"
            },
            "description": "Shipping package associated with this order.",
            "nullable": true
          },
          "pickups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pickup"
            },
            "description": "Fulfillment pickups associated with this order.",
            "nullable": true
          },
          "digitalPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigitalPackage"
            },
            "description": "Fulfillment digital packages associated with this order.",
            "nullable": true
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeCommerceRuntimeShipment"
            },
            "description": "Package shipments associated with this order.",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean",
            "description": "Is this order a draft version",
            "nullable": true
          },
          "hasDraft": {
            "type": "boolean",
            "description": "Does this order have a draft version.",
            "nullable": true
          },
          "isImport": {
            "type": "boolean",
            "description": "Was this order initiated from an external system",
            "nullable": true
          },
          "isHistoricalImport": {
            "type": "boolean",
            "description": "Indicates this was an order in a terminal state (completed/canceled) that was imported into the system for historical purposes.",
            "nullable": true
          },
          "importDate": {
            "type": "string",
            "description": "Date this item was imported",
            "format": "date-time",
            "nullable": true
          },
          "isUnified": {
            "type": "boolean",
            "description": "Was this order created by the Unified platform."
          },
          "externalId": {
            "type": "string",
            "description": "An order number to link this order to an external system",
            "nullable": true
          },
          "couponCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Coupon codes associated with this order.  Only set on order import.",
            "nullable": true
          },
          "invalidCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidCoupon"
            },
            "description": "A list of invalid coupons that were attempted on the order",
            "nullable": true
          },
          "amountAvailableForRefund": {
            "type": "number",
            "description": "This property represents AmountCaptured - AmountRefunded via returns.\r\nIt is read only.",
            "format": "double"
          },
          "amountRemainingForPayment": {
            "type": "number",
            "description": "A counter for how much of the order total has not been claimed by payments.\r\nThis is computed by Order.Total-(sum of Order.Payments where State is not voided/declined)",
            "format": "double"
          },
          "amountRefunded": {
            "type": "number",
            "description": "A counter for how much money has been issued in refunds.\r\nThis calculated field does NOT include refunds issued in returns.",
            "format": "double"
          },
          "readyToCapture": {
            "type": "boolean"
          },
          "isOptInForSms": {
            "type": "boolean",
            "description": "Whether the shopper opts in to curbside text notifications."
          },
          "forceSTHConsolidationOnSplitShipments": {
            "type": "boolean",
            "description": "Overrides the Fulfillment SiteSetting value for `ForceSTHConsolidationOnSplitShipments`.\r\nTODO autogen instead of manual addition",
            "nullable": true
          },
          "subscriptionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All the subscriptions associated with the current order.",
            "nullable": true
          },
          "continuityOrderOrdinal": {
            "type": "integer",
            "description": "The ordinal to track the Continuity order.",
            "format": "int32"
          },
          "reservationId": {
            "type": "string",
            "description": "Inventory Reservation id for order.",
            "nullable": true
          },
          "restrictEdit": {
            "type": "boolean",
            "description": "Setting this flag on the order will restrict user from editing the order",
            "nullable": true
          },
          "restrictCancellation": {
            "type": "boolean",
            "description": "Settings this flag on the order will restrict user from Cancelling the order",
            "nullable": true
          },
          "isContinuityOrder": {
            "type": "boolean",
            "description": "Flag to check if the order is continuityOrder."
          }
        },
        "additionalProperties": false,
        "description": "Order form."
      },
      "SubscriptionRuntimeSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier.",
            "nullable": true
          },
          "siteId": {
            "type": "integer",
            "description": "Unique identifier of the Site.",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "description": "Unique identifier of the Tenant.",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "description": "Subscription number.",
            "format": "int32"
          },
          "parentOrderId": {
            "type": "string",
            "description": "The parent order id from which the subscription was created.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItem"
            },
            "description": "List of items in the Subscription.",
            "nullable": true
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "priceListCode": {
            "type": "string",
            "description": "Price-list code for the Subscription",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderNote"
            },
            "description": "Notes",
            "nullable": true
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "description": "Change Messages",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "fulfillmentInfo": {
            "$ref": "#/components/schemas/FulfillmentInfo"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "description": "Unique identifier of the customer account.",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address for checkout",
            "nullable": true
          },
          "customerTaxId": {
            "type": "string",
            "description": "The customers tax ID. If Customer Account ID exists in the system, will set this.",
            "nullable": true,
            "readOnly": true
          },
          "isTaxExempt": {
            "type": "boolean",
            "description": "Unique identifier of the customer account.",
            "nullable": true,
            "readOnly": true
          },
          "currencyCode": {
            "type": "string",
            "description": "ISO Currency Code.",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data for a given vendor set within the commerce process.",
            "nullable": true
          },
          "taxData": {
            "type": "object",
            "description": "Storage for any additional/custom tax data.",
            "nullable": true
          },
          "channelCode": {
            "type": "string",
            "description": "Unique identifier of the channel for this item.",
            "nullable": true
          },
          "locationCode": {
            "type": "string",
            "description": "Identifies the location at which the order was placed if the order was placed externally.",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the user placing the order. (User or customer?)",
            "nullable": true
          },
          "sourceDevice": {
            "type": "string",
            "description": "Source device of the user placing the order. (User or customer?)",
            "nullable": true
          },
          "visitId": {
            "type": "string",
            "description": "Identifies the Visit ID that was current when the order was placed or when the cart was last updated.",
            "nullable": true
          },
          "webSessionId": {
            "type": "string",
            "description": "Identifies the web session used to place the order or last update the cart.",
            "nullable": true
          },
          "customerInteractionType": {
            "type": "string",
            "description": "Determines the interaction type that a customer will use to create this object.\r\nValid values are: Website, Store, Call, Unknown",
            "nullable": true
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "previousFrequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "frequencyAuditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "nextOrderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "previousNextOrderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextOrderDateAuditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "lastContinuityOrderDateOnSubPaused": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "paymentErrorCode": {
            "type": "string",
            "nullable": true
          },
          "trial": {
            "$ref": "#/components/schemas/Trial"
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
            },
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "description": "Subtotal before any coupon codes, taxes, fees, etc.",
            "format": "double"
          },
          "itemLevelProductDiscountTotal": {
            "type": "number",
            "description": "The total value of item-level product discounts.",
            "format": "double"
          },
          "itemLevelAdjustmentsTotal": {
            "type": "number",
            "description": "The total value of all line item adjustments",
            "format": "double"
          },
          "orderLevelProductDiscountTotal": {
            "type": "number",
            "description": "The total value of order-level (group-level) product discounts.",
            "format": "double"
          },
          "itemTaxTotal": {
            "type": "number",
            "description": "Total tax on products.",
            "format": "double"
          },
          "adjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "itemTotal": {
            "type": "number",
            "description": "The total product cost, accounting for discounts and tax.",
            "format": "double"
          },
          "total": {
            "type": "number",
            "description": "Final total",
            "format": "double"
          },
          "shippingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeShippingDiscount"
            },
            "nullable": true
          },
          "itemLevelShippingDiscountTotal": {
            "type": "number",
            "format": "double"
          },
          "orderLevelShippingDiscountTotal": {
            "type": "number",
            "format": "double"
          },
          "shippingAmount": {
            "type": "number",
            "format": "double"
          },
          "shippingAdjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "shippingSubTotal": {
            "type": "number",
            "format": "double"
          },
          "shippingTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shippingTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "shippingTotal": {
            "type": "number",
            "format": "double"
          },
          "handlingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
            },
            "nullable": true
          },
          "itemLevelHandlingDiscountTotal": {
            "type": "number",
            "format": "double"
          },
          "orderLevelHandlingDiscountTotal": {
            "type": "number",
            "format": "double"
          },
          "handlingAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "handlingAdjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "handlingSubTotal": {
            "type": "number",
            "format": "double"
          },
          "handlingTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "handlingTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "handlingTotal": {
            "type": "number",
            "format": "double"
          },
          "dutyAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dutyTotal": {
            "type": "number",
            "format": "double"
          },
          "feeTotal": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionReason"
            },
            "nullable": true
          },
          "couponCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Coupon codes associated with this Subscription.",
            "nullable": true
          },
          "invalidCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidCoupon"
            },
            "description": "A list of invalid coupons that were attempted on the Subscription",
            "nullable": true
          },
          "isImport": {
            "type": "boolean"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "lineItemSubtotalWithOrderAdjustments": {
            "type": "number",
            "description": "Line Item Subtotals with Order Adjustments",
            "format": "double",
            "nullable": true
          },
          "discountedSubtotal": {
            "type": "number",
            "description": "Discounted Subtotal",
            "format": "double"
          },
          "nextOrderDateOffsetCounter": {
            "type": "integer",
            "description": "counter to keep track of nextOrderDate limit.",
            "format": "int32",
            "nullable": true
          },
          "skipCounter": {
            "type": "integer",
            "description": "counter to keep track of skip limit",
            "format": "int32",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean",
            "description": "Is this subscription a draft version",
            "nullable": true
          },
          "hasDraft": {
            "type": "boolean",
            "description": "Does this subscription have a draft version.",
            "nullable": true
          },
          "isPartialDraft": {
            "type": "boolean",
            "description": "Is this subscription draft is a partial draft."
          },
          "isOrderReminderEmailSent": {
            "type": "boolean",
            "description": "Has order reminder email sent."
          },
          "isReactivationReminderEmailSent": {
            "type": "boolean",
            "description": "Has reactivation reminder email sent."
          },
          "reactivationDate": {
            "type": "string",
            "description": "This property is being used for reactivation email templete",
            "format": "date-time"
          },
          "pauseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionAttribute"
            },
            "nullable": true
          },
          "processingErrorMessage": {
            "type": "string",
            "description": "LastErrorMessage from subscription ProcessingInfo.",
            "nullable": true
          },
          "lastOrderNowDate": {
            "type": "string",
            "description": "Indicate when \"order now\" and \"partial order now\" performed last time.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeSubscriptionCollection": {
        "type": "object",
        "properties": {
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeSubscription"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeAppliedProductDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
          }
        ],
        "properties": {
          "productQuantity": {
            "type": "integer",
            "description": "Quantity of products priced. This is always one unless calculating pricing on the order or cart.",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "impactPerUnit": {
            "type": "number",
            "description": "Impact for a quantity of one product; that is, the value of the discount for one product.",
            "format": "double",
            "nullable": true,
            "deprecated": true
          },
          "appliesToSalePrice": {
            "type": "boolean",
            "description": "Determines if the discount applies to the sale price of the order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of the discount applied to a product."
      },
      "SubscriptionRuntimeShippingDiscount": {
        "type": "object",
        "properties": {
          "methodCode": {
            "type": "string",
            "description": "Unique identifier of the shipping method discount.",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
          }
        },
        "additionalProperties": false,
        "description": "Value of the shipping discount."
      },
      "SubscriptionRuntimeCommerceRuntimeAppliedLineItemShippingDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeShippingDiscount"
          }
        ],
        "properties": {
          "methodCode": {
            "type": "string",
            "description": "Unique identifier of the shipping method discount.",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/SubscriptionRuntimeAppliedDiscount"
          },
          "discountQuantity": {
            "type": "integer",
            "description": "The number of the line item that can be used for this particular discount.",
            "format": "int32"
          },
          "impactPerUnit": {
            "type": "number",
            "description": "The impact of this discount pur discount quantity.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeCommerceRuntimeCanceledItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeShipmentItem"
          }
        ],
        "properties": {
          "originalQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canceledReason": {
            "$ref": "#/components/schemas/CommerceRuntimeCanceledReason"
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeCommerceRuntimeShipment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the shipment",
            "nullable": true
          },
          "externalShipmentId": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerTaxId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shipmentType": {
            "type": "string",
            "nullable": true
          },
          "shippingMethodCode": {
            "type": "string",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "nullable": true
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "$ref": "#/components/schemas/CommerceRuntimeContact"
          },
          "destination": {
            "$ref": "#/components/schemas/CommerceRuntimeDestination"
          },
          "shipmentStatus": {
            "type": "string",
            "nullable": true
          },
          "shipmentStatusReason": {
            "$ref": "#/components/schemas/CommerceRuntimeShipmentStatusReason"
          },
          "transferShipmentNumbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isTransfer": {
            "type": "boolean",
            "nullable": true
          },
          "originalShipmentNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentCheckoutNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentShipmentNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fulfillmentStatus": {
            "type": "string",
            "nullable": true
          },
          "workflowProcessId": {
            "type": "string",
            "nullable": true
          },
          "workflowProcessContainerId": {
            "type": "string",
            "nullable": true
          },
          "workflowState": {
            "$ref": "#/components/schemas/CommerceRuntimeWorkflowState"
          },
          "backorderCreatedDate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fulfillmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "futureDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderSubmitDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pickStatus": {
            "type": "string",
            "nullable": true
          },
          "pickType": {
            "type": "string",
            "nullable": true
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeChangeMessage"
            },
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimePackage"
            },
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeShipmentItem"
            },
            "nullable": true
          },
          "canceledItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeCommerceRuntimeCanceledItem"
            },
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "taxData": {
            "type": "object",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "shipmentAdjustment": {
            "type": "number",
            "format": "double"
          },
          "lineItemSubtotal": {
            "type": "number",
            "format": "double"
          },
          "lineItemTaxAdjustment": {
            "type": "number",
            "format": "double"
          },
          "lineItemTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "lineItemTotal": {
            "type": "number",
            "format": "double"
          },
          "shippingAdjustment": {
            "type": "number",
            "format": "double"
          },
          "shippingSubtotal": {
            "type": "number",
            "format": "double"
          },
          "shippingTaxAdjustment": {
            "type": "number",
            "format": "double"
          },
          "shippingTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "shippingTotal": {
            "type": "number",
            "format": "double"
          },
          "handlingAdjustment": {
            "type": "number",
            "format": "double"
          },
          "handlingSubtotal": {
            "type": "number",
            "format": "double"
          },
          "handlingTaxAdjustment": {
            "type": "number",
            "format": "double"
          },
          "handlingTaxTotal": {
            "type": "number",
            "format": "double"
          },
          "handlingTotal": {
            "type": "number",
            "format": "double"
          },
          "dutyAdjustment": {
            "type": "number",
            "format": "double"
          },
          "dutyTotal": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "externalOrderId": {
            "type": "string",
            "nullable": true
          },
          "isExpress": {
            "type": "boolean",
            "nullable": true
          },
          "isFlatRateShipping": {
            "type": "boolean",
            "nullable": true
          },
          "readyToCapture": {
            "type": "boolean"
          },
          "pickupInfo": {
            "type": "object",
            "nullable": true
          },
          "shopperNotes": {
            "$ref": "#/components/schemas/FulfillmentShopperNotes"
          },
          "customer": {
            "$ref": "#/components/schemas/CommerceRuntimeCustomer"
          },
          "shipmentNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeShipmentNote"
            },
            "nullable": true
          },
          "alternateContact": {
            "$ref": "#/components/schemas/FulfillmentAlternateContact"
          },
          "substitutedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeSubstitutedItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionRuntimeCommerceItem": {
        "type": "object",
        "properties": {
          "localeCode": {
            "type": "string",
            "description": "Locale code for language that appears in text and descriptions on the site, for example, en_US. \r\nThis is not the currency code. Currently only en_US is supported.",
            "nullable": true
          },
          "purchaseLocation": {
            "type": "string",
            "description": "The location where the product is being purchased.. default is null. Products can have different prices\r\nby purchaseLocation via custom priceListResolution...",
            "nullable": true
          },
          "lineId": {
            "type": "integer",
            "description": "The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or\r\nin CommerceRuntime when a cart is converted to an order.",
            "format": "int32",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/CommerceRuntimeProduct"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of products ordered.",
            "format": "int32"
          },
          "isRecurring": {
            "type": "boolean",
            "description": "If true, the cart item lists a product that can be purchased or fulfilled at regular intervals, for example, monthly billing or a subscription.",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Not implemented. If true, the cart item is eligible for tax.",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "description": "Line item subtotal (quantity multiplied by price) before discounts.",
            "format": "double",
            "nullable": true
          },
          "extendedTotal": {
            "type": "number",
            "description": "Line item extended total (quantity multiplied by unit extended price) before discounts.",
            "format": "double",
            "nullable": true
          },
          "taxableTotal": {
            "type": "number",
            "description": "Line item subtotal (quantity multiplied by price) before discounts.",
            "format": "double",
            "nullable": true
          },
          "discountTotal": {
            "type": "number",
            "description": "How much the shopper saves with the applied discount or sale price. This is a negative number.",
            "format": "double",
            "nullable": true
          },
          "discountedTotal": {
            "type": "number",
            "description": "Subtotal minus any discounts.",
            "format": "double",
            "nullable": true
          },
          "itemTaxTotal": {
            "type": "number",
            "description": "Total price of taxes that apply to products in this item.",
            "format": "double",
            "nullable": true
          },
          "shippingTaxTotal": {
            "type": "number",
            "description": "Total price of taxes that apply to the shipping of this item.",
            "format": "double",
            "nullable": true
          },
          "shippingTotal": {
            "type": "number",
            "description": "Total price of shipping that apply to this item.",
            "format": "double",
            "nullable": true
          },
          "handlingAmount": {
            "type": "number",
            "description": "Handling Amount for this item",
            "format": "double",
            "nullable": true
          },
          "feeTotal": {
            "type": "number",
            "description": "Not implemented. Total cost of fees that apply to this item.",
            "format": "double",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "Total price of this cart item taking into account any discounts.",
            "format": "double",
            "nullable": true
          },
          "unitPrice": {
            "$ref": "#/components/schemas/CommerceUnitPrice"
          },
          "productDiscount": {
            "$ref": "#/components/schemas/SubscriptionRuntimeCommerceRuntimeAppliedLineItemProductDiscount"
          },
          "productDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeCommerceRuntimeAppliedLineItemProductDiscount"
            },
            "description": "A list of discounts applied to the product",
            "nullable": true
          },
          "shippingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRuntimeCommerceRuntimeAppliedLineItemShippingDiscount"
            },
            "description": "A discount applied to the shipping",
            "nullable": true
          },
          "data": {
            "type": "object",
            "description": "Custom data for a given vendor set within the commerce process.",
            "nullable": true
          },
          "taxData": {
            "type": "object",
            "description": "Storage for any additional/custom tax data.",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          },
          "shippingAmountBeforeDiscountsAndAdjustments": {
            "type": "number",
            "description": "Shipping amount before Discounts and adjustments",
            "format": "double",
            "nullable": true
          },
          "weightedOrderAdjustment": {
            "type": "number",
            "description": "Order Level Manual Adjustment applied to this Item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderDiscount": {
            "type": "number",
            "description": "Order Level Discount applied to this Item",
            "format": "double",
            "nullable": true
          },
          "adjustedLineItemSubtotal": {
            "type": "number",
            "description": "Order Level taxable sub total",
            "format": "double",
            "nullable": true
          },
          "totalWithoutWeightedShippingAndHandling": {
            "type": "number",
            "description": "Taxable Subtotal including Weighted Order amounts",
            "format": "double",
            "nullable": true
          },
          "weightedOrderTax": {
            "type": "number",
            "description": "Order Level tax applied to this Item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderShipping": {
            "type": "number",
            "description": "Order Level Shipping applied to this Item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderShippingDiscount": {
            "type": "number",
            "description": "Order Level Shipping discount applied to this Item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderShippingManualAdjustment": {
            "type": "number",
            "description": "Order Level Shipping Manual Adjustment applied to this Item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderShippingTax": {
            "type": "number",
            "description": "Order Level Shipping Tax applied to this Item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderHandlingFee": {
            "type": "number",
            "description": "Order Level handling fee applied to this item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderHandlingFeeTax": {
            "type": "number",
            "description": "Order Level handling fee tax applied to this item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderHandlingFeeDiscount": {
            "type": "number",
            "description": "Order Level handling fee discount applied to this item",
            "format": "double",
            "nullable": true
          },
          "weightedOrderDuty": {
            "type": "number",
            "description": "Order Level Duty applied to this Item",
            "format": "double",
            "nullable": true
          },
          "totalWithWeightedShippingAndHandling": {
            "type": "number",
            "description": "Line item total with line item, Tax, Weighted Tax with Weighted shipping and handling costs",
            "format": "double",
            "nullable": true
          },
          "weightedOrderHandlingAdjustment": {
            "type": "number",
            "description": "Order level handling adjusment that applies to this item.",
            "format": "double",
            "nullable": true
          },
          "autoAddDiscountId": {
            "type": "integer",
            "description": "Track the discoutid from which the item was auto added",
            "format": "int32",
            "nullable": true
          },
          "isAssemblyRequired": {
            "type": "boolean",
            "description": "Assembly Required for this order item"
          },
          "childItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of Child Item Ids for this order item",
            "nullable": true
          },
          "parentItemId": {
            "type": "string",
            "description": "Indicates Parent Item Id for this order item",
            "nullable": true
          },
          "inventoryTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTags"
            },
            "nullable": true
          },
          "lineItemAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dutyAmount": {
            "type": "number",
            "description": "Indicate Duty Amount for this item.",
            "format": "double",
            "nullable": true
          },
          "substituteInfo": {
            "$ref": "#/components/schemas/SubstituteInfo"
          }
        },
        "additionalProperties": false,
        "description": "Base class for cart and order items"
      },
      "SubscriptionRuntimeCommerceRuntimeAppliedLineItemProductDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SubscriptionRuntimeAppliedProductDiscount"
          }
        ],
        "properties": {
          "appliesToSalePrice": {
            "type": "boolean",
            "description": "Determines if the discount applies to the sale price of the order",
            "nullable": true
          },
          "discountQuantity": {
            "type": "integer",
            "description": "The number of the line item that can be used for this particular discount.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.usc1.kibocommerce.com/api",
      "description": "GCP-US Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}.{env}.usc1.kibocommerce.com/api",
      "description": "GCP-US Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.mozu.com/api",
      "description": "Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}.{env}.mozu.com/api",
      "description": "Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://home.mozu.com/api",
      "description": "HomePod Api"
    },
    {
      "url": "https://t{tenantId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://home.euw1.kibocommerce.com/api",
      "description": "EURO HomePod Api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}