openapi: 3.0.3
info:
  title: Fulfillment
  description: |-
    <div id="overview_FULFILLMENT">
                <h2>FULFILLMENT</h2>
                <p>The Fulfillment APIs support order management and fulfillment workflows based on the Shipment API and its
                    packages, including supporting needs such as pick waves and manifests. Once an order has been placed, it
                    generally
                    cannot be edited at the order-level. Instead, changes to the items, pricing, and other information must
                    be done at the
                    shipment level with the Shipment API. See the <a href="https://docs.kibocommerce.com/help/fulfillment">Fulfillment user guides</a> for more information about fulfillment in UCP.</p>
                <p>When using the Shipment API to transition a shipment through each stage of its fulfillment process, it
                    can be
                    difficult to remember how to format the next step's endpoint and the expected parameters on-the-fly.
                    Additionally,
                    if a call such as cancellation, adding tracking information, or marking the shipment as fulfilled needs
                    to be performed
                    outside of the usual fulfillment flow, it may be confusing to determine how to perform the action
                    without referring to the
                    documentation. To assist with this, the Shipment API provides guidelines within the response body. This
                    response
                    includes two objects, workflowState and _links, that detail the shipment's next step in the workflow as
                    well as all
                    possible actions currently available to the shipment. Use 
                    <a href="https://docs.kibocommerce.com/help/fulfillment-api-overview">this walkthrough</a> to better 
                    understand how to work with this response data.</p>
                    <p>Use the <strong>Customer Survey</strong> resource to create surveys and gather data from your customers.</p>
                    <p>Use the <strong>Manifests</strong> resource to create shipping manifests for fulfillment partners such as Canada Post that require manifests for groups of shipments.</p>
                    <p>Use the <strong>Pick Wave</strong> resource to generate and process pick waves for picking groups of items at a fulfillment locations.</p>
                    <p>Use the <strong>Shipment</strong>, <strong>Shipment Attributes</strong>, <strong>Shipment Data</strong>, and <strong>Shipment Notification</strong> resources to manage the actual shipments being fulfilled and perform actions on them.</p>
                    <p>Use the <strong>Shipment Packages</strong> resource to create, update, and delete the individual packages within a shipment.</p>
                    <p>Use the <strong>Storefront</strong> resource to retrieve shipment information for the storefront.</p>
                    <p>Use the <strong>Workflow Process</strong> resource to retrieve BPM configurations and the fulfillment steps based on shipment type.</p>
            </div>
  version: 1.0.1
tags:
  - name: CustomerSurvey
    description: The Customer Survey API
  - name: Fulfillment
    description: The Fulfillment API
  - name: FulfillmentStorefront
    description: The Fulfillment Storefront API
  - name: FulfillmentWorkflow
    description: The Fulfillment Workflow API
  - name: FutureShipment
    description: The Future Shipment API
  - name: PickWave
    description: The Pick Wave API
  - name: Rendition
    description: The Rendition API
  - name: Shipment
    description: The Shipment API
  - name: ShipmentAttributes
    description: The Shipment Attributes API
  - name: ShipmentContact
    description: The Shipment Contact API
  - name: ShipmentData
    description: The Shipment Data API
  - name: ShipmentNotes
    description: The Shipment Notes API
  - name: ShipmentPackages
    description: The Shipment Packages API
  - name: ShippingManifest
    description: The Shipping Manifest API
  - name: ShippingNotification
    description: The Shipping Notification API
paths:
  /commerce/shipments/surveys/{id}:
    get:
      tags:
        - CustomerSurvey
      summary: Get Survey
      description: Get Survey
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/surveys:
    get:
      tags:
        - CustomerSurvey
      summary: Get Surveys
      description: Get Surveys
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CollectionModelOfEntityModelOfCustomerSurvey
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CollectionModelOfEntityModelOfCustomerSurvey
            application/hal+json:
              schema:
                $ref: >-
                  #/components/schemas/CollectionModelOfEntityModelOfCustomerSurvey
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - CustomerSurvey
      summary: Create Survey
      description: Create Survey
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSurvey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/settings:
    get:
      tags:
        - Fulfillment
      summary: Get Public Settings
      description: Get Public Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/futureItems:
    post:
      tags:
        - FutureShipment
      summary: Create Future Shipments for Items
      description: Create Future Shipments for Items
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FutureItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfEntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfEntityModelOfShipment'
        '201':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/futureToReady:
    put:
      tags:
        - FutureShipment
      summary: Future Shipment to Ready
      description: Future Shipment to Ready
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/futureUpdateDate:
    put:
      tags:
        - FutureShipment
      summary: Update Future Shipment Date
      description: Update Future Shipment Date
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FutureShipmentUpdateDateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/shipping/manifests:
    get:
      tags:
        - ShippingManifest
      summary: Get Manifests
      description: Get Manifests
      parameters:
        - name: fulfillmentLocationCode
          in: query
          description: fulfillmentLocationCode
          required: true
          style: form
          schema:
            type: string
        - name: fromDays
          in: query
          description: fromDays
          required: false
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfManifest'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfManifest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfManifest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - ShippingManifest
      summary: Create Manifest
      description: Create Manifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentManifestRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfManifest'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfManifest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfManifest'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/shipping/manifests/eligibleShipments:
    get:
      tags:
        - ShippingManifest
      summary: Get Eligible Shipments
      description: Get Eligible Shipments
      parameters:
        - name: fulfillmentLocationCode
          in: query
          description: fulfillmentLocationCode
          required: true
          style: form
          schema:
            type: string
        - name: carrier
          in: query
          description: carrier
          required: true
          style: form
          schema:
            type: string
        - name: fromDays
          in: query
          description: fromDays
          required: false
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/shipping/manifests/{manifestId}:
    get:
      tags:
        - ShippingManifest
      summary: Get Manifest
      description: Get Manifest
      parameters:
        - name: manifestId
          in: path
          description: manifestId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfManifest'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfManifest'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfManifest'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves:
    post:
      tags:
        - PickWave
      summary: Create Pick Wave
      description: Create Pick Wave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePickWave'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/open/{fulfillmentLocationCode}:
    get:
      tags:
        - PickWave
      summary: Get Open Pick Waves
      description: Get Open Pick Waves
      parameters:
        - name: fulfillmentLocationCode
          in: path
          description: fulfillmentLocationCode
          required: true
          style: simple
          schema:
            type: string
        - name: shipmentType
          in: query
          description: shipmentType
          required: false
          style: form
          schema:
            type: string
        - name: userId
          in: query
          description: userId
          required: false
          style: form
          schema:
            type: string
        - name: userDisplayName
          in: query
          description: userDisplayName
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfPickWave'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfPickWave'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfPickWave'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/{pickWaveNumber}:
    get:
      tags:
        - PickWave
      summary: Get Pick Wave
      description: Get Pick Wave
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: sortContents
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/{pickWaveNumber}/closed:
    put:
      tags:
        - PickWave
      summary: Close Pick Wave
      description: Close Pick Wave
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosePickWave'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWave'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/{pickWaveNumber}/order-pick-sheets/html:
    get:
      tags:
        - PickWave
      summary: Render Pick Wave Order Sheets
      description: Render pick wave order pick sheets in HTML format for printing
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/{pickWaveNumber}/pickWaveDetails:
    get:
      tags:
        - PickWave
      summary: Get Pick Wave Details
      description: Get Pick Wave Details
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: sortContentsByLocator
          in: query
          description: sortContentsByLocator
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWaveDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWaveDetail'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfPickWaveDetail'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/{pickWaveNumber}/rendition/html:
    get:
      tags:
        - PickWave
      summary: Render Pick Wave
      description: Render pick wave in HTML format for printing
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: printPickWave
          in: query
          description: printPickWave
          required: false
          style: form
          schema:
            type: boolean
        - name: printPackingLists
          in: query
          description: printPackingLists
          required: false
          style: form
          schema:
            type: boolean
        - name: printSingleOrderSheets
          in: query
          description: printSingleOrderSheets
          required: false
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/pickwaves/{pickWaveNumber}/shipments:
    get:
      tags:
        - PickWave
      summary: Get Shipments in Pick Wave
      description: Get Shipments in Pick Wave
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/orders/{orderId}/summary/html:
    get:
      tags:
        - Rendition
      summary: Render Order Summary
      description: Render order summary in HTML format for printing
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/returns/{returnId}/receipt/html:
    get:
      tags:
        - Rendition
      summary: Render Return Receipt
      description: Render return receipt in HTML format for printing
      parameters:
        - name: returnId
          in: path
          description: returnId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/attributes:
    get:
      tags:
        - ShipmentAttributes
      summary: Get Shipment Attributes
      description: Get Shipment Attributes
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAttribute'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAttribute'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAttribute'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ShipmentAttributes
      summary: Set Shipment Attributes
      description: Set Shipment Attributes
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentAttribute'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAttribute'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAttribute'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAttribute'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/attributes/{key}:
    get:
      tags:
        - ShipmentAttributes
      summary: Get Shipment Attribute
      description: Get Shipment Attribute
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: key
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentAttribute'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShipmentAttribute'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ShipmentAttribute'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ShipmentAttributes
      summary: Set Shipment Attribute
      description: Set Shipment Attribute
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: key
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentAttribute'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentAttribute'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShipmentAttribute'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ShipmentAttribute'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentAttributes
      summary: Delete Shipment Attribute
      description: Delete Shipment Attribute
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: key
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/alternateContact:
    get:
      tags:
        - ShipmentContact
      summary: Get Alternate Contact
      description: Get Alternate Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ShipmentContact
      summary: Update Alternate Contact
      description: Update Alternate Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentContact
      summary: Delete Alternate Contact
      description: Delete Alternate Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/customerContact:
    get:
      tags:
        - ShipmentContact
      summary: Get Customer Contact
      description: Get Customer Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ShipmentContact
      summary: Update Customer Contact
      description: Update Customer Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/destinationContact:
    get:
      tags:
        - ShipmentContact
      summary: Get Destination Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Get Destination Contact
    put:
      tags:
        - ShipmentContact
      summary: Update Destination Contact
      description: Update Destination Contact
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfContact'
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments:
    get:
      tags:
        - Shipment
      summary: Get Shipments
      description: >-
        A paged list of shipments is returned according to any specified filter
        criteria and sort options. These Fulfillment APIs use a different
        paging  and filtering scheme than most other APIs in the system. For
        more information,  see the <a
        href="https://docs.kibocommerce.com/help/sorting-and-filtering-apis">Sorting
        & Filtering APIs guide</a>  in the knowledge base.
      parameters:
        - name: bypassSearchIndex
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: filter
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: isLate
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: quickSearch
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: workflowTaskName
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfShipment'
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - Shipment
      summary: Create Shipment
      description: Create Shipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Shipment created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentShipment'
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/bulk:
    post:
      tags:
        - Shipment
      summary: Bulk Create Shipments
      description: Bulk Create Shipments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FulfillmentShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfEntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfEntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfEntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/countsByStep:
    get:
      tags:
        - Shipment
      summary: Get Workflow Task Counts
      description: Get Workflow Task Counts
      parameters:
        - name: shipmentType
          in: query
          description: shipmentType
          required: true
          style: form
          schema:
            type: string
        - name: assignedLocations
          in: query
          description: assignedLocations
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfDashboardResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfDashboardResponse'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfDashboardResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/locationSummaryReport:
    get:
      tags:
        - Shipment
      summary: Get Location Summary Report
      description: Get Location Summary Report
      parameters:
        - name: locationCodes
          in: query
          description: locationCodes
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: startDateTime
          in: query
          description: startDateTime
          required: true
          style: form
          schema:
            type: string
            format: date-time
        - name: bypassSearchIndex
          in: query
          description: bypassSearchIndex
          required: false
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfLocationSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfLocationSummary'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfLocationSummary'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/order/{orderId}:
    delete:
      tags:
        - Shipment
      summary: Delete Shipments from Order
      description: Delete Shipments from Order
      parameters:
        - name: orderId
          in: path
          description: >-
            Unique identifier of the order to delete shipments from. Cannot be
            empty.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/order/{orderId}/canceled:
    put:
      tags:
        - Shipment
      summary: Cancel Shipments
      description: Cancel Shipments
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/received/{search}:
    put:
      tags:
        - Shipment
      summary: Find and Receive Transfer
      description: Find and Receive Transfer
      parameters:
        - name: search
          in: path
          description: search
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}:
    get:
      tags:
        - Shipment
      summary: Get Shipment
      description: >-
        Get shipment information. Note that the schema supports both
        assignedLocationCode and fulfillmentLocationCode fields at the shipment
        level. These fields are usually be the same, except when
        assignedLocationCode becomes the receiving location code after a
        transfer shipment is shipped.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - Shipment
      summary: Update Shipment
      description: Update Shipment
      parameters:
        - name: shipmentNumber
          in: path
          description: Number of the shipment to update. Cannot be empty.
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: updateFields
          in: query
          description: List of shipment fields to update.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentShipment'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '400':
          description: Invalid shipment number supplied
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Shipment not found
        '405':
          description: Validation exception
    delete:
      tags:
        - Shipment
      summary: Delete Shipment
      description: Delete Shipment
      parameters:
        - name: shipmentNumber
          in: path
          description: Number of the shipment to be deleted. Cannot be empty.
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/backordered:
    post:
      tags:
        - Shipment
      summary: Backorder Shipment
      description: >-
        If a shipment is accepted by a location but the contents of the shipment
        are temporarily out of stock, the shipment can be placed on backorder.
        This means that the shipment will remain in the pending Backorder state
        while it waits for the inventory to be in stock, at which point it is
        “released” from backorder to continue with the fulfillment process.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackorderShipmentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/backorderedItems:
    put:
      tags:
        - Shipment
      summary: Backorder Items Update
      description: >-
        When an item is in backorder, its expected release date can be modified
        to reflect any changes in inventory levels or manufacturing estimates.
        This should be kept up-to-date so that customer communications such as
        notification emails can accurately inform the customer about when their
        item is expected to be available or shipped.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackorderItemsUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - Shipment
      summary: Backorder Items
      description: >-
        If a shipment is accepted by a location but some items of the shipment
        are temporarily out of stock, those particular items can be placed on
        backorder. These items will be placed into a pending Backorder state
        until inventory is in stock, at which point they are “released” from
        backorder to continue with the fulfillment process. This will not
        backorder the entire shipment, only the particular items waiting for
        inventory.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackorderItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/canceled:
    put:
      tags:
        - Shipment
      summary: Cancel Shipment
      description: Cancel Shipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/canceledItems:
    put:
      tags:
        - Shipment
      summary: Cancel Items
      description: Cancel Items
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/customerAtCurbside:
    put:
      tags:
        - Shipment
      summary: Customer At Curbside
      description: >-
        Indicate that a customer has arrived for curbside pickup of this
        shipment.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/customerAtStore:
    put:
      tags:
        - Shipment
      summary: Customer At Store
      description: >-
        Indicate that the customer has arrived for store pickup of this
        shipment.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/customerCared:
    put:
      tags:
        - Shipment
      summary: Customer Care Shipment
      description: Send a shipment to Customer Care
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/customerCaredItems:
    post:
      tags:
        - Shipment
      summary: Customer Care Items
      description: Send items to Customer Care
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/customerInTransit:
    put:
      tags:
        - Shipment
      summary: Customer In Transit
      description: >-
        Indicate that a customer is on their way to the store for curbside
        delivery.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/destination:
    put:
      tags:
        - Shipment
      summary: Update Destination
      description: Update Destination
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentDestination'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/email/resend:
    put:
      tags:
        - Shipment
      summary: Resend Shipment Email
      description: Resend Shipment Email
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/fulfilled:
    put:
      tags:
        - Shipment
      summary: Fulfill Shipment
      description: Fulfill Shipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Shipment not found
  /commerce/shipments/{shipmentNumber}/fulfillmentFields:
    put:
      tags:
        - Shipment
      summary: Update Fulfillment Fields
      description: Update Fulfillment Fields
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FulfillmentItem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/giftCardInfo:
    put:
      tags:
        - Shipment
      summary: Update Gift Card Info
      description: Update Gift Card Info
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCardInfoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/items/{lineId}/email/resend:
    put:
      tags:
        - Shipment
      summary: Resend Item Email
      description: Resend Item Email
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: lineId
          in: path
          description: lineId
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/order-summary/html:
    get:
      tags:
        - Shipment
      summary: Render Order Summary by Shipment Number
      description: Render order summary by shipment number in HTML format for printing
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/pickedUpItems:
    post:
      tags:
        - Shipment
      summary: Pickup Items
      description: >-
        Individual items within a shipment can be marked as picked up in BOPIS
        (Buy Online Pickup in Store) shipments. This is particularly useful in
        cases such as partial pickup, in which the pickup location requested a
        transfer for some items that they did not have in stock but they allow
        the customer to pick up the items they have ready. In this event, the
        pickup shipment cannot go straight to the Fulfilled (“Complete”) step
        because it is still waiting on other items to be received. That partial
        quantity of items that are picked up early can be called out through
        this API.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/reassigned:
    put:
      tags:
        - Shipment
      summary: Reassign Shipment
      description: >-
        Reassign an entire shipment to a new fulfillment location, including all
        packages and items within it. Note that the blockAssignment field is not
        always necessary to provide in the request, as OMS defaults to “false”
        if it is not provided in the request. However, it must be provided in
        order to enable the assignment blocking when desired, such as if the
        reassignment was due to lack of inventory and similar shipments should
        not be assigned to this location until it has inventory back in stock.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReassignShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/reassignedItems:
    put:
      tags:
        - Shipment
      summary: Reassign Items
      description: >-
        Reassign particular items from a shipment while leaving the rest of the
        items at the original location. This is often referred to as “splitting
        the shipment.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReassignItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/received:
    put:
      tags:
        - Shipment
      summary: Receive Transfer
      description: >-
        After a transfer shipment has been created and fulfilled by the second
        location, the original pickup location that requested those transfer
        items must indicate that they have received everything before they can
        progress in the BOPIS fulfillment flow. Once the location validates that
        they have received their transfers with this call, the shipment will
        leave the Wait For Transfer state and continue to Customer Pickup.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/refresh:
    put:
      tags:
        - Shipment
      summary: Refresh Shipment
      description: Refresh Shipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: shouldLog
          in: query
          description: shouldLog
          required: false
          style: form
          schema:
            type: boolean
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/rejected:
    put:
      tags:
        - Shipment
      summary: Reject Shipment
      description: >-
        Reject an entire shipment whose items are not available for fulfillment
        at this location. This will reassign the shipment to an eligible
        location based on order routing rules.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectShipment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/rejectedItems:
    put:
      tags:
        - Shipment
      summary: Reject Items
      description: >-
        Reject items in the shipment that are not available for fulfillment at
        this location. This will assign a new transfer shipment to an eligible
        location based on order routing rules.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/rendition/html:
    get:
      tags:
        - Shipment
      summary: Render Shipment Packing Slip
      description: Render shipment packing slip in HTML format for printing
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfstring'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/retried:
    put:
      tags:
        - Shipment
      summary: Retry Fulfilling Shipment
      description: Retry Fulfilling Shipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/tasks:
    get:
      tags:
        - Shipment
      summary: Get Workflow Tasks
      description: Get Workflow Tasks
      parameters:
        - name: shipmentNumber
          in: path
          description: Number of the shipment to be searched. Cannot be empty.
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionModelOfTask'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelOfTask'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/tasks/{taskName}/completed:
    put:
      tags:
        - Shipment
      summary: Complete Workflow Task
      description: Complete Workflow Task
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: taskName
          in: path
          description: taskName
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskComplete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/tasks/{taskName}/reverted:
    put:
      tags:
        - Shipment
      summary: Revert Workflow Task
      description: Revert Workflow Task
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: taskName
          in: path
          description: taskName
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/tasks/{taskName}/skipped:
    put:
      tags:
        - Shipment
      summary: Skip Workflow Task
      description: Skip Workflow Task
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: taskName
          in: path
          description: taskName
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/transferred:
    put:
      tags:
        - Shipment
      summary: Transfer Shipment
      description: >-
        If a pickup location for a BOPIS (Buy Online Pickup in Store) shipment
        does not have all items available in stock, then they can request a
        transfer from another location. Submitting this transfer request will
        send the information about the shipment to a second location, who will
        then ship the items to the fulfiller so that the customer can pick them
        up at the original store location they selected when submitting their
        order.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferShipment'
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/transferredItems:
    put:
      tags:
        - Shipment
      summary: Transfer Items
      description: >-
        If a pickup location for a BOPIS (Buy Online Pickup in Store) shipment
        does not have all items available in stock, then they can request a
        transfer from another location. Submitting this transfer request will
        send the information about the unavailable items to a second location,
        who will then ship the items to the fulfiller so that the customer can
        pick them up at the original store location they selected when
        submitting their order. It is possible for only some items in the
        shipment to be needed as a transfer, as opposed to the entire shipment,
        so this API facilitates creating a transfer for those specific items and
        quantities.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferItemsRequest'
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/workflow-definition-image:
    get:
      tags:
        - Shipment
      summary: Get Workflow Definition Image
      description: Get Workflow Definition Image
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/svg+xml:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/workflow-instance-image:
    get:
      tags:
        - Shipment
      summary: Get Workflow Instance Image
      description: Get Workflow Instance Image
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/svg+xml:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/data:
    get:
      tags:
        - ShipmentData
      summary: Get Shipment Data
      description: Get Shipment Data
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ShipmentData
      summary: Replace Shipment Data
      description: Replace Shipment Data
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: merge
          in: query
          description: merge
          required: false
          style: form
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentData
      summary: Delete Shipment Data
      description: Delete Shipment Data
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/data/{key}:
    delete:
      tags:
        - ShipmentData
      summary: Delete Shipment Data by Key
      description: Delete Shipment Data by Key
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: key
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/items/{lineId}/data:
    get:
      tags:
        - ShipmentData
      summary: Get Shipment Item Data
      description: Get Shipment Item Data
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: lineId
          in: path
          description: lineId
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - ShipmentData
      summary: Replace Shipment Item Data
      description: Replace Shipment Item Data
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: lineId
          in: path
          description: lineId
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: merge
          in: query
          description: merge
          required: false
          style: form
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentData
      summary: Delete Shipment Item Data
      description: Delete Shipment Item Data
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: lineId
          in: path
          description: lineId
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/items/{lineId}/data/{key}:
    delete:
      tags:
        - ShipmentData
      summary: Delete Shipment Item Data by Key
      description: Delete Shipment Item Data by Key
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: lineId
          in: path
          description: lineId
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: key
          in: path
          description: key
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/notes:
    post:
      tags:
        - ShipmentNotes
      summary: Create Shipment Note
      description: Create Shipment Note
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentShipmentNote'
      responses:
        '200':
          description: Shipment note added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentShipmentNote'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/notes/{noteId}:
    put:
      tags:
        - ShipmentNotes
      summary: Update Shipment Note
      description: Update Shipment Note
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: noteId
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentShipmentNote'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '400':
          description: Invalid Input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentNotes
      summary: Delete Shipment Note
      description: Delete Shipment Note
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: noteId
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/packages:
    post:
      tags:
        - ShipmentPackages
      summary: Create Shipment Package
      description: Create Shipment Package
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPackage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/shipments/{shipmentNumber}/packages/bulk:
    post:
      tags:
        - ShipmentPackages
      summary: Bulk Create Shipment Packages
      description: Bulk Create Shipment Packages
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FulfillmentPackage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentPackages
      summary: Delete Shipment Packages
      description: Delete Shipment Packages
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /commerce/shipments/{shipmentNumber}/packages/{packageId}:
    put:
      tags:
        - ShipmentPackages
      summary: Update Shipment Package
      description: Update Shipment Package
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: packageId
          in: path
          description: packageId
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPackage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - ShipmentPackages
      summary: Delete Shipment Package
      description: Delete Shipment Package
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: packageId
          in: path
          description: packageId
          required: true
          style: simple
          schema:
            type: string
        - name: If-Match
          in: header
          description: If-Match
          required: false
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /commerce/fulfillment/shipping/notifications/{carrier}:
    post:
      tags:
        - ShippingNotification
      summary: Handle Carrier Notification
      description: Handle Carrier Notification
      parameters:
        - name: carrier
          in: path
          description: carrier
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - paramMap
              type: object
              properties:
                paramMap:
                  type: object
                  additionalProperties:
                    type: string
                  description: paramMap
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/storefront/shipments:
    get:
      tags:
        - FulfillmentStorefront
      summary: Get Shipments
      description: Get Shipments
      parameters:
        - name: bypassSearchIndex
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: filter
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: isLate
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: quickSearch
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: workflowTaskName
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfShipment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/fulfillment/storefront/shipments/{shipmentNumber}:
    get:
      tags:
        - FulfillmentStorefront
      summary: Get Shipment
      description: >-
        Get shipment information. Note that the schema supports both
        assignedLocationCode and fulfillmentLocationCode fields at the shipment
        level. These fields are usually the same, except when
        assignedLocationCode becomes the receiving location code after a
        transfer shipment is shipped.
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfShipment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/processes/definitionImage/{containerIdOrAlias}/{processId}:
    get:
      tags:
        - FulfillmentWorkflow
      summary: Get Definition Image
      description: Get Definition Image
      parameters:
        - name: containerIdOrAlias
          in: path
          description: containerIdOrAlias
          required: true
          style: simple
          schema:
            type: string
        - name: processId
          in: path
          description: processId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/svg+xml:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/processes/definitions:
    get:
      tags:
        - FulfillmentWorkflow
      summary: Get Workflow Processes
      description: Get Workflow Processes
      parameters:
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfWorkflowProcess'
            application/xml:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfWorkflowProcess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelOfEntityModelOfWorkflowProcess'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/processes/definitions/{containerIdOrAlias}/{processId}:
    get:
      tags:
        - FulfillmentWorkflow
      summary: Get Workflow Process
      description: Get Workflow Process
      parameters:
        - name: containerIdOrAlias
          in: path
          description: containerIdOrAlias
          required: true
          style: simple
          schema:
            type: string
        - name: processId
          in: path
          description: processId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/processes/shipmentType/{shipmentType}:
    get:
      tags:
        - FulfillmentWorkflow
      summary: Get Workflow Process by Shipment Type
      description: Get Workflow Process by Shipment Type
      parameters:
        - name: shipmentType
          in: path
          description: shipmentType
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: true
  /commerce/processes/shipmentType/{shipmentType}/location/{locationCode}:
    get:
      tags:
        - FulfillmentWorkflow
      summary: Get Workflow Process by Shipment Type and Location Code
      description: Get Workflow Process by Shipment Type and Location Code
      parameters:
        - name: shipmentType
          in: path
          description: shipmentType
          required: true
          style: simple
          schema:
            type: string
        - name: locationCode
          in: path
          description: locationCode
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /commerce/processes/shipmentType/{shipmentType}/locationGroup/{locationGroupCode}:
    get:
      tags:
        - FulfillmentWorkflow
      summary: Get Workflow Process by Shipment Type and Location Group Code
      description: Get Workflow Process by Shipment Type and Location Group Code
      parameters:
        - name: shipmentType
          in: path
          description: shipmentType
          required: true
          style: simple
          schema:
            type: string
        - name: locationGroupCode
          in: path
          description: locationGroupCode
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/xml:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    Links:
      title: Links
      type: object
      properties:
        empty:
          type: boolean
    CustomerSurveyEntry:
      title: CustomerSurveyEntry
      type: object
      properties:
        answer:
          type: object
        question:
          type: string
    EntityModelOfCustomerSurvey:
      title: EntityModelOfCustomerSurvey
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/FulfillmentAuditInfo'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSurveyEntry'
        id:
          type: string
        shipmentNumber:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        tenantId:
          type: integer
          format: int32
    LinkRelation:
      title: LinkRelation
      type: object
    CollectionModelOfEntityModelOfCustomerSurvey:
      title: CollectionModelOfEntityModelOfCustomerSurvey
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EntityModelOfCustomerSurvey'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    CustomerSurvey:
      title: CustomerSurvey
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/FulfillmentAuditInfo'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSurveyEntry'
        id:
          type: string
        shipmentNumber:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        tenantId:
          type: integer
          format: int32
    FutureItem:
      title: FutureItem
      required:
        - futureDate
        - lineId
        - quantity
      type: object
      properties:
        futureDate:
          type: string
          format: date-time
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    FutureItemsRequest:
      title: FutureItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/FutureItem'
    AuditInfo0:
      title: AuditInfo0
      type: object
      properties:
        createBy:
          type: string
        createDate:
          type: string
          format: date-time
        updateBy:
          type: string
        updateDate:
          type: string
          format: date-time
    PackingSlipItemDetailDto:
      title: PackingSlipItemDetailDto
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        lineId:
          type: integer
          format: int32
        originalOrderItemId:
          type: string
        quantity:
          type: integer
          format: int32
    ReassignedReason:
      title: ReassignedReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    ReassignedItem:
      title: ReassignedItem
      required:
        - handling
        - handlingTax
        - itemTax
        - lineId
        - quantity
        - shipping
        - shippingTax
      type: object
      properties:
        actualPrice:
          type: number
          format: bigdecimal
        allocatedQuantity:
          type: integer
          format: int32
        allowsBackOrder:
          type: boolean
        allowsFutureAllocate:
          type: boolean
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
          description: >-
            If true, order routing will not suggest that any shipments with
            these items be assigned to the original location. This persists
            until the inventory records for these items are updated. When the
            records are updated, blockAssignment will automatically be disabled
            again to allow new assignments. This is an optional parameter and
            defaults to false if not provided in the request.
          example: false
        cartItemId:
          type: string
        childItemIds:
          type: array
          items:
            type: string
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
          format: bigdecimal
        data:
          type: object
          additionalProperties:
            type: object
        duty:
          type: number
          format: bigdecimal
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentFields:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentFulfillmentField'
        fulfillmentLocationCode:
          type: string
        giftCards:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentGiftCard'
        goodsType:
          type: string
          enum:
            - Digital
            - DigitalCredit
            - DigitalGiftCard
            - Physical
            - Service
        handling:
          type: number
          format: bigdecimal
        handlingDiscount:
          type: number
          format: bigdecimal
        handlingTax:
          type: number
          format: bigdecimal
        imageUrl:
          type: string
        inventoryTags:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentInventoryTag'
        isAssemblyRequired:
          type: boolean
        isPackagedStandAlone:
          type: boolean
        isReservedInventory:
          type: boolean
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
          format: bigdecimal
        itemTax:
          type: number
          format: bigdecimal
        lineId:
          type: integer
          format: int32
        lineItemAdjustment:
          type: number
          format: bigdecimal
        lineItemCost:
          type: number
          format: bigdecimal
        locatorName:
          type: string
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentProductOption'
        originalOrderItemId:
          type: string
        originalQuantity:
          type: integer
          format: int32
        overridePrice:
          type: number
          format: bigdecimal
        parentItemId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        reassignedReason:
          $ref: '#/components/schemas/ReassignedReason'
        shipping:
          type: number
          format: bigdecimal
        shippingDiscount:
          type: number
          format: bigdecimal
        shippingTax:
          type: number
          format: bigdecimal
        sku:
          type: string
        taxData:
          type: object
        taxableHandling:
          type: number
          format: bigdecimal
        taxableLineItemCost:
          type: number
          format: bigdecimal
        taxableShipping:
          type: number
          format: bigdecimal
        transferQuantity:
          type: integer
          format: int32
          description: This is deprecated.
        trueTransferQuantity:
          type: integer
          format: int32
          description: This is the actual quantity transferred.
        unitPrice:
          type: number
          format: bigdecimal
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
          format: bigdecimal
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingTaxAdjustment:
          type: number
          format: bigdecimal
        weightedLineItemTaxAdjustment:
          type: number
          format: bigdecimal
        weightedShipmentAdjustment:
          type: number
          format: bigdecimal
        weightedShippingAdjustment:
          type: number
          format: bigdecimal
        weightedShippingTaxAdjustment:
          type: number
          format: bigdecimal
    RejectedReason:
      title: RejectedReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    RejectedItem:
      title: RejectedItem
      required:
        - handling
        - handlingTax
        - itemTax
        - lineId
        - quantity
        - shipping
        - shippingTax
      type: object
      properties:
        actualPrice:
          type: number
          format: bigdecimal
        allocatedQuantity:
          type: integer
          format: int32
        allowsBackOrder:
          type: boolean
        allowsFutureAllocate:
          type: boolean
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
          description: >-
            If true, order routing will not suggest that any shipments with
            these items be assigned to the original location. This persists
            until the inventory records for these items are updated. When the
            records are updated, blockAssignment will automatically be disabled
            again to allow new assignments. This is an optional parameter and
            defaults to false if not provided in the request.
          example: false
        cartItemId:
          type: string
        childItemIds:
          type: array
          items:
            type: string
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
          format: bigdecimal
        data:
          type: object
          additionalProperties:
            type: object
        duty:
          type: number
          format: bigdecimal
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentFields:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentFulfillmentField'
        giftCards:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentGiftCard'
        goodsType:
          type: string
          enum:
            - Digital
            - DigitalCredit
            - DigitalGiftCard
            - Physical
            - Service
        handling:
          type: number
          format: bigdecimal
        handlingDiscount:
          type: number
          format: bigdecimal
        handlingTax:
          type: number
          format: bigdecimal
        imageUrl:
          type: string
        inventoryTags:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentInventoryTag'
        isAssemblyRequired:
          type: boolean
        isPackagedStandAlone:
          type: boolean
        isReservedInventory:
          type: boolean
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
          format: bigdecimal
        itemTax:
          type: number
          format: bigdecimal
        lineId:
          type: integer
          format: int32
        lineItemAdjustment:
          type: number
          format: bigdecimal
        lineItemCost:
          type: number
          format: bigdecimal
        locatorName:
          type: string
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentProductOption'
        originalOrderItemId:
          type: string
        originalQuantity:
          type: integer
          format: int32
        overridePrice:
          type: number
          format: bigdecimal
        parentItemId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        rejectedReason:
          $ref: '#/components/schemas/RejectedReason'
        shipping:
          type: number
          format: bigdecimal
        shippingDiscount:
          type: number
          format: bigdecimal
        shippingTax:
          type: number
          format: bigdecimal
        sku:
          type: string
        taxData:
          type: object
        taxableHandling:
          type: number
          format: bigdecimal
        taxableLineItemCost:
          type: number
          format: bigdecimal
        taxableShipping:
          type: number
          format: bigdecimal
        transferQuantity:
          type: integer
          format: int32
          description: This is deprecated.
        trueTransferQuantity:
          type: integer
          format: int32
          description: This is the actual quantity transferred.
        unitPrice:
          type: number
          format: bigdecimal
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
          format: bigdecimal
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingTaxAdjustment:
          type: number
          format: bigdecimal
        weightedLineItemTaxAdjustment:
          type: number
          format: bigdecimal
        weightedShipmentAdjustment:
          type: number
          format: bigdecimal
        weightedShippingAdjustment:
          type: number
          format: bigdecimal
        weightedShippingTaxAdjustment:
          type: number
          format: bigdecimal
    TransferredItem:
      title: TransferredItem
      required:
        - handling
        - handlingTax
        - itemTax
        - lineId
        - quantity
        - shipping
        - shippingTax
      type: object
      properties:
        actualPrice:
          type: number
          format: bigdecimal
        allocatedQuantity:
          type: integer
          format: int32
        allowsBackOrder:
          type: boolean
        allowsFutureAllocate:
          type: boolean
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
        cartItemId:
          type: string
        childItemIds:
          type: array
          items:
            type: string
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
          format: bigdecimal
        data:
          type: object
          additionalProperties:
            type: object
        duty:
          type: number
          format: bigdecimal
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentFields:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentFulfillmentField'
        fulfillmentLocationCode:
          type: string
        giftCards:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentGiftCard'
        goodsType:
          type: string
          enum:
            - Digital
            - DigitalCredit
            - DigitalGiftCard
            - Physical
            - Service
        handling:
          type: number
          format: bigdecimal
        handlingDiscount:
          type: number
          format: bigdecimal
        handlingTax:
          type: number
          format: bigdecimal
        imageUrl:
          type: string
        inventoryTags:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentInventoryTag'
        isAssemblyRequired:
          type: boolean
        isPackagedStandAlone:
          type: boolean
        isReservedInventory:
          type: boolean
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
          format: bigdecimal
        itemTax:
          type: number
          format: bigdecimal
        lineId:
          type: integer
          format: int32
        lineItemAdjustment:
          type: number
          format: bigdecimal
        lineItemCost:
          type: number
          format: bigdecimal
        locatorName:
          type: string
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentProductOption'
        originalOrderItemId:
          type: string
        originalQuantity:
          type: integer
          format: int32
        overridePrice:
          type: number
          format: bigdecimal
        parentItemId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        rejectedReason:
          $ref: '#/components/schemas/RejectedReason'
        shipping:
          type: number
          format: bigdecimal
        shippingDiscount:
          type: number
          format: bigdecimal
        shippingTax:
          type: number
          format: bigdecimal
        sku:
          type: string
        taxData:
          type: object
        taxableHandling:
          type: number
          format: bigdecimal
        taxableLineItemCost:
          type: number
          format: bigdecimal
        taxableShipping:
          type: number
          format: bigdecimal
        transferQuantity:
          type: integer
          format: int32
          description: This is deprecated.
        trueTransferQuantity:
          type: integer
          format: int32
          description: This is the actual quantity transferred.
        unitPrice:
          type: number
          format: bigdecimal
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
          format: bigdecimal
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingTaxAdjustment:
          type: number
          format: bigdecimal
        weightedLineItemTaxAdjustment:
          type: number
          format: bigdecimal
        weightedShipmentAdjustment:
          type: number
          format: bigdecimal
        weightedShippingAdjustment:
          type: number
          format: bigdecimal
        weightedShippingTaxAdjustment:
          type: number
          format: bigdecimal
    Task:
      title: Task
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
        active:
          type: boolean
        completed:
          type: boolean
        completedDate:
          type: string
          format: date-time
        description:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentTaskInput'
        name:
          type: string
        skippable:
          type: boolean
        subject:
          type: string
        taskId:
          type: string
    BpmVariable:
      title: BpmVariable
      type: object
      properties:
        name:
          type: string
        oldValue:
          type: string
        updateDate:
          type: string
          format: date-time
        value:
          type: string
    EntityModelOfShipment:
      title: EntityModelOfShipment
      required:
        - orderId
        - orderNumber
        - shipmentType
        - total
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        acceptedDate:
          type: string
          format: date-time
        alternateContact:
          $ref: '#/components/schemas/FulfillmentContact'
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        assignedLocationCode:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        canceledItems:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentCanceledItem'
        cartId:
          type: string
        changeMessages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentChangeMessage'
        childShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        currencyCode:
          type: string
        customer:
          $ref: '#/components/schemas/FulfillmentCustomer'
        customerAccountId:
          type: integer
          format: int32
        customerAddressId:
          type: integer
          format: int32
        customerTaxId:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
        destination:
          $ref: '#/components/schemas/FulfillmentDestination'
        dutyAdjustment:
          type: number
          format: bigdecimal
        dutyTotal:
          type: number
          format: bigdecimal
        email:
          type: string
        externalOrderId:
          type: string
        fulfillmentDate:
          type: string
          format: date-time
        fulfillmentLocationCode:
          type: string
        fulfillmentStatus:
          type: string
          enum:
            - Fulfilled
            - NotFulfilled
        futureDate:
          type: string
          format: date-time
        handlingAdjustment:
          type: number
          format: bigdecimal
        handlingSubtotal:
          type: number
          format: bigdecimal
        handlingTaxAdjustment:
          type: number
          format: bigdecimal
        handlingTaxTotal:
          type: number
          format: bigdecimal
        handlingTotal:
          type: number
          format: bigdecimal
        isAutoAssigned:
          type: boolean
        isExpress:
          type: boolean
        isHistoricalImport:
          type: boolean
        isOptInForSms:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentItem'
        lineItemSubtotal:
          type: number
          format: bigdecimal
        lineItemTaxAdjustment:
          type: number
          format: bigdecimal
        lineItemTaxTotal:
          type: number
          format: bigdecimal
        lineItemTotal:
          type: number
          format: bigdecimal
        orderId:
          type: string
        orderNumber:
          type: integer
          format: int32
        orderSubmitDate:
          type: string
          format: date-time
        originalShipmentNumber:
          type: integer
          format: int32
        packages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentPackage'
        parentCheckoutNumber:
          type: integer
          format: int32
        parentShipmentNumber:
          type: integer
          format: int32
        pickStatus:
          type: string
          enum:
            - AVAILABLE
            - COMPLETE
            - IN_WAVE
            - PICKED
            - TRANSFER
        pickType:
          type: string
          enum:
            - MULTIPLE
            - NORMAL
            - SINGLE
        pickWaveNumber:
          type: integer
          format: int32
        pickupInfo:
          type: object
          additionalProperties:
            type: object
        readyForPickup:
          type: boolean
        readyForPickupDate:
          type: string
          format: date-time
        readyToCapture:
          type: boolean
        reassignedItems:
          type: array
          items:
            $ref: '#/components/schemas/ReassignedItem'
        receivedDate:
          type: string
          format: date-time
        rejectedItems:
          type: array
          items:
            $ref: '#/components/schemas/RejectedItem'
        sentCustomerAtStoreNotification:
          type: boolean
        sentCustomerInTransitNotification:
          type: boolean
        shipmentAdjustment:
          type: number
          format: bigdecimal
        shipmentNotes:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentShipmentNote'
        shipmentNumber:
          type: integer
          format: int32
        shipmentStatus:
          type: string
          enum:
            - BACKORDER
            - CANCELED
            - CUSTOMER_CARE
            - DELETED
            - FULFILLED
            - FUTURE
            - READY
            - REASSIGNED
        shipmentStatusReason:
          $ref: '#/components/schemas/FulfillmentShipmentStatusReason'
        shipmentType:
          type: string
        shippingAdjustment:
          type: number
          format: bigdecimal
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        shippingSubtotal:
          type: number
          format: bigdecimal
        shippingTaxAdjustment:
          type: number
          format: bigdecimal
        shippingTaxTotal:
          type: number
          format: bigdecimal
        shippingTotal:
          type: number
          format: bigdecimal
        shopperNotes:
          $ref: '#/components/schemas/FulfillmentFulfillmentShopperNotes'
        siteId:
          type: integer
          format: int32
        taxData:
          type: object
        tenantId:
          type: integer
          format: int32
        total:
          type: number
          format: bigdecimal
        transferShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        transferredItems:
          type: array
          items:
            $ref: '#/components/schemas/TransferredItem'
        transitTime:
          type: string
        userId:
          type: string
        workflowProcessContainerId:
          type: string
        workflowProcessId:
          type: string
        workflowState:
          $ref: '#/components/schemas/FulfillmentWorkflowState'
    CollectionModelOfEntityModelOfShipment:
      title: CollectionModelOfEntityModelOfShipment
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EntityModelOfShipment'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    FutureShipmentUpdateDateRequest:
      title: FutureShipmentUpdateDateRequest
      required:
        - futureDate
      type: object
      properties:
        bypassFutureAllocateDeallocate:
          type: boolean
        futureDate:
          type: string
          format: date-time
    Manifest:
      title: Manifest
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        carrierId:
          type: string
        internalId:
          type: string
        locationCode:
          type: string
        manifestId:
          type: string
        manifestUrl:
          type: string
        numberOfPackages:
          type: integer
          format: int32
        numberOfShipments:
          type: integer
          format: int32
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentManifestShipment'
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    CollectionModelOfManifest:
      title: CollectionModelOfManifest
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Manifest'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    ManifestRequestShipment:
      title: ManifestRequestShipment
      required:
        - shipmentNumber
      type: object
      properties:
        integratorIds:
          type: array
          items:
            type: string
        shipmentNumber:
          type: integer
          format: int32
    EntityModelOfManifest:
      title: EntityModelOfManifest
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        carrierId:
          type: string
        internalId:
          type: string
        locationCode:
          type: string
        manifestId:
          type: string
        manifestUrl:
          type: string
        numberOfPackages:
          type: integer
          format: int32
        numberOfShipments:
          type: integer
          format: int32
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentManifestShipment'
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    CollectionModelOfShipment:
      title: CollectionModelOfShipment
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FulfillmentShipment'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    PickWaveBinRange:
      title: PickWaveBinRange
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        endBinName:
          type: string
        startBinName:
          type: string
    PickWaveProductMatch:
      title: PickWaveProductMatch
      required:
        - identifier
        - matchType
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        identifier:
          type: string
          enum:
            - PRODUCT_CODE
            - UPC
        matchType:
          type: string
          enum:
            - CONTAINS
            - ENDS_WITH
            - EXACT
            - STARTS_WITH
        value:
          type: string
    CreatePickWave:
      title: CreatePickWave
      required:
        - fulfillmentLocationCode
        - maxShipments
        - shipmentType
      type: object
      properties:
        allowEmptyWave:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
        binRanges:
          type: array
          items:
            $ref: '#/components/schemas/PickWaveBinRange'
        fulfillableShipmentsOnly:
          type: boolean
        fulfillmentLocationCode:
          type: string
        includeZeroInventory:
          type: boolean
        lockWave:
          type: boolean
        maxShipments:
          type: integer
          format: int32
        pickWaveType:
          type: string
          enum:
            - MULTIPLE
            - NORMAL
            - SINGLE
        products:
          type: array
          items:
            $ref: '#/components/schemas/PickWaveProductMatch'
        shipmentDateEnd:
          type: string
          format: date-time
        shipmentDateStart:
          type: string
          format: date-time
        shipmentType:
          type: string
          enum:
            - BOPIS
            - STH
        shippingOption:
          type: string
          enum:
            - ALL
            - EXPRESS_ONLY
            - STANDARD_ONLY
    PickWaveContent:
      title: PickWaveContent
      type: object
      properties:
        actualQuantity:
          type: integer
          format: int32
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        binId:
          type: integer
          format: int32
        binName:
          type: string
        contentId:
          type: string
        externalOrderId:
          type: string
        imageUrl:
          type: string
        itemLineId:
          type: integer
          format: int32
        locatorName:
          type: string
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentProductOption'
        orderNumber:
          type: integer
          format: int32
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        shipmentNumber:
          type: integer
          format: int32
        sku:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - PICKED
            - REMOVED
        upc:
          type: string
        variationProductCode:
          type: string
    EntityModelOfPickWave:
      title: EntityModelOfPickWave
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        changeMessages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentChangeMessage'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/PickWaveContent'
        fulfillmentLocationCode:
          type: string
        maxShipments:
          type: integer
          format: int32
        parentPickWaveNumber:
          type: integer
          format: int32
        pickType:
          type: string
          enum:
            - MULTIPLE
            - NORMAL
            - SINGLE
        pickWaveId:
          type: string
        pickWaveNumber:
          type: integer
          format: int32
        pickWaveStatus:
          type: string
          enum:
            - CLOSED
            - ERROR
            - IN_PROGRESS
            - PENDING
            - PENDING_RECOVERY
        recoveryPickWaveNumber:
          type: integer
          format: int32
        shipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        shipmentType:
          type: string
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    PickWave:
      title: PickWave
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        changeMessages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentChangeMessage'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/PickWaveContent'
        fulfillmentLocationCode:
          type: string
        maxShipments:
          type: integer
          format: int32
        parentPickWaveNumber:
          type: integer
          format: int32
        pickType:
          type: string
          enum:
            - MULTIPLE
            - NORMAL
            - SINGLE
        pickWaveId:
          type: string
        pickWaveNumber:
          type: integer
          format: int32
        pickWaveStatus:
          type: string
          enum:
            - CLOSED
            - ERROR
            - IN_PROGRESS
            - PENDING
            - PENDING_RECOVERY
        recoveryPickWaveNumber:
          type: integer
          format: int32
        shipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        shipmentType:
          type: string
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    CollectionModelOfPickWave:
      title: CollectionModelOfPickWave
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/PickWave'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    BinShipmentProductQuantity:
      title: BinShipmentProductQuantity
      required:
        - actualQuantity
        - binName
        - shipmentNumber
      type: object
      properties:
        actualQuantity:
          type: integer
          format: int32
        attributes:
          type: object
          additionalProperties:
            type: object
        binName:
          type: string
        productCode:
          type: string
        shipmentNumber:
          type: integer
          format: int32
        variationProductCode:
          type: string
    ClosePickWave:
      title: ClosePickWave
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        createRecovery:
          type: boolean
        quantities:
          type: array
          items:
            $ref: '#/components/schemas/BinShipmentProductQuantity'
    EntityModelOfstring:
      title: EntityModelOfstring
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    ProductOption0:
      title: ProductOption0
      type: object
      properties:
        attributeFQN:
          type: string
        dataType:
          type: string
        name:
          type: string
        shopperEnteredValue:
          type: object
        stringValue:
          type: string
        value:
          type: object
    PickWaveContent0:
      title: PickWaveContent0
      type: object
      properties:
        actualQuantity:
          type: integer
          format: int32
        auditInfo:
          $ref: '#/components/schemas/FulfillmentAuditInfo'
        binId:
          type: integer
          format: int32
        binName:
          type: string
        contentId:
          type: string
        externalOrderId:
          type: string
        imageUrl:
          type: string
        itemLineId:
          type: integer
          format: int32
        locatorName:
          type: string
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption0'
        orderNumber:
          type: integer
          format: int32
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        shipmentNumber:
          type: integer
          format: int32
        sku:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - PICKED
            - REMOVED
        upc:
          type: string
        variationProductCode:
          type: string
    ContentGroup:
      title: ContentGroup
      type: object
      properties:
        auditInfo:
          $ref: '#/components/schemas/FulfillmentAuditInfo'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/PickWaveContent0'
        imageUrl:
          type: string
        locatorName:
          type: string
        name:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        upc:
          type: string
    EntityModelOfPickWaveDetail:
      title: EntityModelOfPickWaveDetail
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        contentGroups:
          type: array
          items:
            $ref: '#/components/schemas/ContentGroup'
        fulfillmentLocationCode:
          type: string
        maxShipments:
          type: integer
          format: int32
        pickType:
          type: string
          enum:
            - MULTIPLE
            - NORMAL
            - SINGLE
        pickWaveId:
          type: string
        pickWaveNumber:
          type: integer
          format: int32
        pickWaveStatus:
          type: string
          enum:
            - CLOSED
            - ERROR
            - IN_PROGRESS
            - PENDING
            - PENDING_RECOVERY
        shipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        shipmentType:
          type: string
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    ShipmentAttribute:
      title: ShipmentAttribute
      type: object
      properties:
        key:
          type: string
        value:
          type: object
    EntityModelOfContact:
      title: EntityModelOfContact
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        address:
          $ref: '#/components/schemas/FulfillmentAddress'
        attributes:
          type: object
          additionalProperties:
            type: object
        companyOrOrganization:
          type: string
        email:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int32
        lastNameOrSurname:
          type: string
        middleNameOrInitial:
          type: string
        phoneNumbers:
          $ref: '#/components/schemas/FulfillmentPhone'
        shortFullName:
          type: string
    UpdateContactRequest:
      title: UpdateContactRequest
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/FulfillmentContact'
    PageMetadata:
      title: PageMetadata
      type: object
      properties:
        number:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelOfEntityModelOfShipment:
      title: PagedModelOfEntityModelOfShipment
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EntityModelOfShipment'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    DashboardStep:
      title: DashboardStep
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        attributes:
          type: object
          additionalProperties:
            type: object
        name:
          type: string
        total:
          type: integer
          format: int32
    EntityModelOfDashboardResponse:
      title: EntityModelOfDashboardResponse
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        shipmentType:
          type: string
        shipmentTypeDisplayName:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/DashboardStep'
    LocationSummary:
      title: LocationSummary
      type: object
      properties:
        currencyCode:
          type: string
        currentAmount:
          type: number
          format: bigdecimal
        currentItems:
          type: integer
          format: int32
        currentShipments:
          type: integer
          format: int32
        locationCode:
          type: string
        totalAmount:
          type: number
          format: bigdecimal
        totalItems:
          type: integer
          format: int32
        totalShipments:
          type: integer
          format: int32
    CollectionModelOfLocationSummary:
      title: CollectionModelOfLocationSummary
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/LocationSummary'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    CancelShipment:
      title: CancelShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
        canceledReason:
          $ref: '#/components/schemas/FulfillmentCanceledReason'
        sendNotifications:
          type: boolean
    BackorderShipmentRequest:
      title: BackorderShipmentRequest
      type: object
      properties:
        backorderReleaseDate:
          type: string
          format: date-time
    BackorderItemUpdate:
      title: BackorderItemUpdate
      required:
        - lineId
      type: object
      properties:
        backorderReleaseDate:
          type: string
          format: date-time
        lineId:
          type: integer
          format: int32
    BackorderItemsUpdateRequest:
      title: BackorderItemsUpdateRequest
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BackorderItemUpdate'
    BackorderItem:
      title: BackorderItem
      required:
        - lineId
        - quantity
      type: object
      properties:
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    BackorderItemsRequest:
      title: BackorderItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/BackorderItem'
    CancelItem:
      title: CancelItem
      required:
        - lineId
        - quantity
      type: object
      properties:
        canceledReason:
          $ref: '#/components/schemas/FulfillmentCanceledReason'
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    CancelItemsRequest:
      title: CancelItemsRequest
      type: object
      properties:
        blockAssignment:
          type: boolean
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/CancelItem'
        sendNotifications:
          type: boolean
    RejectItem:
      title: RejectItem
      required:
        - lineId
        - quantity
      type: object
      properties:
        blockAssignment:
          type: boolean
          description: >-
            If true, order routing will not suggest that any shipments with
            these items be assigned to the original location. This persists
            until the inventory records for these items are updated. When the
            records are updated, blockAssignment will automatically be disabled
            again to allow new assignments. This is an optional parameter and
            defaults to false if not provided in the request.
          example: false
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        rejectedReason:
          $ref: '#/components/schemas/RejectedReason'
    RejectShipment:
      title: RejectShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/RejectItem'
        rejectedReason:
          $ref: '#/components/schemas/RejectedReason'
    RejectItemsRequest:
      title: RejectItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/RejectItem'
    GiftCardInfoRequest:
      title: GiftCardInfoRequest
      type: object
      properties:
        email:
          pattern: ^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$
          type: string
        firstName:
          type: string
        giftCardMessage:
          maxLength: 256
          minLength: 0
          type: string
        lastNameOrSurname:
          type: string
    PickupItemsRequest:
      title: PickupItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentPickupItem'
    ReassignItem:
      title: ReassignItem
      required:
        - lineId
        - quantity
      type: object
      properties:
        blockAssignment:
          type: boolean
          description: >-
            If true, order routing will not suggest that any shipments with
            these items be assigned to the original location. This persists
            until the inventory records for these items are updated. When the
            records are updated, blockAssignment will automatically be disabled
            again to allow new assignments. This is an optional parameter and
            defaults to false if not provided in the request.
          example: false
        fulfillmentLocationCode:
          type: string
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        reassignedReason:
          $ref: '#/components/schemas/ReassignedReason'
    ReassignShipment:
      title: ReassignShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
          description: >-
            If true, order routing will not suggest that any shipments with
            these items be assigned to the original location. This persists
            until the inventory records for these items are updated. When the
            records are updated, blockAssignment will automatically be disabled
            again to allow new assignments. This is an optional parameter and
            defaults to false if not provided in the request.
          example: false
        fulfillmentLocationCode:
          type: string
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReassignItem'
        reassignedReason:
          $ref: '#/components/schemas/ReassignedReason'
    ReassignItemsRequest:
      title: ReassignItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReassignItem'
    CollectionModelOfTask:
      title: CollectionModelOfTask
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Task'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentLink'
    TaskReason:
      title: TaskReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    HandleOption:
      title: HandleOption
      type: object
      properties:
        blockAssignment:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentItem'
        reason:
          $ref: '#/components/schemas/TaskReason'
    TaskComplete:
      title: TaskComplete
      type: object
      properties:
        handleOption:
          $ref: '#/components/schemas/HandleOption'
        taskBody:
          type: object
          additionalProperties:
            type: object
    TransferredReason:
      title: TransferredReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    TransferItem:
      title: TransferItem
      required:
        - lineId
        - quantity
      type: object
      properties:
        blockAssignment:
          type: boolean
        fulfillmentLocationCode:
          type: string
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        transferredReason:
          $ref: '#/components/schemas/TransferredReason'
    TransferShipment:
      title: TransferShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
        fulfillmentLocationCode:
          type: string
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/TransferItem'
        transferredReason:
          $ref: '#/components/schemas/TransferredReason'
    TransferItemsRequest:
      title: TransferItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/TransferItem'
    TaskDefinition:
      title: TaskDefinition
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentTaskInput'
        name:
          type: string
        priority:
          type: integer
          format: int32
        skippable:
          type: boolean
        subject:
          type: string
    WorkflowProcessVariable:
      title: WorkflowProcessVariable
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - BOOLEAN
            - INTEGER
            - LIST
            - NUMBER
            - OBJECT
            - STRING
            - UNKNOWN
    EntityModelOfWorkflowProcess:
      title: EntityModelOfWorkflowProcess
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        attributes:
          type: object
          additionalProperties:
            type: object
        containerAlias:
          type: string
        containerId:
          type: string
        id:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDefinition'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowProcessVariable'
        version:
          type: string
    PagedModelOfEntityModelOfWorkflowProcess:
      title: PagedModelOfEntityModelOfWorkflowProcess
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EntityModelOfWorkflowProcess'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    FulfillmentAuditInfo:
      title: AuditInfo
      type: object
      properties:
        createBy:
          type: string
        createDate:
          type: string
          format: date-time
        updateBy:
          type: string
        updateDate:
          type: string
          format: date-time
    FulfillmentPackage:
      title: Package
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/FulfillmentAuditInfo'
        carrier:
          type: string
        fxcbDocumentsUrl:
          type: string
        fxcbPackNotificationId:
          type: string
        hasLabel:
          type: boolean
        integratorId:
          type: string
        labelFormat:
          type: string
        manifestId:
          type: string
        measurements:
          $ref: '#/components/schemas/FulfillmentPackageMeasurements'
        packageId:
          type: string
        packagingType:
          type: string
        packingSlipItemDetails:
          type: array
          items:
            $ref: '#/components/schemas/PackingSlipItemDetailDto'
        packingSlipNumber:
          type: integer
          format: int32
        returnCarrier:
          type: string
        returnTrackingNumbers:
          type: array
          items:
            type: string
        returnTrackings:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentTracking'
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        signatureRequired:
          type: boolean
        stringBarcode:
          type: string
        trackingNumbers:
          type: array
          items:
            type: string
        trackings:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentTracking'
    FulfillmentPhone:
      title: Phone
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        home:
          type: string
        mobile:
          type: string
        work:
          type: string
    FulfillmentAddress:
      title: Address
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        address4:
          type: string
        addressType:
          type: string
          enum:
            - Commercial
            - Residential
        attributes:
          type: object
          additionalProperties:
            type: object
        cityOrTown:
          type: string
        countryCode:
          type: string
        isValidated:
          type: boolean
        latitude:
          type: string
        longitude:
          type: string
        postalOrZipCode:
          type: string
        stateOrProvince:
          type: string
    FulfillmentContact:
      title: Contact
      type: object
      properties:
        address:
          $ref: '#/components/schemas/FulfillmentAddress'
        attributes:
          type: object
          additionalProperties:
            type: object
        companyOrOrganization:
          type: string
        email:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int32
        lastNameOrSurname:
          type: string
        middleNameOrInitial:
          type: string
        phoneNumbers:
          $ref: '#/components/schemas/FulfillmentPhone'
        shortFullName:
          type: string
    FulfillmentChangeMessage:
      title: ChangeMessage
      type: object
      properties:
        amount:
          type: number
          format: bigdecimal
        appId:
          type: string
        appKey:
          type: string
        appName:
          type: string
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        attributes:
          type: object
          additionalProperties:
            type: object
        changeMessageId:
          type: string
        correlationId:
          type: string
        createdDate:
          type: string
          format: date-time
        identifier:
          type: string
        message:
          type: string
        metadata:
          type: string
        newValue:
          type: string
        oldValue:
          type: string
        subject:
          type: string
        subjectType:
          type: string
        success:
          type: boolean
        userDisplayName:
          type: string
        userFirstName:
          type: string
        userId:
          type: string
        userLastName:
          type: string
        verb:
          type: string
    FulfillmentMeasurement:
      title: Measurement
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        unit:
          type: string
        value:
          type: number
          format: bigdecimal
    FulfillmentPackageMeasurements:
      title: PackageMeasurements
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        height:
          $ref: '#/components/schemas/FulfillmentMeasurement'
        length:
          $ref: '#/components/schemas/FulfillmentMeasurement'
        weight:
          $ref: '#/components/schemas/FulfillmentMeasurement'
        width:
          $ref: '#/components/schemas/FulfillmentMeasurement'
    FulfillmentProductOption:
      title: ProductOption
      type: object
      properties:
        attributeFQN:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
        dataType:
          type: string
        name:
          type: string
        shopperEnteredValue:
          type: object
        stringValue:
          type: string
        value:
          type: object
    FulfillmentFulfillmentField:
      title: FulfillmentField
      type: object
      properties:
        name:
          type: string
        required:
          type: boolean
        userEnteredValue:
          type: object
    FulfillmentDestination:
      title: Destination
      type: object
      properties:
        data:
          type: object
        destinationContact:
          $ref: '#/components/schemas/FulfillmentContact'
        isDestinationCommercial:
          type: boolean
        locationCode:
          type: string
    FulfillmentTracking:
      title: Tracking
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        number:
          type: string
        url:
          type: string
    FulfillmentPickupItem:
      title: PickupItem
      required:
        - lineId
        - quantity
      type: object
      properties:
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    FulfillmentShipmentStatusReason:
      title: ShipmentStatusReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    FulfillmentLink:
      title: Link
      type: object
      properties:
        deprecation:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        name:
          type: string
        profile:
          type: string
        rel:
          $ref: '#/components/schemas/LinkRelation'
        title:
          type: string
        type:
          type: string
    FulfillmentTaskInput:
      title: TaskInput
      type: object
      properties:
        helpMessage:
          type: string
        label:
          type: string
        maxLength:
          type: integer
          format: int32
        maximum:
          type: number
          format: bigdecimal
        minLength:
          type: integer
          format: int32
        minimum:
          type: number
          format: bigdecimal
        name:
          type: string
        options:
          type: array
          items:
            type: object
        pattern:
          type: string
        required:
          type: boolean
        type:
          type: string
          enum:
            - BOOLEAN
            - INTEGER
            - LIST
            - NUMBER
            - OBJECT
            - STRING
            - UNKNOWN
    FulfillmentWorkflowState:
      title: WorkflowState
      type: object
      properties:
        activeTaskName:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        completedDate:
          type: string
          format: date-time
        processInstanceId:
          type: string
        shipmentState:
          type: string
        taskList:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BpmVariable'
    FulfillmentGiftCard:
      title: GiftCard
      type: object
      properties:
        activationDate:
          type: string
          format: date-time
        cardNumber:
          type: string
        code:
          type: string
        creditType:
          type: string
        creditValue:
          type: number
          format: bigdecimal
        currencyCode:
          type: string
        currentBalance:
          type: number
          format: bigdecimal
        customerId:
          type: integer
          format: int32
        expirationDate:
          type: string
          format: date-time
        initialBalance:
          type: number
          format: bigdecimal
    FulfillmentCanceledReason:
      title: CanceledReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    FulfillmentCanceledItem:
      title: CanceledItem
      required:
        - handling
        - handlingTax
        - itemTax
        - lineId
        - quantity
        - shipping
        - shippingTax
      type: object
      properties:
        actualPrice:
          type: number
          format: bigdecimal
        allocatedQuantity:
          type: integer
          format: int32
        allowsBackOrder:
          type: boolean
        allowsFutureAllocate:
          type: boolean
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
        canceledReason:
          $ref: '#/components/schemas/FulfillmentCanceledReason'
        cartItemId:
          type: string
        childItemIds:
          type: array
          items:
            type: string
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
          format: bigdecimal
        data:
          type: object
          additionalProperties:
            type: object
        duty:
          type: number
          format: bigdecimal
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentFields:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentFulfillmentField'
        giftCards:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentGiftCard'
        goodsType:
          type: string
          enum:
            - Digital
            - DigitalCredit
            - DigitalGiftCard
            - Physical
            - Service
        handling:
          type: number
          format: bigdecimal
        handlingDiscount:
          type: number
          format: bigdecimal
        handlingTax:
          type: number
          format: bigdecimal
        imageUrl:
          type: string
        inventoryTags:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentInventoryTag'
        isAssemblyRequired:
          type: boolean
        isPackagedStandAlone:
          type: boolean
        isReservedInventory:
          type: boolean
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
          format: bigdecimal
        itemTax:
          type: number
          format: bigdecimal
        lineId:
          type: integer
          format: int32
        lineItemAdjustment:
          type: number
          format: bigdecimal
        lineItemCost:
          type: number
          format: bigdecimal
        locatorName:
          type: string
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentProductOption'
        originalOrderItemId:
          type: string
        originalQuantity:
          type: integer
          format: int32
        overridePrice:
          type: number
          format: bigdecimal
        parentItemId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        shipping:
          type: number
          format: bigdecimal
        shippingDiscount:
          type: number
          format: bigdecimal
        shippingTax:
          type: number
          format: bigdecimal
        sku:
          type: string
        taxData:
          type: object
        taxableHandling:
          type: number
          format: bigdecimal
        taxableLineItemCost:
          type: number
          format: bigdecimal
        taxableShipping:
          type: number
          format: bigdecimal
        transferQuantity:
          type: integer
          format: int32
          description: This is deprecated.
        trueTransferQuantity:
          type: integer
          format: int32
          description: This is the actual quantity transferred.
        unitPrice:
          type: number
          format: bigdecimal
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
          format: bigdecimal
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingTaxAdjustment:
          type: number
          format: bigdecimal
        weightedLineItemTaxAdjustment:
          type: number
          format: bigdecimal
        weightedShipmentAdjustment:
          type: number
          format: bigdecimal
        weightedShippingAdjustment:
          type: number
          format: bigdecimal
        weightedShippingTaxAdjustment:
          type: number
          format: bigdecimal
    FulfillmentCustomer:
      title: Customer
      type: object
      properties:
        customerContact:
          $ref: '#/components/schemas/FulfillmentContact'
        data:
          type: object
        isDestinationCommercial:
          type: boolean
    FulfillmentShipmentNote:
      title: ShipmentNote
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/FulfillmentAuditInfo'
        noteId:
          type: string
        noteText:
          type: string
        role:
          type: string
        username:
          type: string
    FulfillmentShipment:
      title: Shipment
      required:
        - orderId
        - orderNumber
        - shipmentType
        - total
      type: object
      properties:
        acceptedDate:
          type: string
          format: date-time
        alternateContact:
          $ref: '#/components/schemas/FulfillmentContact'
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        assignedLocationCode:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        canceledItems:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentCanceledItem'
        cartId:
          type: string
        changeMessages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentChangeMessage'
        childShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        currencyCode:
          type: string
        customer:
          $ref: '#/components/schemas/FulfillmentCustomer'
        customerAccountId:
          type: integer
          format: int32
        customerAddressId:
          type: integer
          format: int32
        customerTaxId:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
        destination:
          $ref: '#/components/schemas/FulfillmentDestination'
        dutyAdjustment:
          type: number
          format: bigdecimal
        dutyTotal:
          type: number
          format: bigdecimal
        email:
          type: string
        externalOrderId:
          type: string
        fulfillmentDate:
          type: string
          format: date-time
        fulfillmentLocationCode:
          type: string
        fulfillmentStatus:
          type: string
          enum:
            - Fulfilled
            - NotFulfilled
        futureDate:
          type: string
          format: date-time
        handlingAdjustment:
          type: number
          format: bigdecimal
        handlingSubtotal:
          type: number
          format: bigdecimal
        handlingTaxAdjustment:
          type: number
          format: bigdecimal
        handlingTaxTotal:
          type: number
          format: bigdecimal
        handlingTotal:
          type: number
          format: bigdecimal
        isAutoAssigned:
          type: boolean
        isExpress:
          type: boolean
        isHistoricalImport:
          type: boolean
        isOptInForSms:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentItem'
        lineItemSubtotal:
          type: number
          format: bigdecimal
        lineItemTaxAdjustment:
          type: number
          format: bigdecimal
        lineItemTaxTotal:
          type: number
          format: bigdecimal
        lineItemTotal:
          type: number
          format: bigdecimal
        orderId:
          type: string
        orderNumber:
          type: integer
          format: int32
        orderSubmitDate:
          type: string
          format: date-time
        originalShipmentNumber:
          type: integer
          format: int32
        packages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentPackage'
        parentCheckoutNumber:
          type: integer
          format: int32
        parentShipmentNumber:
          type: integer
          format: int32
        pickStatus:
          type: string
          enum:
            - AVAILABLE
            - COMPLETE
            - IN_WAVE
            - PICKED
            - TRANSFER
        pickType:
          type: string
          enum:
            - MULTIPLE
            - NORMAL
            - SINGLE
        pickWaveNumber:
          type: integer
          format: int32
        pickupInfo:
          type: object
          additionalProperties:
            type: object
        readyForPickup:
          type: boolean
        readyForPickupDate:
          type: string
          format: date-time
        readyToCapture:
          type: boolean
        reassignedItems:
          type: array
          items:
            $ref: '#/components/schemas/ReassignedItem'
        receivedDate:
          type: string
          format: date-time
        rejectedItems:
          type: array
          items:
            $ref: '#/components/schemas/RejectedItem'
        sentCustomerAtStoreNotification:
          type: boolean
        sentCustomerInTransitNotification:
          type: boolean
        shipmentAdjustment:
          type: number
          format: bigdecimal
        shipmentNotes:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentShipmentNote'
        shipmentNumber:
          type: integer
          format: int32
        shipmentStatus:
          type: string
          enum:
            - BACKORDER
            - CANCELED
            - CUSTOMER_CARE
            - DELETED
            - FULFILLED
            - FUTURE
            - READY
            - REASSIGNED
        shipmentStatusReason:
          $ref: '#/components/schemas/FulfillmentShipmentStatusReason'
        shipmentType:
          type: string
        shippingAdjustment:
          type: number
          format: bigdecimal
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        shippingSubtotal:
          type: number
          format: bigdecimal
        shippingTaxAdjustment:
          type: number
          format: bigdecimal
        shippingTaxTotal:
          type: number
          format: bigdecimal
        shippingTotal:
          type: number
          format: bigdecimal
        shopperNotes:
          $ref: '#/components/schemas/FulfillmentFulfillmentShopperNotes'
        siteId:
          type: integer
          format: int32
        taxData:
          type: object
        tenantId:
          type: integer
          format: int32
        total:
          type: number
          format: bigdecimal
        transferShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        transferredItems:
          type: array
          items:
            $ref: '#/components/schemas/TransferredItem'
        transitTime:
          type: string
        userId:
          type: string
        workflowProcessContainerId:
          type: string
        workflowProcessId:
          type: string
        workflowState:
          $ref: '#/components/schemas/FulfillmentWorkflowState'
    FulfillmentAppeasementReason:
      title: AppeasementReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    FulfillmentInventoryTag:
      title: InventoryTag
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    FulfillmentItem:
      title: Item
      required:
        - handling
        - handlingTax
        - itemTax
        - lineId
        - quantity
        - shipping
        - shippingTax
      type: object
      properties:
        actualPrice:
          type: number
          format: bigdecimal
        allocatedQuantity:
          type: integer
          format: int32
        allowsBackOrder:
          type: boolean
        allowsFutureAllocate:
          type: boolean
        appeasementReason:
          $ref: '#/components/schemas/FulfillmentAppeasementReason'
        attributes:
          type: object
          additionalProperties:
            type: object
        auditInfo:
          $ref: '#/components/schemas/AuditInfo0'
        backorderReleaseDate:
          type: string
          format: date-time
        cartItemId:
          type: string
        childItemIds:
          type: array
          items:
            type: string
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
          format: bigdecimal
        data:
          type: object
          additionalProperties:
            type: object
        duty:
          type: number
          format: bigdecimal
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentFields:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentFulfillmentField'
        giftCards:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentGiftCard'
        goodsType:
          type: string
          enum:
            - Digital
            - DigitalCredit
            - DigitalGiftCard
            - Physical
            - Service
        handling:
          type: number
          format: bigdecimal
        handlingDiscount:
          type: number
          format: bigdecimal
        handlingTax:
          type: number
          format: bigdecimal
        imageUrl:
          type: string
        inventoryTags:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentInventoryTag'
        isAssemblyRequired:
          type: boolean
        isPackagedStandAlone:
          type: boolean
        isReservedInventory:
          type: boolean
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
          format: bigdecimal
        itemTax:
          type: number
          format: bigdecimal
        lineId:
          type: integer
          format: int32
        lineItemAdjustment:
          type: number
          format: bigdecimal
        lineItemCost:
          type: number
          format: bigdecimal
        locatorName:
          type: string
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentProductOption'
        originalOrderItemId:
          type: string
        overridePrice:
          type: number
          format: bigdecimal
        parentItemId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        shipping:
          type: number
          format: bigdecimal
        shippingDiscount:
          type: number
          format: bigdecimal
        shippingTax:
          type: number
          format: bigdecimal
        sku:
          type: string
        taxData:
          type: object
        taxableHandling:
          type: number
          format: bigdecimal
        taxableLineItemCost:
          type: number
          format: bigdecimal
        taxableShipping:
          type: number
          format: bigdecimal
        transferQuantity:
          type: integer
          format: int32
          description: This is deprecated.
        trueTransferQuantity:
          type: integer
          format: int32
          description: This is the actual quantity transferred.
        unitPrice:
          type: number
          format: bigdecimal
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
          format: bigdecimal
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingAdjustment:
          type: number
          format: bigdecimal
        weightedHandlingTaxAdjustment:
          type: number
          format: bigdecimal
        weightedLineItemTaxAdjustment:
          type: number
          format: bigdecimal
        weightedShipmentAdjustment:
          type: number
          format: bigdecimal
        weightedShippingAdjustment:
          type: number
          format: bigdecimal
        weightedShippingTaxAdjustment:
          type: number
          format: bigdecimal
    FulfillmentManifestShipment:
      title: ManifestShipment
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/FulfillmentDestination'
        externalOrderId:
          type: string
        fulfillmentLocationCode:
          type: string
        orderNumber:
          type: integer
          format: int32
        packages:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentPackage'
        shipmentNumber:
          type: integer
          format: int32
        shipmentType:
          type: string
    FulfillmentManifestRequest:
      title: ManifestRequest
      required:
        - carrierId
        - locationCode
      type: object
      properties:
        carrierId:
          type: string
        includedShipments:
          type: array
          items:
            $ref: '#/components/schemas/ManifestRequestShipment'
        locationCode:
          type: string
    FulfillmentFulfillmentShopperNotes:
      title: ShopperNotes
      type: object
      properties:
        comments:
          type: string
        deliveryInstructions:
          type: string
        giftMessage:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      description: JWT Authorization header using the Bearer scheme.
      scheme: bearer
      bearerFormat: JWT
servers:
  - url: https://t{tenantId}-s{siteId}.{env}.mozu.com/api
    description: Site Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      siteId:
        default: '0'
        description: Id of the Site
      env:
        default: sandbox
        enum:
          - sandbox
          - tp1
          - tp2
          - tp3
          - tp4
          - tp5
          - stg1
  - url: https://t{tenantId}.{env}.mozu.com/api
    description: Tenant Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      env:
        default: sandbox
        enum:
          - sandbox
          - tp1
          - tp2
          - tp3
          - tp4
          - tp5
          - stg1
          - stg2
  - url: https://home.mozu.com/api
    description: HomePod Api
  - url: https://t{tenantId}.{env}.euw1.kibocommerce.com/api
    description: EURO Tenant Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      env:
        default: sandbox
        enum:
          - sb
          - tp1
  - url: https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api
    description: EURO Site Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      siteId:
        default: '0'
        description: Id of the Site
      env:
        default: sandbox
        enum:
          - sb
          - tp1
  - url: https://home.euw1.kibocommerce.com/api
    description: EURO HomePod Api
security:
  - bearerAuth: []
