{
  "openapi": "3.0.1",
  "info": {
    "title": "Pricing Storefront",
    "description": "OpenAPI Spec for Kibo PricingRuntime Service",
    "version": "1.0.1"
  },
  "paths": {
    "/commerce/catalog/storefront/discounts/autoaddtarget/{discountId}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Auto Add Target",
        "description": "Retrieves the auto add target for the specified discountId.",
        "parameters": [
          {
            "name": "discountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoAddDiscountTarget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoAddDiscountTarget"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoAddDiscountTarget"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/id/{id}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Discount by ID",
        "description": "Retrieves a discount by discountId.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/couponCode/{couponCode}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Discount by Coupon Code",
        "description": "Retrieves a discount by coupon code.",
        "parameters": [
          {
            "name": "couponCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/code/{code}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Discount by Code",
        "description": "Retrieves a discount by discount code.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/label/{label}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Discounts by Label",
        "description": "Retrieves a list of discounts by label.",
        "parameters": [
          {
            "name": "label",
            "in": "path",
            "description": "The label of the discount.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscountCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscountCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscountCollection"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/products/{productCode}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Item Discounts by Product",
        "description": "Retrieves a list of discounts that appear on the storefront according to specified filter criteria.",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/products": {
      "post": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Item Discounts",
        "description": "Retrieves a list of discounts that appear on the storefront according to specified filter criteria.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindItemDiscountsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/commerce/catalog/storefront/discounts/orders": {
      "post": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Order Level Discounts",
        "description": "Retrieves a list of order level discounts that appear on the storefront according to specified filter criteria.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrderDiscountsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/commerce/catalog/storefront/discounts/secure/id/{id}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Secure Discount by ID",
        "description": "Retrieves a non-public discount by discountId. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the discount",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/secure/couponCode/{couponCode}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Secure Discount by Coupon Code",
        "description": "Retrieves a non-public discount by coupon code. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "couponCode",
            "in": "path",
            "description": "The coupon code of the discount",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/secure/code/{code}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Secure Discount by Code",
        "description": "Retrieves a non-public discount by discount code. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The discount code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscount"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/secure/label/{label}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "summary": "Get Secure Discounts by Label",
        "description": "Retrieves non-public discounts by label. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "label",
            "in": "path",
            "description": "The label of the discount.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscountCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscountCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PricingRuntimeDiscountCollection"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/secure/products/{productCode}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Secure Item Discounts by Product",
        "description": "Retrieves a list of non-public discounts according to specified filter criteria. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nonPublicOnly",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FindDiscountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/secure/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Get Secure Item Discounts",
        "description": "Retrieves a list of non-public discounts according to specified filter criteria. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "nonPublicOnly",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindItemDiscountsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/discounts/secure/orders": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Get Secure Order Discounts",
        "description": "Retrieves a list of non-public discounts according to specified filter criteria. These can only be accessed by users with the Discount Read behavior.",
        "parameters": [
          {
            "name": "nonPublicOnly",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrderDiscountsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindDiscountsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commerce/catalog/storefront/tax/estimate-order": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "summary": "Estimate Order Tax",
        "description": "Retrieves a tax context for the given order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxableOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTaxContext"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTaxContext"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTaxContext"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AutoAddDiscountTarget": {
        "type": "object",
        "properties": {
          "discountId": {
            "type": "integer",
            "description": "Unique identifier of the discount. System-supplied and read-only.",
            "format": "int32"
          },
          "friendlyDescription": {
            "type": "string",
            "description": "Friendly description of the discount.",
            "nullable": true
          },
          "includedProductCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Included product codes",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountCustomProperty": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Gets or sets the code of the discount custom property.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the discount custom property.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Gets or sets the value of the discount custom property.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a custom property for a discount."
      },
      "CategoryDiscountCondition": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "Unique identifier of the category to which the discount condition applies.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a product category and quantity constraint"
      },
      "ProductDiscountCondition": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Product code of the product to discount.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a product and quantity constraint"
      },
      "ContinuityRecurrenceSettings": {
        "type": "object",
        "properties": {
          "startOrdinal": {
            "type": "integer",
            "description": "Continuity ordinal to start discounting",
            "format": "int32",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "description": "Interval until next discount applies",
            "format": "int32",
            "nullable": true
          },
          "stopOrdinal": {
            "type": "integer",
            "description": "Continuity ordinal to stop discounting",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeDiscountCondition": {
        "type": "object",
        "properties": {
          "maxRedemptionCount": {
            "type": "integer",
            "description": "Maximum number of times that the discount can be redeemed. Default is null (no limit to discount redemptions).",
            "format": "int32",
            "nullable": true
          },
          "requiresCoupon": {
            "type": "boolean",
            "description": "If true, the shopper needs to enter a coupon code to redeem the discount."
          },
          "couponCode": {
            "type": "string",
            "description": "Code of the coupon associated with the discount (if a coupon code is required). The merchant can supply the code or the system can generate it.",
            "nullable": true
          },
          "requiresAuthenticatedUser": {
            "type": "boolean",
            "description": "Determines is this discount can be used by an anonymous user \r\nDefaults to false to allow discounts for anonymous users."
          },
          "includedPaymentWorkflows": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of payment types that trigger this discount to be valid.",
            "nullable": true
          },
          "includedCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDiscountCondition"
            },
            "description": "List of categories that must be purchased in order for the discount to be valid.",
            "nullable": true
          },
          "excludedCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDiscountCondition"
            },
            "description": "List of categories to discount. When a discount applies to a category, all products in the category are discounted.",
            "nullable": true
          },
          "includedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountCondition"
            },
            "description": "List of products that are eligible for the discount.",
            "nullable": true
          },
          "excludedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountCondition"
            },
            "description": "List of products that are eligible for the discount.",
            "nullable": true
          },
          "customerSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeCustomerSegment"
            },
            "description": "List of customer groups for which the discount applies",
            "nullable": true
          },
          "minimumQuantityRequiredProducts": {
            "type": "integer",
            "description": "Minimum quantity of products in the specified IncludedProducts that must be purchased to\r\nqualify for the associated discount.\r\nDefaults to 1 if  null and IncludedProducts has values.",
            "format": "int32",
            "nullable": true
          },
          "minimumQuantityProductsRequiredInCategories": {
            "type": "integer",
            "description": "Minimum quantity of products in the categories specified in IncludedCategories that must be purchased to\r\nqualify for the associated discount.\r\nDefaults to 1 if  null and IncludedCategories has values",
            "format": "int32",
            "nullable": true
          },
          "minimumOrderAmount": {
            "type": "number",
            "description": "Only applies to order.\r\nMinimum order subtotal after discounts in order for the associated discount to be applied",
            "format": "double",
            "nullable": true
          },
          "maximumOrderAmount": {
            "type": "number",
            "description": "Only applies to order.\r\nMaximum order subtotal after discounts in order for the associated discount to be applied",
            "format": "double",
            "nullable": true
          },
          "categoriesToExcludeFromMinOrderTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDiscountCondition"
            },
            "description": "List of categories to discount. When a discount applies to a category, all products in the category are discounted.",
            "nullable": true
          },
          "productsToExcludeFromMinOrderTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountCondition"
            },
            "description": "List of products that are eligible for the discount.",
            "nullable": true
          },
          "minimumLifetimeValueAmount": {
            "type": "number",
            "description": "Minimum lifetime value amount required for this discount to apply",
            "format": "double",
            "nullable": true
          },
          "minimumCategorySubtotalBeforeDiscounts": {
            "type": "number",
            "description": "Minimum amount that must be purchased in the combined categories defined in \r\nIncludedCategories.  Amount is calculated before discounting.\r\nNot used if IncludedCategories is empty.",
            "format": "double",
            "nullable": true
          },
          "minimumRequiredQuantityPerRedemption": {
            "type": "integer",
            "description": "Defines a minimum quantity that is required for a target only discount",
            "format": "int32",
            "nullable": true
          },
          "validSubscriptionFrequencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of subscription frequencies to which the discount will apply.",
            "nullable": true
          },
          "validSubscriptionContinuityOrdinals": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Ordinals at which a continuity order should receive the discount.",
            "nullable": true
          },
          "minDistinctProductsRequired": {
            "type": "integer",
            "description": "The minimum number of distinct products on the order\r\nNot a quantity calculation.",
            "format": "int32",
            "nullable": true
          },
          "minTotalOrderQuantity": {
            "type": "integer",
            "description": "The order must contain at least this total quantity of items for the discount to apply.\r\nYou must buy a combined quantity of at least x amount.",
            "format": "int32",
            "nullable": true
          },
          "continuityRecurrenceSettings": {
            "$ref": "#/components/schemas/ContinuityRecurrenceSettings"
          },
          "validFulfillmentMethods": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The discount condition for fulfillment methods, if present the discount will be applied only to these fulfillment methods.\r\nThis must be a value defined in FulfillmentMethodConst below.",
            "nullable": true
          },
          "exclusiveSiteIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The discount condition for site Ids, if present the discount will be applied only to these sites.\r\nIf not present discount will work for all sites in a catalog.",
            "nullable": true
          },
          "exclusiveLocationCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of locations where the item/order should be fulfilled for the discount to be valid.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "TargetedProduct": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Product code of the product to discount.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product to discount."
      },
      "RuntimeDiscountTarget": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "    Type of target to which the discount applies. Possible values: <pre>Product</pre> or <pre>Shipping</pre>. \r\nIf this is a <pre>Product</pre> type, you can specify which products or categories that the discount applies to.\r\n    If this is a <pre>Shipping</pre> type then you must specify which shipping methods apply.",
            "nullable": true
          },
          "includeAllProducts": {
            "type": "boolean",
            "description": "If yes, the discount applies to all products sold on the storefront.",
            "nullable": true
          },
          "includedCategoriesOperator": {
            "type": "string",
            "description": "Applies to Included categories\r\nWhen Any, the target product can belong to any specified category.\r\nWhen All, the target product must belong to all specified categories.\r\nDefaults to Any",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeTargetedCategory"
            },
            "description": "List of categories to discount. When a discount applies to a category, all products in the category are discounted.",
            "nullable": true
          },
          "excludedCategoriesOperator": {
            "type": "string",
            "description": "Applies to Included categories\r\nDefaults to Any",
            "nullable": true
          },
          "excludedCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeTargetedCategory"
            },
            "description": "List of categories to exclude from the discount. Useful to exclude specific child categories.",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetedProduct"
            },
            "description": "List of products that are eligible for the discount.",
            "nullable": true
          },
          "excludedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetedProduct"
            },
            "description": "List of products that are excluded from the discount.",
            "nullable": true
          },
          "excludeItemsWithExistingShippingDiscounts": {
            "type": "boolean",
            "description": "Prevents order scoped discounts from layering over items that already have a shipping discount with the \r\nsame type.",
            "nullable": true
          },
          "excludeItemsWithExistingProductDiscounts": {
            "type": "boolean",
            "description": "Prevents order scoped discounts from layering over items that already have a product discount with the \r\nsame type.",
            "nullable": true
          },
          "shippingMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeTargetedShippingMethod"
            },
            "description": "Shipping method that is eligible for shipping discounts. This is a shipping method defined in Shipping Settings.",
            "nullable": true
          },
          "shippingZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeTargetedShippingZone"
            },
            "description": "Shipping Zones that are applicable for this discount",
            "nullable": true
          },
          "doNotApplyToHandlingFees": {
            "type": "boolean",
            "description": "Prevents the discount from being applied to handling fees",
            "nullable": true
          },
          "maximumQuantityPerRedemption": {
            "type": "integer",
            "description": "When a condition is specified, this property limits the number of items that can be targeted per discount redemption with an order.\r\nif multiple redemptions are allowed per order then multiples of this value would be allowed in multiples of the associated \r\ncondition.\r\nIf no condition is specified then this value is not used.  \r\nIf null and condition exists, then defaults to 1.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeDiscount": {
        "type": "object",
        "properties": {
          "discountId": {
            "type": "integer",
            "description": "Unique identifier of the discount. System-supplied and read-only.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Unique identifier of the discount.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the discount.",
            "nullable": true
          },
          "friendlyDescription": {
            "type": "string",
            "description": "Friendly description of the discount.",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "maxRedemptions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximumUsesPerUser": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requiresAuthenticatedUser": {
            "type": "boolean"
          },
          "doesNotApplyToProductsWithSalePrice": {
            "type": "boolean"
          },
          "maximumRedemptionsPerOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximumDiscountValuePerOrder": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxDiscountValuePerRedemption": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "doesNotApplyToMultiShipToOrders": {
            "type": "boolean",
            "nullable": true
          },
          "includedPriceLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "redemptions": {
            "type": "integer",
            "format": "int32"
          },
          "isPublic": {
            "type": "boolean",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "amountType": {
            "type": "string",
            "description": "Type of discount, which can be either a percentage off the price, a specific monetary amount, or free. Possible values: \"Percentage,\" \"Amount,\" and \"Free\".",
            "nullable": true
          },
          "target": {
            "$ref": "#/components/schemas/PricingRuntimeDiscountTarget"
          },
          "condition": {
            "$ref": "#/components/schemas/PricingRuntimeDiscountCondition"
          },
          "expirationDate": {
            "type": "string",
            "description": "When the discount expires. If null, there's no expiration date.",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "stackingLayer": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Name of the discount that can be applied and its expiration date. The discount can be on a single product or the\r\nentire order."
      },
      "ProductDiscountMap": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "discountIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FindDiscountsResponse": {
        "type": "object",
        "properties": {
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeDiscount"
            },
            "nullable": true
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountMap"
            },
            "nullable": true
          },
          "purchaseRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountMap"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FindDiscountsRequestBase": {
        "type": "object",
        "properties": {
          "productCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of product codes to query for discounts\r\nLimit: 20 product codes",
            "nullable": true
          },
          "isPurchaseRequirement": {
            "type": "boolean",
            "description": "Set false to exclude discounts that require one of the specified products to be purchased\r\ndefault is true"
          },
          "includeUnconditional": {
            "type": "boolean",
            "description": "When true, include discounts that are applied when there is no condition on the discount.\r\nBy default, these are not included."
          },
          "customerSegmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of customer segments that the discounts are applicable to.\r\nIf not specified, only discounts that are not restricted to any customer segment are returned.\r\nWhen specified, only discounts that are applicable to one of the specified customer segments are returned.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of discount labels to filter discounts by.\r\nLimit: 10 labels",
            "nullable": true
          },
          "targetType": {
            "type": "string",
            "description": "Types of discounts to search for Product, Shipping, or All\r\nwhen not specified, all types are returned.",
            "nullable": true
          },
          "locationCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of location codes to filter discounts by.\r\nwhen not specified all discounts are returned.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request parameters to search for discounts"
      },
      "FindItemDiscountsRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FindDiscountsRequestBase"
          }
        ],
        "properties": {
          "isTarget": {
            "type": "boolean",
            "description": "Set false to exclude discounts that require one of the specified products to be a target\r\nDefault is true"
          }
        },
        "additionalProperties": false,
        "description": "Request parameters to search for discounts"
      },
      "FindOrderDiscountsRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FindDiscountsRequestBase"
          }
        ],
        "additionalProperties": false,
        "description": "Request parameters to search for order level discounts"
      },
      "TaxContext": {
        "type": "object",
        "properties": {
          "taxContextId": {
            "type": "string",
            "description": "The unique id of this context. Will typically be the OrderId or CartId, depending when the tax is being calculated.",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "A unique id for a customer.  This may be the userid, checking with Avalara to determine the meaning of this",
            "nullable": true
          },
          "taxExemptId": {
            "type": "string",
            "description": "Tax exemption id.  Indicates that this customer or user is tax exempt",
            "nullable": true
          },
          "originAddress": {
            "$ref": "#/components/schemas/CommerceRuntimeAddress"
          },
          "destinationAddress": {
            "$ref": "#/components/schemas/CommerceRuntimeAddress"
          }
        },
        "additionalProperties": false,
        "description": "The context for the tax calculation."
      },
      "ProductAttribute": {
        "type": "object",
        "properties": {
          "inputType": {
            "type": "string",
            "description": "The InputType type of the attribute. Valid values for InputType are defined in InputTypeConst.",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "description": "The ValueType of the attribute. Valid values for ValueType are defined in ValueTypeTypeConst.",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "description": "The DataType of the attribute. Valid values for DataType are defined in DataTypeTypeConst.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the attribute in the language specified by LocaleCode.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the attribute in the language specified by LocaleCode.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Duplicate definition from ProductRuntime"
      },
      "AppliedLineItemDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PricingRuntimeAppliedDiscount"
          }
        ],
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "Quantity of items from the line item that the discount applies to.",
            "format": "int32"
          },
          "impactPerUnit": {
            "type": "number",
            "description": "Discount impact per unit for the quantity applied.\r\nThis value is not rounded.\r\nImpactPerUnit * Quantity = Impact @ Quantity",
            "format": "double"
          },
          "isForced": {
            "type": "boolean",
            "description": "Signifies that the discount is forced and not applied via best match."
          },
          "normalizedImpact": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Details of the discount applied to a product."
      },
      "TaxableLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the line item.",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "description": "Unique code of the product.",
            "nullable": true
          },
          "variantProductCode": {
            "type": "string",
            "description": "For configurable products, the unique identifier of the product variation that has been selected.",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "Name of the product.",
            "nullable": true
          },
          "productProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeProductProperty"
            },
            "description": "Custom Properties of the product (i.e. inclues TaxCode)",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The number of products for this line item",
            "format": "int32"
          },
          "lineItemPrice": {
            "type": "number",
            "description": "The line item subtotal of quantity * Product.TaxablePrice",
            "format": "double"
          },
          "discountTotal": {
            "type": "number",
            "description": "How much the shopper saves with the applied discount or sale price. This is a negative number.",
            "format": "double",
            "nullable": true
          },
          "discountedTotal": {
            "type": "number",
            "description": "Subtotal minus any discounts.",
            "format": "double",
            "nullable": true
          },
          "shippingAmount": {
            "type": "number",
            "description": "The line item shipping amount.",
            "format": "double"
          },
          "handlingAmount": {
            "type": "number",
            "description": "Handling Amount for this item",
            "format": "double",
            "nullable": true
          },
          "feeTotal": {
            "type": "number",
            "description": "Not implemented. Total cost of fees that apply to this item.",
            "format": "double",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean",
            "description": "Is the Product taxable",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Clarifications on the reason this item is being taxed/returned?",
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "productDiscount": {
            "$ref": "#/components/schemas/PricingRuntimeAppliedLineItemProductDiscount"
          },
          "shippingDiscount": {
            "$ref": "#/components/schemas/PricingRuntimeAppliedLineItemShippingDiscount"
          },
          "productDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeAppliedLineItemProductDiscount"
            },
            "description": "A list of discounts applied to the product",
            "nullable": true
          },
          "shippingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeAppliedLineItemShippingDiscount"
            },
            "description": "A discount applied to the shipping",
            "nullable": true
          },
          "originAddress": {
            "$ref": "#/components/schemas/CommerceRuntimeAddress"
          },
          "destinationAddress": {
            "$ref": "#/components/schemas/CommerceRuntimeAddress"
          }
        },
        "additionalProperties": false
      },
      "TaxAttribute": {
        "type": "object",
        "properties": {
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true
          },
          "attributeDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppliedOrderShippingDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PricingRuntimeAppliedDiscount"
          }
        ],
        "properties": {
          "shippingMethodCode": {
            "type": "string",
            "description": "Unique identifier of the shipping method discount.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxableOrder": {
        "type": "object",
        "properties": {
          "orderDate": {
            "type": "string",
            "description": "Date on which the order is/was submitted.\r\nCannot be a future date.",
            "format": "date-time"
          },
          "taxContext": {
            "$ref": "#/components/schemas/TaxContext"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxableLineItem"
            },
            "description": "List of taxable items.",
            "nullable": true
          },
          "shippingAmount": {
            "type": "number",
            "description": "Shipping Amount rolled up for the order",
            "format": "double"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code for this order",
            "nullable": true
          },
          "handlingFee": {
            "type": "number",
            "description": "Handling Fee",
            "format": "double"
          },
          "originalDocumentCode": {
            "type": "string",
            "description": "The order id of the original order.  This can be used to track changes to the order for taxing purposes.",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "originalOrderDate": {
            "type": "string",
            "description": "The date of the original order.  This is used when calculating changes to the Taxable Order, evaluating them at this time rather than the present.",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxAttribute"
            },
            "nullable": true
          },
          "shippingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedOrderShippingDiscount"
            },
            "description": "The list of historically-applied shipping discounts.  The active one will have IsExcluded == false",
            "nullable": true
          },
          "shippingDiscount": {
            "$ref": "#/components/schemas/AppliedOrderShippingDiscount"
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeAppliedDiscount"
            },
            "description": "The discount that has been applied to the cart itself. If multiple discounts exist, this is the discount that the system applies because it offers the best savings for the shopper. This is a negative number.",
            "nullable": true
          },
          "orderDiscount": {
            "$ref": "#/components/schemas/PricingRuntimeAppliedDiscount"
          },
          "handlingDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeAppliedDiscount"
            },
            "description": "The list of historically-applied handling discounts.  The active one will have IsExcluded == false",
            "nullable": true
          },
          "handlingDiscount": {
            "$ref": "#/components/schemas/PricingRuntimeAppliedDiscount"
          },
          "shippingMethodCode": {
            "type": "string",
            "description": "Code that uniquely identifies the shipping method such as \"Ground,\" \"Overnight,\" or \"Digital.\"\r\nThe site's shipping settings lists the valid shipping methods specified for this site.",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "description": "Readable name of the shipping method",
            "nullable": true
          },
          "taxRequestType": {
            "type": "string",
            "description": "Used to differentiate between an Order and a Return being used as the source of this Taxable Order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Properties of a taxable order"
      },
      "ItemTaxContext": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the line item.",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "description": "Merchant-created code that uniquely identifies the product.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The number of products in this lineitem",
            "format": "int32"
          },
          "tax": {
            "type": "number",
            "description": "Line item tax amount not including shipping",
            "format": "double"
          },
          "shippingTax": {
            "type": "number",
            "description": "The shipping tax amount for this line item",
            "format": "double"
          },
          "duty": {
            "type": "number",
            "description": "Duty Amount for this line item",
            "format": "double",
            "nullable": true
          },
          "taxData": {
            "type": "object",
            "description": "Storage for any additional/custom tax data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The tax applied to an individual order item."
      },
      "OrderTaxContext": {
        "type": "object",
        "properties": {
          "itemTaxContexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemTaxContext"
            },
            "description": "Taxes applied to each item in the order.",
            "nullable": true
          },
          "shippingTax": {
            "type": "number",
            "description": "Rollup shipping tax for this order",
            "format": "double"
          },
          "handlingFeeTax": {
            "type": "number",
            "description": "The handling fee tax amount for this line item",
            "format": "double"
          },
          "orderTax": {
            "type": "number",
            "description": "Rollup tax on the order not including shipping",
            "format": "double"
          },
          "taxData": {
            "type": "object",
            "description": "Storage for any additional/custom tax data.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "address4": {
            "type": "string",
            "nullable": true
          },
          "cityOrTown": {
            "type": "string",
            "nullable": true
          },
          "stateOrProvince": {
            "type": "string",
            "nullable": true
          },
          "postalOrZipCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "isValidated": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeAppliedDiscount": {
        "type": "object",
        "properties": {
          "impact": {
            "type": "number",
            "description": "Value of the discount, that is how much the shopper saves if discount is applied.",
            "format": "double"
          },
          "discount": {
            "$ref": "#/components/schemas/PricingRuntimeDiscount"
          },
          "couponCode": {
            "type": "string",
            "description": "Code of the coupon associated with the discount (if a coupon code is required in order to receive the discount).",
            "nullable": true
          },
          "couponSetId": {
            "type": "integer",
            "description": "Contains coupon set id if there is one",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of the applied discount, including how much the shopper saves if the discount is applied and the coupon\r\ncode\r\nrequired to redeem the discount, if any."
      },
      "CommerceRuntimeThresholdMessage": {
        "type": "object",
        "properties": {
          "discountId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "thresholdValue": {
            "type": "number",
            "format": "double"
          },
          "showOnCheckout": {
            "type": "boolean"
          },
          "showInCart": {
            "type": "boolean"
          },
          "requiresCouponCode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeProductPropertyValue": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "stringValue": {
            "type": "string",
            "description": "Localized Value in the language of the locale code",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Duplicate definition from ProductRuntime"
      },
      "PricingRuntimeProductProperty": {
        "type": "object",
        "properties": {
          "attributeFQN": {
            "type": "string",
            "description": "Attribute fully qualified name",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeProductPropertyValue"
            },
            "description": "Value(s) of the product property",
            "nullable": true
          },
          "attributeDetail": {
            "$ref": "#/components/schemas/ProductAttribute"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Indicates whether the product property should be hidden from the customer",
            "nullable": true
          },
          "isMultiValue": {
            "type": "boolean",
            "description": "Indicates whether it's possible for there to be more than one value in the Values field",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Duplicate definition from ProductRuntime"
      },
      "PricingRuntimeAppliedLineItemProductDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AppliedLineItemDiscount"
          }
        ],
        "properties": {
          "appliesToSalePrice": {
            "type": "boolean",
            "description": "Indicates that this discount is to be applied to the sale price if true or the list price if false.\r\nThis only applies to product and line item discounts."
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeAppliedLineItemShippingDiscount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AppliedLineItemDiscount"
          }
        ],
        "properties": {
          "shippingMethodCode": {
            "type": "string",
            "description": "Unique identifier of the shipping method discount.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeCustomerSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The Customer segment Id.\r\nThis is the  system Id not the code.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Represents a customer segment"
      },
      "PricingRuntimeTargetedCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the category to which the discount applies.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeTargetedShippingMethod": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique identifier of the shipping method as it appears in the SiteShippingMethod property of the Shipping Settings\r\nresource.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the shipping method as it appears in SiteShippingMethodLocalizedContent of the Shipping Settings resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Shipping method that is eligible for free shipping. This is the shipping method that is defined with the Shipping\r\nSettings resource."
      },
      "PricingRuntimeTargetedShippingZone": {
        "type": "object",
        "properties": {
          "zone": {
            "type": "string",
            "description": "Indicates the shipping zone that this discount is valid for.  If zone is provided the\r\nmethod selected must be valid for the zone and both populated in the order for the discount\r\nto be valid.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Shipping method that is eligible for free shipping. This is the shipping method that is defined with the Shipping\r\nSettings resource."
      },
      "PricingRuntimeDiscountCollection": {
        "type": "object",
        "properties": {
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingRuntimeDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeDiscountTarget": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "includedCategoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "excludedCategoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "includedCategoriesOperator": {
            "type": "string",
            "nullable": true
          },
          "excludedCategoriesOperator": {
            "type": "string",
            "nullable": true
          },
          "includedProductCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "excludedProductCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "includeAllProducts": {
            "type": "boolean",
            "description": "When IncludeAllProducts is true then IncludedCategories and IncludedProducts are not evaluated and should be \r\nempty.  Only exclusions apply."
          },
          "shippingMethods": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "shippingZones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingRuntimeDiscountCondition": {
        "type": "object",
        "properties": {
          "requiresCoupon": {
            "type": "boolean",
            "description": "If true, the shopper needs to enter a coupon code to redeem the discount."
          },
          "couponCode": {
            "type": "string",
            "description": "ShippingMethodCode of the coupon associated with the discount (if a coupon code is required). The merchant can supply the code or the system can generate it.",
            "nullable": true
          },
          "minimumQuantityProductsRequiredInCategories": {
            "type": "integer",
            "description": "Minimum quantity of products in the categories specified in IncludedCategories that must be purchased to\r\nqualify for the associated discount.\r\nValid values are null and ints greater than zero",
            "format": "int32",
            "nullable": true
          },
          "includedCategoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of categories to discount. When a discount applies to a category, all products in the category are discounted.",
            "nullable": true
          },
          "excludedCategoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of categories to discount. When a discount applies to a category, all products in the category are discounted.",
            "nullable": true
          },
          "minimumQuantityRequiredProducts": {
            "type": "integer",
            "description": "Minimum quantity of products in the specified IncludedProducts that must be purchased to\r\nqualify for the associated discount.\r\nDefaults to 0",
            "format": "int32",
            "nullable": true
          },
          "includedProductCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of products that are eligible for the discount.",
            "nullable": true
          },
          "excludedProductCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of products that are eligible for the discount.",
            "nullable": true
          },
          "paymentWorkflows": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of payment types that are valid for this discount.\r\nAn empty list signifies all payment types.",
            "nullable": true
          },
          "customerSegmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of customer groups for which the discount applies",
            "nullable": true
          },
          "minimumOrderAmount": {
            "type": "number",
            "description": "If the discount is for products, how many products must be purchased to be eligible for the discount.\r\nIf the discount is for an order, how much the order must total to be eligible for the discount. For example, you might want to offer a 10% discount on orders over $100.",
            "format": "double",
            "nullable": true
          },
          "maximumOrderAmount": {
            "type": "number",
            "description": "If the discount is for products, how many product can you have and still be eligible for the discount.\r\nIf the discount is for an order, what is the max the order can total to be eligible for the discount. For example, you might want to offer a 10% discount on orders under $100.",
            "format": "double",
            "nullable": true
          },
          "minimumLifetimeValueAmount": {
            "type": "number",
            "description": "Minimum lifetime value amount required for this discount to apply",
            "format": "double",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Date when the discount can goes into effect, in the format yyyy-mm-dd.",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Date when the discount expires. Default is null (no expiration date).",
            "format": "date-time",
            "nullable": true
          },
          "minimumCategorySubtotalBeforeDiscounts": {
            "type": "number",
            "description": "Minimum amount that must be purchased in the combined categories defined in \r\nIncludedCategories.  Amount is calculated before discounting.",
            "format": "double",
            "nullable": true
          },
          "minDistinctProductsRequired": {
            "type": "integer",
            "description": "Minimum number of distinct products that must be purchased that are also not free.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.usc1.kibocommerce.com/api",
      "description": "GCP-US Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}.{env}.usc1.kibocommerce.com/api",
      "description": "GCP-US Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.mozu.com/api",
      "description": "Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}.{env}.mozu.com/api",
      "description": "Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://home.mozu.com/api",
      "description": "HomePod Api"
    },
    {
      "url": "https://t{tenantId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://home.euw1.kibocommerce.com/api",
      "description": "EURO HomePod Api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}