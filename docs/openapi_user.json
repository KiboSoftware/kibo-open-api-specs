{
  "openapi": "3.0.1",
  "info": {
    "title": "Admin User",
    "description": "OpenAPI Spec for Kibo Admin User Service",
    "version": "1.0.1"
  },
  "paths": {
    "/platform/adminuser/groups": {
      "get": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Get Admin Groups",
        "description": "Gets a collection of user groups",
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroupCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroupCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroupCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Add Admin Group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              }
            }
          }
        },
        "description": "Adds an admin group"
      }
    },
    "/platform/adminuser/groups/{groupCode}": {
      "get": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Get Admin Group",
        "description": "Gets an Admin group by id",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "description": "groupCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Update Admin Group",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              }
            }
          }
        },
        "description": "Update an existing adminGroup"
      },
      "delete": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Delete Admin Group",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "description": "Deletes an Admin Group"
      }
    },
    "/platform/adminuser/groups/{groupCode}/addusers": {
      "post": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Add Users to Admin Group",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGroup"
                }
              }
            }
          }
        },
        "description": "Add users to admin group"
      }
    },
    "/platform/adminuser/groups/{groupCode}/removeusers": {
      "post": {
        "tags": [
          "AdminGroup"
        ],
        "summary": "Remove Users from Admin Group",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "description": "Remove users from admin group"
      }
    },
    "/platform/adminuser/authtickets/wsfed/auth/{id}": {
      "post": {
        "tags": [
          "AdminAuthTicket"
        ],
        "summary": "Create User Auth Ticket With Ws Fed",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeid",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scopeType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              }
            }
          }
        },
        "description": "Create User Auth Ticket With Ws Fed"
      }
    },
    "/platform/adminuser/authtickets/wsfed/SignOut/{id}": {
      "get": {
        "tags": [
          "AdminAuthTicket"
        ],
        "summary": "Get Ws Fed Sign Out Url",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Get Ws Fed Sign Out Url"
      }
    },
    "/platform/adminuser/authtickets/wsfed/challenge/{id}": {
      "get": {
        "tags": [
          "AdminAuthTicket"
        ],
        "summary": "Get Ws Fed Challenge Url",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeid",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scopeType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Get Ws Fed Challenge Url"
      }
    },
    "/platform/adminuser/authtickets/tenants": {
      "post": {
        "tags": [
          "AdminAuthTicket"
        ],
        "summary": "Create User Auth Ticket",
        "description": "Authenticates a user for a particular tenant given a set of user credentials and a tenantId.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "Optional tenant Id parameter",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "User's email address and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminAuthTicket"
        ],
        "summary": "Refresh Auth Ticket",
        "description": "Reauthenticates the current user for a different tenant. If the user does not have access to the tenant, the operation fails.",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "The tenant to authenticate the user in",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "An existing valid auth ticket containing the refresh token.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAdminUserAuthTicket"
                }
              }
            }
          }
        }
      }
    },
    "/platform/adminuser/authtickets": {
      "delete": {
        "tags": [
          "AdminAuthTicket"
        ],
        "summary": "Delete User Auth Ticket",
        "description": "Logs out a user by deleting the refresh token",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "description": "The refresh token to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/platform/adminuser/accounts/{userId}/tenants": {
      "get": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Get Tenant Scope",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantCollection"
                }
              }
            }
          }
        },
        "description": "Get tenant scope for users"
      }
    },
    "/platform/adminuser/accounts/{userId}": {
      "get": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Get User",
        "description": "Retrieves the details of a user specified by user ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user whose details you want to view.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Update User",
        "description": "Modifies user information for a specified user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user whose login information you want to change.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details of the new user account. Required properties: EmailAddress, FirstName, LastName, and Password. Note that the site ID is passed in the request header.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Delete User",
        "description": "Removes a user account from the site.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user account to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/platform/adminuser/accounts/{userId}/userbyid": {
      "get": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Get User By Id",
        "description": "Retrieves the details of a user specified by user ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user whose details you want to view.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseGroups",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/platform/adminuser/accounts": {
      "get": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Get Users",
        "description": "Retrieves a list of Admin users for a specified site according to any specified filter criteria and sort options.",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The element to sort the results by and the order in which the results appear. Either ascending (a-z) or descending (z-a) order. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseGroups",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Create User",
        "requestBody": {
          "description": "The user to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "description": "Creates a new user"
      }
    },
    "/platform/adminuser/accounts/{userId}/roles": {
      "get": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Get User Roles",
        "description": "Retrieves all the roles for a specified user on the specified tenant.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserUserRoleCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserUserRoleCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserUserRoleCollection"
                }
              }
            }
          }
        }
      }
    },
    "/platform/adminuser/accounts/{userId}/roles/{roleId}": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Add User Role",
        "description": "Adds a role to the specified user's Admin account.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user who receives the role.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifier of the role to add.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Remove User Role",
        "description": "Removes a role from the specified Admin account.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user with the role to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifer of the role to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/platform/adminuser/accounts/{userId}/Change-Password": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Change Password",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user for whom to change the password.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Old password and new password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserPasswordInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "description": "Change a password"
      }
    },
    "/platform/adminuser/accounts/{userId}/Change-User-Password": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Change User Password",
        "description": "Changes a user's password to the provided new password",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user for whom to change the password.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New password info for this user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserPasswordInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/platform/adminuser/accounts/Reset-Password": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Reset Password",
        "description": "Resets the password for a user specified by email address.",
        "requestBody": {
          "description": "Email address of the user who has requested a password reset. \r\n            Note that the site ID is passed in the request header.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserResetPasswordInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/platform/adminuser/accounts/{userId}/unlock": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Unlock User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "description": "Unlocks (or \"enables\") a user"
      }
    },
    "/platform/developer/authtickets": {
      "post": {
        "tags": [
          "DeveloperAdminAuthTicket"
        ],
        "summary": "Create Developer User Auth Ticket",
        "description": "Authenticates a user for a particular tenant given a set of user credentials adn a tenantId.",
        "parameters": [
          {
            "name": "developerAccountId",
            "in": "query",
            "description": "The users developer account Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "User's email address and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeveloperAdminAuthTicket"
        ],
        "summary": "Refresh Developer Auth Ticket",
        "description": "Reauthenticates the current user for a different tenant. If the user does not have access to the tenant, the operation fails.",
        "parameters": [
          {
            "name": "developerAccountId",
            "in": "query",
            "description": "The users developer account Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "An existing valid auth ticket containing the refresh token.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAdminUserAuthTicket"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeveloperAdminAuthTicket"
        ],
        "summary": "Delete User Auth Ticket",
        "description": "Logs out a user by deleting the refresh token",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "description": "The refresh token to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/platform/adminuser/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get Roles",
        "description": "Retrieves a list of all roles defined for this tenant.",
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional filter param to filter the roles",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleCollection"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleCollection"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSystemData": {
        "type": "object",
        "properties": {
          "isPasswordChangeRequired": {
            "type": "boolean"
          },
          "lastPasswordChangeOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          },
          "lastLockedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "failedLoginAttemptCount": {
            "type": "integer",
            "format": "int32"
          },
          "remainingLoginAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "firstFailedLoginAttemptOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLoginOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserScope": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "assignedInScope": {
            "$ref": "#/components/schemas/UserScope"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "roleResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "nullable": true
          },
          "roleTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "localeCode": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "optInToEmail": {
            "type": "boolean",
            "nullable": true
          },
          "optInToTextMessage": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "systemData": {
            "$ref": "#/components/schemas/UserSystemData"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "identityProviderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminGroup": {
        "type": "object",
        "properties": {
          "groupCode": {
            "type": "string",
            "description": "User Group Id",
            "nullable": true
          },
          "scopeTypeId": {
            "type": "integer",
            "description": "Scope Type Id",
            "format": "int32"
          },
          "scopeId": {
            "type": "integer",
            "description": "Scope Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Human-readable Name of the group",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the group",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "Users associate with a group",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false
      },
      "AdminGroupCollection": {
        "type": "object",
        "properties": {
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseTenantEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          },
          "createBy": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateBy": {
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Site": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTenantEntity"
          }
        ],
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "catalogId": {
            "type": "integer",
            "format": "int32"
          },
          "localeCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomDomain": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Catalog": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTenantEntity"
          }
        ],
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "masterCatalogId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultLocaleCode": {
            "type": "string",
            "nullable": true
          },
          "defaultCurrencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantAdminUserAuthTicket": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "jwtAccessToken": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "accessTokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "redirect": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "$ref": "#/components/schemas/AdminUserTenant"
          },
          "availableTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminUserTenant"
            },
            "nullable": true
          },
          "grantedBehaviors": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAuthInfo": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantCollection": {
        "type": "object",
        "properties": {
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminUserTenant"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeUserPasswordInfo": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeveloperAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeveloperAdminUserAuthTicket": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "jwtAccessToken": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "accessTokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/DeveloperAccount"
          },
          "availableAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeveloperAccount"
            },
            "nullable": true
          },
          "grantedBehaviors": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Behavior": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "requiresBehaviorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "validUserTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPrivate": {
            "type": "boolean"
          },
          "systemRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Owner": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isSystemRole": {
            "type": "boolean"
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Behavior"
            },
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userScope": {
            "$ref": "#/components/schemas/UserScope"
          },
          "owners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Owner"
            },
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AdminUserAuditInfo"
          }
        },
        "additionalProperties": false
      },
      "CollectionOfRole": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleCollection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfRole"
          }
        ],
        "additionalProperties": false
      },
      "AdminUserAuditInfo": {
        "type": "object",
        "properties": {
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updateBy": {
            "type": "string",
            "nullable": true
          },
          "createBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserMasterCatalog": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTenantEntity"
          }
        ],
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultLocaleCode": {
            "type": "string",
            "nullable": true
          },
          "defaultCurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "catalogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdminUserTenant": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTenantEntity"
          }
        ],
        "properties": {
          "isDevTenant": {
            "type": "boolean"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Site"
            },
            "nullable": true
          },
          "masterCatalogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminUserMasterCatalog"
            },
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantAttribute"
            },
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isUnified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AdminUserUserRoleCollection": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Collection of UserRoles for given user."
      },
      "AdminUserPasswordInfo": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "Old password.",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "description": "New password.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Old password and new password."
      },
      "AdminUserResetPasswordInfo": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Email address of the user who is requesting a new password."
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.mozu.com/api",
      "description": "Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}.{env}.mozu.com/api",
      "description": "Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://home.mozu.com/api",
      "description": "HomePod Api"
    },
    {
      "url": "https://t{tenantId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://home.euw1.kibocommerce.com/api",
      "description": "EURO HomePod Api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}