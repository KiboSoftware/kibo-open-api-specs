{
  "openapi": "3.0.1",
  "info": {
    "title": "Reservation Web",
    "description": "<div id=\"overview_RESERVATION\">\r\n            <h2>RESERVATIONS</h2>\r\n            <p>The Reservation APIs are used to create and manage inventory reservations. This includes updating items and quantities, fulfillment methods, zip codes and pickup locations, and resetting\r\n                the expiration timer for a reservation. For more information, see the <a href=\"https://docs.kibocommerce.com/help/reserve-inventory-in-cart\">Reservations feature guide</a>.\r\n            </p>\r\n        </div>",
    "version": "1.0.1"
  },
  "paths": {
    "/commerce/reservation": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "runSynchronous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservati"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Create Reservation",
        "description": "Creates a new reservation. Set runSynchronous to \"true\" to perform this call synchronously with better performance time."
      },
      "get": {
        "tags": [
          "Reservation"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Get Reservations",
        "description": "Get all reservations.",
        "parameters": [
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/commerce/reservation/{reservationId}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Get Reservation By Id",
        "description": "Get a specific reservation by its ID."
      },
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservati"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Update Reservation",
        "description": "Update an existing reservation."
      },
      "delete": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runSynchronous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Delete Reservation",
        "description": "Delete a reservation. Set runSynchronous to \"true\" to perform this call synchronously with better performance time."
      }
    },
    "/commerce/reservation/cart/{cartId}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qLimit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationCollecti"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationCollecti"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationCollecti"
                }
              }
            }
          }
        },
        "summary": "Get Reservations By Cart Id",
        "description": "Get reservations based on the Cart ID."
      }
    },
    "/commerce/reservation/{reservationId}/zipcode/{zipCode}": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runSynchronous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReservationWebAPIOrderAttribute"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Update Zip Code",
        "description": "Update the zip code of a reservation. Set runSynchronous to \"true\" to perform this call synchronously with better performance time."
      }
    },
    "/commerce/reservation/{reservationId}/updatetimer": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Update Timer",
        "description": "Restart the expiration timer of a reservation."
      }
    },
    "/commerce/reservation/{reservationId}/close": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Close Reservation",
        "description": "Close a reservation. Kibo does not recommend using this API, as it is intended for internal use."
      }
    },
    "/commerce/reservation/{reservationId}/activate": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Activate Reservation",
        "description": "Activate a reservation. Kibo does not recommend using this API, as it is intended for internal use."
      }
    },
    "/commerce/reservation/{reservationId}/getallocationstatus": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "summary": "Get Allocation Status",
        "description": "Get Allocation Status"
      }
    },
    "/commerce/reservation/{reservationId}/converttoorderreservation": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderReservati"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Convert To Order Reservation",
        "description": "Converts a reservation associated with a cart to an order reservation."
      }
    },
    "/commerce/reservation/{reservationId}/items": {
      "post": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runSynchronous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Add Item",
        "description": "Add an item to a reservation. Set runSynchronous to \"true\" to perform this call synchronously with better performance time."
      }
    },
    "/commerce/reservation/{reservationId}/items/{reservationItemId}": {
      "delete": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Remove Item",
        "description": "Remove an item from a reservation."
      },
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runSynchronous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Update Reservation Item",
        "description": "Updates a reservation item. Set runSynchronous to \"true\" to perform this call synchronously with better performance time."
      }
    },
    "/commerce/reservation/{reservationId}/items/{reservationItemId}/quantity/{quantity}": {
      "put": {
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "runSynchronous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "responseFields",
            "in": "query",
            "description": "limits which fields are returned in the response body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Reservati"
                }
              }
            }
          }
        },
        "summary": "Update Item Quantity",
        "description": "Update a reservation item's quantity. Set runSynchronous to \"true\" to perform this call synchronously with better performance time."
      }
    }
  },
  "components": {
    "schemas": {
      "BundledProdu": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "goodsType": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "optionAttributeFQN": {
            "type": "string",
            "nullable": true
          },
          "optionValue": {
            "nullable": true
          },
          "measurements": {
            "$ref": "#/components/schemas/ReservationWebAPIPackageMeasurements"
          }
        },
        "additionalProperties": false
      },
      "Produ": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "mfgPartNumber": {
            "type": "string",
            "nullable": true
          },
          "variationProductCode": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "goodsType": {
            "type": "string",
            "nullable": true
          },
          "productUsage": {
            "type": "string",
            "nullable": true
          },
          "bundledProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundledProdu"
            },
            "nullable": true
          },
          "isSplitExtrasInShipment": {
            "type": "boolean"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationWebAPIProductProperty"
            },
            "nullable": true
          },
          "measurements": {
            "$ref": "#/components/schemas/ReservationWebAPIPackageMeasurements"
          },
          "isTaxable": {
            "type": "boolean",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Allocati": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "nullable": true
          },
          "transferLocationCode": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "futureDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isStateChange": {
            "type": "boolean"
          },
          "allocationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTags": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Suggesti": {
        "type": "object",
        "properties": {
          "locationCode": {
            "type": "string",
            "nullable": true
          },
          "suggestionType": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "futureDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationItem": {
        "type": "object",
        "properties": {
          "lineId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "orderItemId": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/Produ"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "fulfillmentLocationCode": {
            "type": "string",
            "nullable": true
          },
          "fulfillmentMethod": {
            "type": "string",
            "nullable": true
          },
          "allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allocati"
            },
            "nullable": true
          },
          "allowsBackOrder": {
            "type": "boolean"
          },
          "allocationStatus": {
            "type": "string",
            "nullable": true
          },
          "inventoryTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTags"
            },
            "nullable": true
          },
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Suggesti"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditInf": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Reservati": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "siteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "customerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationItem"
            },
            "nullable": true
          },
          "cartId": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "auditInfo": {
            "$ref": "#/components/schemas/AuditInf"
          },
          "changeMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationWebAPIChangeMessage"
            },
            "nullable": true
          },
          "reservationType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationCollecti": {
        "type": "object",
        "properties": {
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservati"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderReservati": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "reservationItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationWebAPIChangeMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "appKey": {
            "type": "string",
            "nullable": true
          },
          "appName": {
            "type": "string",
            "nullable": true
          },
          "subjectType": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "verb": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeMeasurement": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationWebAPIPackageMeasurements": {
        "type": "object",
        "properties": {
          "height": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          },
          "width": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          },
          "length": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          },
          "weight": {
            "$ref": "#/components/schemas/CommerceRuntimeMeasurement"
          }
        },
        "additionalProperties": false
      },
      "CommerceRuntimeProductPropertyValue": {
        "type": "object",
        "properties": {
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationWebAPIProductProperty": {
        "type": "object",
        "properties": {
          "attributeFQN": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommerceRuntimeProductPropertyValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationWebAPIOrderAttribute": {
        "type": "object",
        "properties": {
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true
          },
          "attributeDefinitionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {},
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.mozu.com/api",
      "description": "Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}.{env}.mozu.com/api",
      "description": "Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sandbox",
          "enum": [
            "sandbox",
            "tp1",
            "tp2",
            "tp3",
            "tp4",
            "tp5",
            "stg1",
            "stg2"
          ]
        }
      }
    },
    {
      "url": "https://home.mozu.com/api",
      "description": "HomePod Api"
    },
    {
      "url": "https://t{tenantId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Tenant Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api",
      "description": "EURO Site Level Api",
      "variables": {
        "tenantId": {
          "default": "0",
          "description": "Id of the Tenant"
        },
        "siteId": {
          "default": "0",
          "description": "Id of the Site"
        },
        "env": {
          "default": "sb",
          "enum": [
            "sb",
            "tp1"
          ]
        }
      }
    },
    {
      "url": "https://home.euw1.kibocommerce.com/api",
      "description": "EURO HomePod Api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ]
}