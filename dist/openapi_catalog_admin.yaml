openapi: 3.0.1
info:
  title: Catalog Admin
  description: |-
    <div id="overview_CATALOG_ADMIN">
                <h2>CATALOG ADMINISTRATION</h2>
                <p>The Catalog Administration APIs are a collection of resources for configuring the catalogs and products offered to your shoppers, including
                    discounts and coupon sets, faceting, price lists, and different types or variations of products. See the
                    <a href="https://docs.kibocommerce.com/help/catalog">Catalog user guides</a>
                    for information about the related features in the Unified Commerce Admin.</p>
                <p>Use the <strong>Attributes</strong> resource to manage localization and attribute configurations for your catalogs.</p>
                <p>Use the <strong>Categories</strong> resource to organize products and control where they appear on the storefront. Create
                    and maintain a hierarchy of categories and subcategories where the site will store properties.</p>
                <p>Use the <strong>Coupon Sets</strong> resource to view and create coupon sets. You can use coupon sets to group multiple
                    coupon codes together and associate them with one or more discounts.</p>
                <p>Use the <strong>Currency</strong> resource to manage the currency localization rules and exchange rates for any of the
                    currencies that are supported for placing orders in.</p>
                <p>Use the <strong>Discounts</strong> and <strong>Discount Settings</strong> resources to define and manage discounts to apply to products, product categories, or
                    orders. The discounts can be a specified amount off the price, percentage off the price, or for free
                    shipping. You can create a coupon code that shoppers can use to redeem the discount.</p>
                <p>Use the <strong>Facets</strong> resource to manage the facets shoppers use to filter product display results on a
                    storefront. Facets can include categories, product attributes, or prices, and use either a range of
                    values or discrete values.</p>
                <p>Use the <strong>Master Catalog</strong> resource to view details of the master catalogs associated with a tenant and to
                    manage the product publishing mode for each master catalog.</p>
                <p>Use the <strong>Price Lists</strong> resources to view and create price lists. You can use price lists to override the
                    catalog pricing of products for specific customer segments and/or sites.</p>
                <p>Use the <strong>Products</strong>, <strong>Product Types/Extras/Options/Properties</strong>, and <strong>Product Sort Definitions</strong> resources to create new product definitions in the master catalog and determine which
                    catalogs will feature products. You can also assign attribute values and different options or properties for defined products, manage
                    product-level location inventory, configure the variations of a product with the <strong>Product Variations</strong> resource, and use the <strong>Product Sort Definitions</strong> resource for visual merchandising. Publish and discard product changes
                    from a master catalog.</p>
                <p>Use the <strong>Publishing</strong> resource to publish pending product updates together as part of a set.</p>
                <p>Use the <strong>Search</strong> resource to manage all settings and options for providing product search on your site, as
                    well as search tuning rules.</p>
            </div>
  version: 1.0.1
paths:
  /commerce/catalog/admin/attributedefinition/attributes:
    get:
      tags:
        - ProductAttributes
      summary: Get product attributes
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeCollection'
      description: >-
        Get product attributes. Product attributes define the characteristics of
        products, enabling you to uniquely describe a product. They consist of
        options, properties, and extras.
    post:
      tags:
        - ProductAttributes
      summary: Add Product Attribute
      description: >-
        Add / Create Attribute. The attribute name, attribute type, input type,
        and data type are required.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsAttribute'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}:
    get:
      tags:
        - ProductAttributes
      summary: Get Product Attribute
      description: Retrieves a product attribute by its FQN
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
    put:
      tags:
        - ProductAttributes
      summary: Update Product Attribute
      description: Updates a product attribute by its FQN
      parameters:
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsAttribute'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttribute'
    delete:
      tags:
        - ProductAttributes
      summary: Delete Product Attribute
      description: Deletes a product attribute by its FQN
      parameters:
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/LocalizedContent/{localeCode}:
    get:
      tags:
        - ProductAttributes
      summary: Get Localized Content by Locale Code
      description: Retrieves localized content by its locale code
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
    put:
      tags:
        - ProductAttributes
      summary: Update Localized Content by Locale Code
      description: Updates localized content by its locale code
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
    delete:
      tags:
        - ProductAttributes
      summary: Delete Localized Content by Locale Code
      description: Deletes localized content by its locale code
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/LocalizedContent:
    get:
      tags:
        - ProductAttributes
      summary: Get Localized Content
      description: Retrieves product attribute localized content
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
    post:
      tags:
        - ProductAttributes
      summary: Add Localized Content
      description: Creates product attribute localized content
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
    put:
      tags:
        - ProductAttributes
      summary: Update Localized Content
      description: Updates product attribute localized content
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}:
    get:
      tags:
        - ProductAttributes
      summary: Get Vocabulary Value
      description: Retrieves a product attribute vocabulary value
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
    put:
      tags:
        - ProductAttributes
      summary: Update Vocabulary Value
      description: Updates a product attribute vocabulary value
      parameters:
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: value
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
    delete:
      tags:
        - ProductAttributes
      summary: Delete Vocabulary Value
      description: Deletes a product attribute vocabulary value
      parameters:
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: value
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}/LocalizedContent/{localeCode}:
    get:
      tags:
        - ProductAttributes
      summary: Get Vocabulary Value Localized Content by Locale Code
      description: >-
        Get product attribute vocabulary value localized content by its locale
        code
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
    put:
      tags:
        - ProductAttributes
      summary: Get Vocabulary Value Localized Content by Locale Code
      description: >-
        Update product attribute vocabulary value localized content by its
        locale code
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
    delete:
      tags:
        - ProductAttributes
      summary: Delete Vocabulary Value Localized Content by Locale Code
      description: >-
        Delete product attribute vocabulary value localized content by its
        locale code
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}/LocalizedContent:
    get:
      tags:
        - ProductAttributes
      summary: Get Vocabulary Value Localized Content
      description: Retrieves vocabulary value localized content
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/AttributeVocabularyValueLocalizedContent
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/AttributeVocabularyValueLocalizedContent
            text/plain:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/AttributeVocabularyValueLocalizedContent
    put:
      tags:
        - ProductAttributes
      summary: Update Vocabulary Value Localized Content
      description: Updates vocabulary value localized content
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/AttributeVocabularyValueLocalizedContent
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/AttributeVocabularyValueLocalizedContent
            text/plain:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/AttributeVocabularyValueLocalizedContent
    post:
      tags:
        - ProductAttributes
      summary: Add Vocabulary Value Localized Content
      description: Creates vocabulary value localized content
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
  /commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues:
    get:
      tags:
        - ProductAttributes
      summary: Get Vocabulary Values
      description: Retrieves product attribute vocabulary values
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
    post:
      tags:
        - ProductAttributes
      summary: Add Vocabulary Value
      description: Creates product attribute vocabulary values
      parameters:
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
    put:
      tags:
        - ProductAttributes
      summary: Update Vocabulary Values
      description: Updates product attribute vocabulary values
      parameters:
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
  /commerce/catalog/admin/attributedefinition/attributes/typerules:
    get:
      tags:
        - ProductAttributes
      summary: Get Attribute Type Rules
      description: >-
        Retrieves a paged list of attribute type rules according to any
        specified filter criteria and sort options.
      parameters:
        - name: startIndex
          in: query
          description: >-
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: >-
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: >-
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            A set of filter expressions representing the search parameters for a
            query: eq=equals, ne=not equals, gt=greater than, lt = less than or
            equals, gt = greater than or equals, lt = less than or equals, sw =
            starts with, or cont = contains. Optional.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeTypeRuleCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeTypeRuleCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeTypeRuleCollection'
  /commerce/catalog/admin/categories/{categoryId}/attributes:
    get:
      tags:
        - Categories
      description: Retrieves a list of category attributes.
      parameters:
        - name: categoryId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description: ''
          schema:
            type: string
            default: ''
        - name: filter
          in: query
          description: ''
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryAttributeCollection'
    post:
      tags:
        - Categories
      summary: Add Category Attribute
      description: Adds a new category attribute to the category.
      parameters:
        - name: categoryId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
  /commerce/catalog/admin/categories/{categoryId}/attributes/{attributeFQN}:
    get:
      tags:
        - Categories
      summary: Get Category Attribute
      description: Retrieves the details of a single category attribute.
      parameters:
        - name: categoryId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
    put:
      tags:
        - Categories
      summary: Update Category Attribute
      description: Modifies the category attribute.
      parameters:
        - name: categoryId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
    delete:
      tags:
        - Categories
      summary: Delete Category Attribute
      description: Deletes the category attribute specified by its attributeFQN.
      parameters:
        - name: categoryId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/categories:
    get:
      tags:
        - Categories
      summary: Get Categories
      description: >-
        Retrieves a list of categories according to any specified filter
        criteria and sort options.
      parameters:
        - name: startIndex
          in: query
          description: >-
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. The
            default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: >-
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: >-
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            A set of filter expressions representing the search parameters for a
            query: eq=equals, ne=not equals, gt=greater than, lt = less than or
            equals, gt = greater than or equals, lt = less than or equals, sw =
            starts with, or cont = contains. Optional.
          schema:
            type: string
        - name: includeAttributes
          in: query
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryPagedCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryPagedCollection'
    post:
      tags:
        - Categories
      summary: Add Category
      description: >-
        Adds a new category to the catalog's category hierarchy. Specify a
        ParentCategoryID to determine where to locate the category in the
        hierarchy; if not specified it becomes a top-level category.
      parameters:
        - name: incrementSequence
          in: query
          description: >-
            Sets the sequence number of the category to the current max sequence
            value plus 1 (e.g. 5 + 1 = 6)
          schema:
            type: boolean
            default: false
        - name: useProvidedId
          in: query
          description: >-
            If true, the provided Id value will be used as the CategoryId. If
            omitted or false, the system will generate a CategoryId
          schema:
            type: boolean
            default: false
      requestBody:
        description: >-
          Properties of the new category. Required properties ParentCategoryID
          and Content.Name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsCategory'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
  /commerce/catalog/admin/categories/searchCategoryAttributes:
    get:
      tags:
        - searchCategoryAttributes
      summary: Search Category Attributes
      description: >-
        Retrieves a list of categories according to any specified filter
        criteria and sort options for attributes.
      parameters:
        - name: startIndex
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ''
          schema:
            type: string
        - name: filter
          in: query
          description: ''
          schema:
            type: string
        - name: includeAttributes
          in: query
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryPagedCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryPagedCollection'
  /commerce/catalog/admin/categories/{categoryId}:
    get:
      tags:
        - Categories
      summary: Get Category
      description: Retrieves the details of a single category.
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category.
          required: true
          schema:
            type: integer
            format: int32
        - name: includeAttributes
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
    put:
      tags:
        - Categories
      summary: Update Category
      description: >-
        Modifies a category such as moving it to another location in the
        category tree, or changing whether it is visible on the storefront. This
        PUT replaces the existing resource, so be sure \r\n\t\t\t\t\t\t\tto
        include all the information that you want to maintain for the category.
        Any unspecified \r\n\t\t\t\t\t\t\tproperties are set to null.
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category that you want to modify. Required.
          required: true
          schema:
            type: integer
            format: int32
        - name: cascadeVisibility
          in: query
          description: >-
            If true, when changing the display option for the category, change
            it for all subcategories also. Optional.
          schema:
            type: boolean
            default: false
      requestBody:
        description: >-
          Properties of the category that you want to modify. Required
          properties ParentCategoryID and Content.Name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsCategory'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategory'
    delete:
      tags:
        - Categories
      summary: Delete Category
      description: Deletes the category specified by its category ID.
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category that you want to delete.
          required: true
          schema:
            type: integer
            format: int32
        - name: cascadeDelete
          in: query
          description: >-
            If true, any subcategories of a category are deleted when this
            category is deleted. Otherwise only the given category is deleted.
            Default is false.
          schema:
            type: boolean
            default: false
        - name: forceDelete
          in: query
          description: >-
            If true, category (and optionally subcategories) will be deleted
            even if there are products referecing them.  Default is false.
          schema:
            type: boolean
            default: false
        - name: reassignToParent
          in: query
          description: >-
            If true, and child categories of the given category will be
            reassigned to the parent of the given category. Only applies if
            cascadeDelete is false. Default is false.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/categories/{categoryId}/children:
    get:
      tags:
        - Categories
      summary: Get Child Categories
      description: Retrieves the immediate subcategories of a category.
      parameters:
        - name: categoryId
          in: path
          description: >-
            Unique identifier of the category whose subcategories you want to
            get.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCategoryCollection'
  /commerce/catalog/admin/categories/ValidateDynamicExpression:
    post:
      tags:
        - Categories
      summary: Validate Dynamic Category Expression
      description: Validate an expression for a dynamic category.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicExpression'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicExpression'
            text/json:
              schema:
                $ref: '#/components/schemas/DynamicExpression'
            text/plain:
              schema:
                $ref: '#/components/schemas/DynamicExpression'
  /commerce/catalog/admin/categories/ValidateRealTimeDynamicExpression:
    post:
      tags:
        - Categories
      summary: Validate Realtime Dynamic Category Expression
      description: Validate an expression for a realtime dynamic category.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicExpression'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicExpression'
            text/json:
              schema:
                $ref: '#/components/schemas/DynamicExpression'
            text/plain:
              schema:
                $ref: '#/components/schemas/DynamicExpression'
  /commerce/catalog/admin/categories/{categoryId}/remove-products:
    post:
      tags:
        - Categories
      summary: Remove Products from Category
      description: >-
        Removes the products in the provided product code list from the
        specified category.
      parameters:
        - name: categoryId
          in: path
          description: >-
            Unique identifier of the category that you want products removed
            from.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A list of products to be removed from the category.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/categories/{categoryId}/add-products:
    post:
      tags:
        - Categories
      summary: Add Products to Category
      description: >-
        Adds the products in the provided product code list to the specified
        category.
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category that you want produts added to.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A list of products to be added to the category.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/categoryattributedefinition/attributes/{attributeFQN}:
    put:
      tags:
        - CategoryAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensibleAttribute'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
      summary: Update Attribute
      description: Update a category attribute.
    get:
      tags:
        - CategoryAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
      summary: Get Attribute
      description: Get a category attribute by its attribute FQN.
  /commerce/catalog/admin/categoryattributedefinition/attributes:
    get:
      tags:
        - CategoryAttributeDefinition
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ExtensibleAttributeCollection'
      summary: Get Attributes
      description: Retrieves the details of attributes.
    post:
      tags:
        - CategoryAttributeDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensibleAttribute'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/ExtensibleAttribute'
      summary: Create Attribute
      description: Add a new category attribute definition.
  /commerce/catalog/admin/categoryattributedefinition/attributes/{attributeFQN}/VocabularyValues:
    get:
      tags:
        - CategoryAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleAttributeVocabularyValue'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleAttributeVocabularyValue'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleAttributeVocabularyValue'
      summary: Get Attribute Vocabulary Values
      description: Retrieves the details of attribute vocabulary values.
  /commerce/catalog/admin/couponsets/unique-code:
    get:
      tags:
        - CouponSets
      summary: Get Unique Coupon Set Code
      description: Returns a random 4 character code that is unique as a coupon set code.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /commerce/catalog/admin/couponsets/validate-unique-code:
    post:
      tags:
        - CouponSets
      summary: Validate Unique Coupon Set Code
      description: Tests a coupone set code for uniqueness and validity.
      parameters:
        - name: code
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/couponsets/{couponSetCode}:
    get:
      tags:
        - CouponSets
      summary: Get Coupon Set
      description: Returns a single CouponSet
      parameters:
        - name: couponSetCode
          in: path
          description: CouponSetCode for the requested CouponSet
          required: true
          schema:
            type: string
        - name: includeCounts
          in: query
          description: Include the redemption counts and coupon counts
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: >-
            "counts" includes the number of redemptions, coupon codes, and
            assigned discounts.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponSet'
            text/json:
              schema:
                $ref: '#/components/schemas/CouponSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CouponSet'
    put:
      tags:
        - CouponSets
      summary: Update Coupon Set
      description: >-
        Update a CouponSet. You can not update the Code or ID once the set is
        created.
      parameters:
        - name: couponSetCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponSet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponSet'
            text/json:
              schema:
                $ref: '#/components/schemas/CouponSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CouponSet'
    delete:
      tags:
        - CouponSets
      summary: Delete Coupon Set
      description: Deletes a CouponSet.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/couponsets:
    get:
      tags:
        - CouponSets
      summary: Get Coupon Sets
      description: Returns a paged collection of CouponSets
      parameters:
        - name: startIndex
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ''
          schema:
            type: string
        - name: filter
          in: query
          description: ''
          schema:
            type: string
        - name: includeCounts
          in: query
          description: Include coupon and redemption counts
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: '"counts" returns discount and couponCode counts'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponSetCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CouponSetCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CouponSetCollection'
    post:
      tags:
        - CouponSets
      summary: Add Coupon Set
      description: Adds a single CouponSet
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponSet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponSet'
            text/json:
              schema:
                $ref: '#/components/schemas/CouponSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CouponSet'
  /commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes:
    get:
      tags:
        - CouponSets
      summary: Get Coupons
      description: Returns a paged collection of Coupons.
      parameters:
        - name: couponSetCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ''
          schema:
            type: string
        - name: filter
          in: query
          description: ''
          schema:
            type: string
        - name: includeCounts
          in: query
          description: Includes coupon redemption counts
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: counts
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CouponCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CouponCollection'
    post:
      tags:
        - CouponSets
      summary: Add Coupons
      description: Adds coupon codes to a coupon set.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Coupon'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/{couponCode}:
    get:
      tags:
        - CouponSets
      summary: Get Coupon
      description: Retrieves a single coupon by its coupon code.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          required: true
          schema:
            type: string
        - name: includeCounts
          in: query
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
            text/json:
              schema:
                $ref: '#/components/schemas/Coupon'
            text/plain:
              schema:
                $ref: '#/components/schemas/Coupon'
    delete:
      tags:
        - CouponSets
      summary: Delete Coupon
      description: Deletes a single coupon by its coupon code.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/remove:
    post:
      tags:
        - CouponSets
      summary: Delete Coupons
      description: Deletes coupons from a coupon set.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/couponsets/{couponSetCode}/assigneddiscounts:
    get:
      tags:
        - CouponSets
      summary: Get Assigned Discounts
      description: >-
        Retrieves the discountIds of any assigned discounts for the specified
        coupon set.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedDiscount'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedDiscount'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedDiscount'
    post:
      tags:
        - CouponSets
      summary: Assign Discount to Coupon Set
      description: >-
        Assigns or associates an existing discount to a specified coupon set.
        Use the couponSetCode parameter to specify the coupon set.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignedDiscount'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/couponsets/{couponSetCode}/assigneddiscounts/{discountId}:
    delete:
      tags:
        - CouponSets
      summary: Unassign Discount from Coupon Set
      description: >-
        Unassigns or disassociates the specified discount with the specified
        coupon set.
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/currency:
    post:
      tags:
        - Currency
      summary: Add Currency Localization
      description: Adds a new currency localization.
      requestBody:
        description: "Properties of the currency-localization to create.\r\nRequired properties: CurrencyCode"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyLocalization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
    get:
      tags:
        - Currency
      summary: Get Currency Localizations
      description: Gets all currency localizations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalizationCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalizationCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrencyLocalizationCollection'
  /commerce/catalog/admin/currency/{currencyCode}:
    delete:
      tags:
        - Currency
      summary: Delete Currency Localization
      description: Deletes the currency localization specified by its currency code.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    get:
      tags:
        - Currency
      summary: Get Currency Localization
      description: Gets a single currency localization.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
    put:
      tags:
        - Currency
      summary: Update Currency Localization
      description: Updates the details of a currency localization.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of the currency-localization to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyLocalization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrencyLocalization'
  /commerce/catalog/admin/currency/{currencyCode}/exchangerates:
    post:
      tags:
        - Currency
      summary: Update Currency Localization
      description: Updates the details of a currency localization.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
      requestBody:
        description: Exchange rates for the currency
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogAdminsCurrencyExchangeRate'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Currency
      summary: Get Currency Exchange Rates
      description: >-
        Retrieves a list of exchange rates for a specified currency code and
        filter criteria.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRateCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRateCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRateCollection'
    put:
      tags:
        - Currency
      summary: Update Currency Exchange Rates
      description: Update multiple exchange rates for a specified currency code.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
      requestBody:
        description: Exchange rates for the currency
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogAdminsCurrencyExchangeRate'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/currency/{currencyCode}/exchangerates/{toCurrencyCode}:
    delete:
      tags:
        - Currency
      summary: Delete Currency Exchange Rate
      description: >-
        Delete a single exchange rate for a specified currency code and target
        currency code.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
        - name: toCurrencyCode
          in: path
          description: C
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    get:
      tags:
        - Currency
      summary: Get Currency Exchange Rate
      description: >-
        Retrieves a single exchange rate for a specified currency code and
        target currency code.
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
        - name: toCurrencyCode
          in: path
          description: Target currency code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCurrencyExchangeRate'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCurrencyExchangeRate'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsCurrencyExchangeRate'
  /commerce/catalog/admin/discounts/generate-random-coupon:
    get:
      tags:
        - Discounts
      summary: Generate Random Coupon
      description: Generates a random code for a coupon.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /commerce/catalog/admin/discounts:
    get:
      tags:
        - Discounts
      summary: Get Discounts
      description: >-
        Retrieves a list of discounts according to any specified filter criteria
        and sort options.
      parameters:
        - name: startIndex
          in: query
          description: >-
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: >-
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: >-
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            A set of filter expressions representing the search parameters for a
            query: eq=equals, ne=not equals, gt=greater than, lt = less than or
            equals, gt = greater than or equals, lt = less than or equals, sw =
            starts with, or cont = contains. Optional.
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscountCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscountCollection'
    post:
      tags:
        - Discounts
      summary: Create Discount
      description: Creates a discount.
      parameters:
        - name: tagCode
          in: query
          schema:
            type: string
      requestBody:
        description: >-
          Properties of the discount to create. Required properties:
          Content.Name, AmountType, StartDate, and Target.Type.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsDiscount'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
  /commerce/catalog/admin/discounts/{discountId}:
    get:
      tags:
        - Discounts
      summary: Get Discount
      description: Retrieves the details of a single discount.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
    put:
      tags:
        - Discounts
      summary: Update Discount
      description: Modifies a discount.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: "Properties of the discount to update. \r\n            Required properties: Content.Name, AmountType, StartDate, and Target.Type. \r\n            Any unspecified properties are set to null and boolean variables are set to false."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsDiscount'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscount'
    delete:
      tags:
        - Discounts
      summary: Delete Discount
      description: Deletes a discount specified by its discount ID.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/discounts/{discountId}/content:
    get:
      tags:
        - Discounts
      summary: Get Discount Content
      description: Retrieves the localized content specified for the specified discount.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscountLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscountLocalizedContent'
    put:
      tags:
        - Discounts
      summary: Update Discount Content
      description: >-
        Modifies the localized content for the specified discount. Allows you to
        rename the discount without modifying any other discount properties.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          New Name and/or LocaleCode. Properties of the content to update.
          Required property: Name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscountLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscountLocalizedContent'
  /commerce/catalog/admin/discounts/{discountId}/target:
    get:
      tags:
        - Discounts
      summary: Get Discount Target
      description: >-
        Retrieves the discount target, that is which products, categories, or
        shipping methods are eligible for the discount.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
    put:
      tags:
        - Discounts
      summary: Update Discount Target
      description: >-
        Modifies properties of the discount target, for example, the dollar
        amount, or precentage off the price.
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: "Properties of the discount target to modify. \r\n            Required properties: Target.Type. Any unspecified properties are set to null and boolean variables to false."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
  /commerce/catalog/admin/discounts/tags:
    put:
      tags:
        - Discounts
      summary: Update Discount Tags
      description: Modifies tags of the discount. The original tags are overwritten.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DiscountTag'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountTagCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscountTagCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscountTagCollection'
  /commerce/catalog/admin/discounts/{discountId}/tags:
    get:
      tags:
        - Discounts
      summary: Get Discount Tags
      description: Retrieves all tags associated to a discount
      parameters:
        - name: discountId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/TagCollection'
  /commerce/catalog/admin/discountsettings/{catalogId}:
    get:
      tags:
        - DiscountSettings
      summary: Get Discount Settings
      description: Retrieves the discount settings of a particular catalog.
      parameters:
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscountSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscountSettings'
    put:
      tags:
        - DiscountSettings
      summary: Update Discount Settings
      description: Updates the discount settings of a particular catalog.
      parameters:
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscountSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscountSettings'
  /commerce/catalog/admin/facets/{facetId}:
    get:
      tags:
        - Facets
      summary: Get Facet
      description: Retrieves the details of a Facet definition.
      parameters:
        - name: facetId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: validate
          in: query
          description: ''
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
    put:
      tags:
        - Facets
      summary: Update Facet
      description: Modifies a Facet definition.
      parameters:
        - name: facetId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsFacet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
    delete:
      tags:
        - Facets
      summary: Delete Facet
      description: Deletes the Facet definition from the store.
      parameters:
        - name: facetId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/facets:
    get:
      tags:
        - Facets
      summary: Get facets
      description: Retrieves the list of Facet Definition
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/FacetCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/FacetCollection'
    post:
      tags:
        - Facets
      summary: Add Facet
      description: Adds a new Facet to a category in a catalog.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsFacet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsFacet'
  /commerce/catalog/admin/facets/set/edit:
    post:
      tags:
        - Facets
      summary: Update facet
      description: Modifies a Facet definition.
      parameters:
        - name: categoryId
          in: query
          description: ''
          schema:
            type: integer
            format: int32
        - name: categoryCode
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacetSet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetSet'
            text/json:
              schema:
                $ref: '#/components/schemas/FacetSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/FacetSet'
  /commerce/catalog/admin/facets/category:
    get:
      tags:
        - Facets
      summary: Get Facet Category List
      description: >-
        Retrieves a list of configured, and optionally available, Facet
        configurations for the specified category.
      parameters:
        - name: categoryId
          in: query
          description: ''
          schema:
            type: integer
            format: int32
        - name: categoryCode
          in: query
          schema:
            type: string
        - name: includeAvailable
          in: query
          description: ''
          schema:
            type: boolean
        - name: validate
          in: query
          description: ''
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetSet'
            text/json:
              schema:
                $ref: '#/components/schemas/FacetSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/FacetSet'
  /commerce/catalog/admin/facets/category/{categoryId}:
    get:
      tags:
        - Facets
      summary: Get Facet Category List (Legacy)
      description: >-
        Retrieves a list of configured, and optionally available, Facet
        configurations for the specified category. 
      parameters:
        - name: categoryId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: includeAvailable
          in: query
          description: ''
          schema:
            type: boolean
        - name: validate
          in: query
          description: ''
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetSet'
            text/json:
              schema:
                $ref: '#/components/schemas/FacetSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/FacetSet'
  /commerce/catalog/admin/mastercatalogs:
    get:
      tags:
        - MasterCatalogPublishSettings
      summary: Get Master Catalogs
      description: Retrieves all master catalogs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterCatalogCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/MasterCatalogCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/MasterCatalogCollection'
  /commerce/catalog/admin/mastercatalogs/{masterCatalogId}:
    get:
      tags:
        - MasterCatalogPublishSettings
      summary: Get Master Catalog
      description: Retrieves a specific master catalog by its Id.
      parameters:
        - name: masterCatalogId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
    put:
      tags:
        - MasterCatalogPublishSettings
      summary: Update Master Catalog
      description: Update the publishing mode of a master catalog
      parameters:
        - name: masterCatalogId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
  /commerce/catalog/admin/pricelists:
    get:
      tags:
        - PriceLists
      summary: Get Price Lists
      description: Retrieve a list of all price lists.
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/PriceListCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/PriceListCollection'
    post:
      tags:
        - PriceLists
      summary: Add Price List
      description: Creates a price list.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsPriceList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
  /commerce/catalog/admin/pricelists/{priceListCode}:
    get:
      tags:
        - PriceLists
      summary: Get Price List
      description: Retrieves a price list by its code.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
    put:
      tags:
        - PriceLists
      summary: Update Price List
      description: Updates a price list by its code.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsPriceList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsPriceList'
    delete:
      tags:
        - PriceLists
      summary: Delete Price List
      description: Deletes a price list by its code.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: cascadeDeleteEntries
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/pricelists/{priceListCode}/entries:
    get:
      tags:
        - PriceListEntries
      summary: Get Price List Entries
      description: Retrieves the entries within a price list.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListEntryCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/PriceListEntryCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/PriceListEntryCollection'
    post:
      tags:
        - PriceListEntries
      summary: Add Price List Entry
      description: Adds an entry to a price list.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceListEntry'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
            text/plain:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
  /commerce/catalog/admin/pricelists/{priceListCode}/entries/{productCode}/{currencyCode}:
    get:
      tags:
        - PriceListEntries
      summary: Get Price List Entries by Currency
      description: Retrieves price list entries for a particular product and currency code.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
            text/plain:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
    put:
      tags:
        - PriceListEntries
      summary: Update Price List Entry by Currency
      description: Updates price list entry for a particular product and currency code.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceListEntry'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
            text/plain:
              schema:
                $ref: '#/components/schemas/PriceListEntry'
    delete:
      tags:
        - PriceListEntries
      summary: Delete Price List Entry by Currency
      description: Deletes a price liste entry for a particular product and currency code.
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/pricelists/bulkaddentries:
    post:
      tags:
        - PriceListEntries
      summary: Bulk Add Price List Entries
      description: Add bulk price list entries.
      parameters:
        - name: publishEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: invalidateCache
          in: query
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PriceListEntry'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/pricelists/bulkupdateentries:
    post:
      tags:
        - PriceListEntries
      summary: Bulk Update Price List Entries.
      description: >-
        Updates up to 5000 price list entries in bulk. Disable the publishEvents
        parameter to prevent publishing the event related to updating price list
        entries in the system. Disabling this property helps you prevent
        performance delays if you expect the event to trigger the re-indexing of
        a large number of products, or if you want to postpone the operations of
        other applications and services listening for the event. Disable the
        invalidateCache parameter if you expect to encounter unacceptable
        performance hits related to clearing the cache for each product in the
        price list entries.
      parameters:
        - name: publishEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: invalidateCache
          in: query
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PriceListEntry'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/pricelists/bulkdeleteentries:
    post:
      tags:
        - PriceListEntries
      summary: Bulk Delete Price List Entries
      description: Deletes up to 5000 price list entries in bulk.
      parameters:
        - name: publishEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: invalidateCache
          in: query
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PriceListEntry'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products:
    get:
      tags:
        - Products
      summary: Get Products
      description: >-
        Retrieves a list of products according to any specified filter criteria
        and sort options.
      parameters:
        - name: startIndex
          in: query
          description: >-
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: >-
            Used to page results from a query. Indicates the maximum number of
            entities to return from a single query. The default value is 20 and
            the maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: >-
            The element to sort the results by and the order in which the
            results appear. Either ascending or descending order. For example,
            to sort the results by “ID” ascending then by “CreateDate”
            descending, use: id asc,createdate desc.
          schema:
            type: string
        - name: responseGroups
          in: query
          description: >-
            Used to get more specific information from the request. For example
            to get discounts applied to a product use the AppliedProducts
            response group. Available response groups: ApplicableDiscounts,
            VariationOptions, and BaseProductCode.
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            A set of filter expressions representing the search parameters for a
            query: eq=equals, ne=not equals, gt=greater than, lt = less than or
            equals, gt = greater than or equals, lt = less than or equals, sw =
            starts with, or cont = contains. Optional.
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: qLimit
          in: query
          schema:
            type: integer
            format: int32
        - name: noCount
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductCollection'
    post:
      tags:
        - Products
      summary: Add Product
      description: >-
        Creates a new product. You supply a product name, product code, price
        and other product characteristics such as its attributes, categories
        where the product belongs, whether the product has configurable options,
        stand-alone options, and so on.
      requestBody:
        description: >-
          Properties of the new product. Required properties: ProductCode,
          Content.ProductName, and Price.ListPrice.
          Mozu.ProductAdmin.Contracts.Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsProduct'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
  /commerce/catalog/admin/products/{productCode}:
    get:
      tags:
        - Products
      summary: Get Product
      description: >-
        Retrieves details about a product based on the specified response group.
        For example, to get the BaseProductCode of a product.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          description: >-
            Used to get more specific information from the request. For example
            to get discounts applied to a product use the AppliedProducts
            response group. Available response groups: ApplicableDiscounts,
            VariationOptions, and BaseProductCode.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
    put:
      tags:
        - Products
      summary: Update Product
      description: Modifies an existing product.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Properties of the product that you want to update. Required
          properties: ProductCode, Content.ProductName, and Price.ListPrice.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsProduct'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProduct'
    delete:
      tags:
        - Products
      summary: Delete Product
      description: Deletes the product specified by its product code.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}:
    put:
      tags:
        - Products
      summary: Update Product in Catalog
      description: Update a product in a particular catalog.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInCatalogInfo'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
    delete:
      tags:
        - Products
      summary: Delete Product in Catalog
      description: Delete a product in a particular catalog.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    get:
      tags:
        - Products
      summary: Get Product in Catalog
      description: Retrieves a product in a particular catalog.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
  /commerce/catalog/admin/products/{productCode}/ProductInCatalogs:
    get:
      tags:
        - Products
      summary: Get Products in Catalog
      description: Retrieve products in catalogs.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInCatalogInfo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInCatalogInfo'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInCatalogInfo'
    put:
      tags:
        - Products
      summary: Update Product in Catalogs
      description: >-
        Use the Products resource to create and manage products for your store.
        You can create products with options that a shopper configures (such as
        a T-shirt color and size). The system can manage inventory for all
        combinations of your product options, and can calculate tax and shipping
        costs.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductInCatalogInfo'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInCatalogInfo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInCatalogInfo'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInCatalogInfo'
    post:
      tags:
        - Products
      summary: Add Product in Catalogs
      description: Add a product to catalogs.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInCatalogInfo'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductInCatalogInfo'
  /commerce/catalog/admin/products/Actions/RenameProductCodes:
    post:
      tags:
        - Products
      summary: Rename Product Codes
      description: >-
        Action that allows productCodes to be Renamed. Changing the resource
        identifier of a product could cause problems for established products.
      requestBody:
        description: >-
          An array specifying the existing productCode and the new productCode
          it should be renamed to
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductCodeRename'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/variations:
    get:
      tags:
        - ProductVariations
      summary: Get Product Variations
      description: >-
        Retrieves a paged list of product variations for a specific product
        according to any specified filter criteria and sort options.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-supplied code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: "Used to page results from a query. Indicates the zero-based offset in the complete result set\r\nwhere the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items,\r\nstartIndex=3. The default value is 0. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: "Used to page results from a query. Indicates the maximum number of entities to return from a\r\nquery. The default value is 20 and the maximum value is 200. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: "The element to sort the results by and the order in which the results appear. Either ascending\r\n(a-z) or descending (z-a) order. Optional."
          schema:
            type: string
        - name: filter
          in: query
          description: "A set of filter expressions representing the search parameters for a query: eq=equals, ne=not\r\nequals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw =\r\nstarts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationPagedCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationPagedCollection'
    put:
      tags:
        - ProductVariations
      summary: Update Product Variations
      description: >-
        Modifies multiple product variations for an existing product in one
        operation. Use to set IsActive to true for variations that represent
        configurable options for sale. Also use to change the price or inventory
        count of an existing product variation. Read-only options are ignored.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-supplied code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of the product variations that you are modifying. Required.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariationCollection'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationCollection'
  /commerce/catalog/admin/products/{productCode}/variations/{variationKey}:
    get:
      tags:
        - ProductVariations
      summary: Get Product Variation
      description: >-
        Retrieves an existing product variation for a specific product and
        variation key.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          description: >-
            Unique identifier for a single product variation. System-supplied
            and read-only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariation'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariation'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariation'
    put:
      tags:
        - ProductVariations
      summary: Update Product Variation
      description: >-
        Modifies an existing product variation specified by its variation key.
        Typically used to change the price or inventory count of an existing
        product variation. Read-only options are ignored.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          description: >-
            Unique identifier for a single variation. System-supplied and
            read-only.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of the product variation that you are modifying. Required.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariation'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariation'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariation'
    delete:
      tags:
        - ProductVariations
      summary: Delete Product Variation
      description: Deletes an existing product variation.
      parameters:
        - name: productCode
          in: path
          description: >-
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          description: >-
            Unique identifier for a single product variation. System-supplied
            and read-only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedDeltaPrice:
    get:
      tags:
        - ProductVariations
      summary: Get Product Variation Localized Delta Prices
      description: Get product variation localized delta prices.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationDeltaPrice'
    put:
      tags:
        - ProductVariations
      summary: Update Product Variation Localized Delta Prices
      description: Update product variation localized delta prices.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationDeltaPrice'
    post:
      tags:
        - ProductVariations
      summary: Add Product Variation Localized Delta Price
      description: Add a product variation localized delta price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariationDeltaPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
  /commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedDeltaPrice/{currencyCode}:
    get:
      tags:
        - ProductVariations
      summary: Get Product Variation Localized Delta Price
      description: >-
        Retrieve the product variation localized delta prices for a specific
        currency.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
    put:
      tags:
        - ProductVariations
      summary: Update Product Variation Localized Delta Price
      description: >-
        Update the product variation localized delta prices for a specific
        currency.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariationDeltaPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationDeltaPrice'
    delete:
      tags:
        - ProductVariations
      summary: Delete Product Variation Localized Delta Price
      description: >-
        Delete the product variation localized delta prices for a specific
        currency.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedPrice:
    get:
      tags:
        - ProductVariations
      summary: Get Product Variation Localized Prices
      description: Get product variation localized prices.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationFixedPrice'
    put:
      tags:
        - ProductVariations
      summary: Update Product Variation Localized Prices
      description: Update product variation localized prices
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductVariationFixedPrice'
    post:
      tags:
        - ProductVariations
      summary: Add Product Variation Localized Price
      description: Add a product variation localized price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariationFixedPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
  /commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedPrice/{currencyCode}:
    get:
      tags:
        - ProductVariations
      summary: Get Product Variation Localized Price by Currency
      description: Get the product variation localized price for a specific currency code.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
    put:
      tags:
        - ProductVariations
      summary: Update Product Variation Localized Price by Currency
      description: >-
        Update the product variation localized price for a specific currency
        code.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariationFixedPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationFixedPrice'
    delete:
      tags:
        - ProductVariations
      summary: Delete Product Variation Localized Price by Currency
      description: >-
        Delete the product variation localized price for a specific currency
        code.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/changeproducttype:
    post:
      tags:
        - Products
      summary: Change product type.
      description: Change a product's product type.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeChangeRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeChangeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductTypeChangeResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductTypeChangeResponse'
  /commerce/catalog/admin/products/{productCode}/Extras:
    get:
      tags:
        - ProductExtras
      summary: Get Product Extras
      description: Get extras for the product.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtra'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtra'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtra'
    post:
      tags:
        - ProductExtras
      summary: Add Product Extra
      description: Add extra
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductExtra'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductExtra'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductExtra'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductExtra'
  /commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}:
    get:
      tags:
        - ProductExtras
      summary: Get Product Extra
      description: Get individual extra.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductExtra'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductExtra'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductExtra'
    put:
      tags:
        - ProductExtras
      summary: Update Product Extra
      description: Update extra
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductExtra'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductExtra'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductExtra'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductExtra'
    delete:
      tags:
        - ProductExtras
      summary: Delete Product Extra
      description: Delete extra
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice:
    get:
      tags:
        - ProductExtras
      summary: Get Extra Localized Delta Price
      description: Get extra value localized delta price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
    put:
      tags:
        - ProductExtras
      summary: Update Extra Localized Delta Price
      description: Update extra value localized delta price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
    post:
      tags:
        - ProductExtras
      summary: Add Extra Localized Delta Price
      description: Add a extra value localized delta price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
  /commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice/{currencyCode}:
    put:
      tags:
        - ProductExtras
      summary: Update Extra Localized Delta Price
      description: Update extra value localized delta price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
    delete:
      tags:
        - ProductExtras
      summary: Delete Extra Localized Delta Price
      description: Delete extra value localized delta price.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    get:
      tags:
        - ProductExtras
      summary: Get Extra Localized Delta Price
      description: Get extra value localized delta price
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
  /commerce/catalog/admin/products/{productCode}/Options:
    get:
      tags:
        - ProductOptions
      summary: Get Product Options
      description: Get options for a product
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsProductOption'
    post:
      tags:
        - ProductOptions
      summary: Add Product Option
      description: Add an option to a product
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsProductOption'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
  /commerce/catalog/admin/products/{productCode}/Options/{attributeFQN}:
    get:
      tags:
        - ProductOptions
      summary: Get Product Option
      description: Get an individual option for a product.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
    put:
      tags:
        - ProductOptions
      summary: Update Product Option
      description: Update an individual option for a product.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsProductOption'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
    delete:
      tags:
        - ProductOptions
      summary: Delete Product Option
      description: Delete a individual option for a product.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/Properties:
    get:
      tags:
        - ProductProperties
      summary: Get Product Properties
      description: Get properties for a product.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogAdminsProductProperty'
    post:
      tags:
        - ProductProperties
      summary: Add Product Property
      description: Add a property to a product.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsProductProperty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
  /commerce/catalog/admin/products/{productCode}/Properties/{attributeFQN}:
    get:
      tags:
        - ProductProperties
      summary: Get Product Property
      description: Get a specific product property.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
    put:
      tags:
        - ProductProperties
      summary: Update Product Property
      description: Update a specific product property.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsProductProperty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsProductProperty'
    delete:
      tags:
        - ProductProperties
      summary: Delete Product Property
      description: Delete a specific product property.
      parameters:
        - name: productCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/products/{productCode}/Properties/{attributeFQN}/values/{value}/LocalizedContent:
    get:
      tags:
        - ProductProperties
      summary: Get Product Property Localized Contents
      description: Get property value localized content.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
    post:
      tags:
        - ProductProperties
      summary: Add Product Property Localized Content
      description: Add property value localized content.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
    put:
      tags:
        - ProductProperties
      summary: Update Product Property Localized Content
      description: Update property value localized content.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
  /commerce/catalog/admin/products/{productCode}/Properties/{attributeFQN}/values/{value}/LocalizedContent/{localeCode}:
    get:
      tags:
        - ProductProperties
      summary: Get Product Property Localized Content by Locale
      description: Get property value localized content.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
    put:
      tags:
        - ProductProperties
      summary: Update Product Property Localized Content by Locale
      description: Update property value localized content by locale code.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
    delete:
      tags:
        - ProductProperties
      summary: Delete Product Property Localized Content by Locale
      description: Delete property value localized content by locale code.
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/quickedit/products/properties:
    post:
      tags:
        - ProductQuickEdit
      summary: Quick Edit Properties
      requestBody:
        description: Mozu.ProductAdmin.Contracts.QuickEditProductPropertyActions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickEditProductPropertyActions'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
      description: >-
        Updates product properties through quick edits. Values will be added,
        not replaced. The Quick Edit APIs are designed primarily for the Quick
        Edit UI. They are not advised for bulk product updates through a batch
        job. For efficiently updating your catalog through a batch job, use the
        Import Export APIs or the Catalog Administration APIs directly.
  /commerce/catalog/admin/quickedit/products/productincatalog:
    post:
      tags:
        - ProductQuickEdit
      summary: Quick Edit Product in Catalog
      requestBody:
        description: Mozu.ProductAdmin.Contracts.QuickEditProductInCatalogActions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickEditProductInCatalogActions'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
      description: |-

        Updates products in catalog through quick edit. Values will be
            added, not replaced. The Quick Edit APIs are designed primarily for the Quick Edit UI. They are not advised for bulk product updates through a batch job. For efficiently updating your catalog through a batch job, use the Import Export APIs or the Catalog Administration APIs directly.
  /commerce/catalog/admin/quickedit/products:
    post:
      tags:
        - ProductQuickEdit
      summary: Quick Edit Products
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickEditProductActions'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/QuickEditResponse'
      description: >-
        Applies top level product updates. The Quick Edit APIs are designed
        primarily for the Quick Edit UI. They are not advised for bulk product
        updates through a batch job. For efficiently updating your catalog
        through a batch job, use the Import Export APIs or the Catalog
        Administration APIs directly.
  /commerce/catalog/admin/productsortdefinitions:
    get:
      tags:
        - ProductSortDefinitions
      summary: Get Product Sort Definitions
      description: >-
        Retrieves a list of product sort definitions according to any specified
        filter criteria and sort options.
      parameters:
        - name: startIndex
          in: query
          description: >-
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. The
            default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: >-
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: >-
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            A set of filter expressions representing the search parameters for a
            query: eq=equals, ne=not equals, gt=greater than, lt = less than or
            equals, gt = greater than or equals, lt = less than or equals, sw =
            starts with, or cont = contains. Optional.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinitionPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinitionPagedCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductSortDefinitionPagedCollection'
    post:
      tags:
        - ProductSortDefinitions
      summary: Add Product Sort Definition
      description: Adds a new product sort definition.
      parameters:
        - name: useProvidedId
          in: query
          description: >-
            If true, the provided Id value will be used as the
            ProductSortDefinitionId. If omitted or false, the system will
            generate a ProductSortDefinitionId
          schema:
            type: boolean
            default: false
      requestBody:
        description: >-
          Properties of the new product sort definition. Required properties of
          StartDate and Name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSortDefinition'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
  /commerce/catalog/admin/productsortdefinitions/{productSortDefinitionId}:
    get:
      tags:
        - ProductSortDefinitions
      summary: Get Product Sort Definition
      description: Gets a single product sort definition.
      parameters:
        - name: productSortDefinitionId
          in: path
          description: Unique identifier of the product sort definition.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
    put:
      tags:
        - ProductSortDefinitions
      summary: Update Product Sort Definition
      description: Updates the details of a product sort definition.
      parameters:
        - name: productSortDefinitionId
          in: path
          description: Unique identifier of the product sort definition.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: The details of the product sort definition to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSortDefinition'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductSortDefinition'
    delete:
      tags:
        - ProductSortDefinitions
      summary: Delete Product Sort Definition
      description: >-
        Deletes the product sort definition specified by its
        ProductSortDefinitionID.
      parameters:
        - name: productSortDefinitionId
          in: path
          description: Unique identifier of the product sort definition.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/producttypes:
    get:
      tags:
        - ProductTypes
      summary: Get Product Types
      description: >-
        Retrieves a list of product types according to any specified filter
        criteria and sort options.
      parameters:
        - name: startIndex
          in: query
          description: >-
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: >-
            Used to page results from a query. Indicates the maximum number of
            entities to return from a single query. The default value is 20 and
            the maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: >-
            The element to sort the results by and the order in which the
            results appear. Either ascending or descending order. For example,
            to sort the results by “ID” ascending then by “CreateDate”
            descending, use: id asc,createdate desc.
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            A set of filter expressions representing the search parameters for a
            query: eq=equals, ne=not equals, gt=greater than, lt = less than or
            equals, gt = greater than or equals, lt = less than or equals, sw =
            starts with, or cont = contains. Optional.
          schema:
            type: string
        - name: responseGroups
          in: query
          description: >-
            Used to get more specific information from the request. For example
            to get discounts applied to a product use the AppliedProducts
            response group. Available response groups: ApplicableDiscounts,
            VariationOptions, and BaseProductCode.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductTypeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductTypeCollection'
    post:
      tags:
        - ProductTypes
      summary: Add Product Type
      description: Get product type by Id.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductType'
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type
      description: Get product type by Id.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductType'
    put:
      tags:
        - ProductTypes
      summary: Update Product Type
      description: Update product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductType'
    delete:
      tags:
        - ProductTypes
      summary: Delete Product Type
      description: Delete product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/variations:
    post:
      tags:
        - ProductTypes
      summary: Generate Product Variations
      description: Generate product variations for a product type.
      parameters:
        - name: productTypeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: productCode
          in: query
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CatalogAdminsProductOption'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariationPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductVariationPagedCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductVariationPagedCollection'
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Extras:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type Extras
      description: Get a list of product type extras.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
    post:
      tags:
        - ProductTypes
      summary: Add Product Type Extra
      description: Add a product type extra.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Extras/{attributeFQN}:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type Extra
      description: Get a product type extra.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    put:
      tags:
        - ProductTypes
      summary: Update Product Type Extra
      description: Update a product type extra
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    delete:
      tags:
        - ProductTypes
      summary: Delete Product Type Extra
      description: Delete a product type extra.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Options:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type Options
      description: Get options for the product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
    post:
      tags:
        - ProductTypes
      summary: Add Product Type Option
      description: Add a product option to a product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Options/{attributeFQN}:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type Option
      description: Get an individual product type option by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    put:
      tags:
        - ProductTypes
      summary: Update Product Type Option
      description: Update a product option type by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    delete:
      tags:
        - ProductTypes
      summary: Delete Product Type Option
      description: Delete a product type option by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Properties:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type Properties
      description: Get properties of a product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
    post:
      tags:
        - ProductTypes
      summary: Add Product Type Property
      description: Add a property to a product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Properties/{attributeFQN}:
    get:
      tags:
        - ProductTypes
      summary: Get Product Type Property
      description: Get a product type property by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    put:
      tags:
        - ProductTypes
      summary: Update Product Type Property
      description: Update a product type property by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    delete:
      tags:
        - ProductTypes
      summary: Delete Product Type Property
      description: Delete a product type property by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/VariantProperties:
    get:
      tags:
        - ProductTypes
      summary: Get Variant Product Type Properties
      description: Get variant properties for a product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeInProductType'
    post:
      tags:
        - ProductTypes
      summary: Add Variant Product Type Property
      description: Add a variant property to a product type.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
  /commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/VariantProperties/{attributeFQN}:
    get:
      tags:
        - ProductTypes
      summary: Get Variant Product Type Property
      description: Get a variant property by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    put:
      tags:
        - ProductTypes
      summary: Update Variant Product Type Property
      description: Update a variant property by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeInProductType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
            text/plain:
              schema:
                $ref: '#/components/schemas/AttributeInProductType'
    delete:
      tags:
        - ProductTypes
      summary: Delete Variant Product Type Property
      description: Delete a variant property by its FQN.
      parameters:
        - name: productTypeId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/publishing/publishdrafts:
    post:
      tags:
        - ProductPublishing
      summary: Publish Draft Products
      description: Publis draft products.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishingScope'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/publishing/discarddrafts:
    post:
      tags:
        - Publishing
      summary: Discard Drafts
      description: >-
        Deletes the draft version of product changes (pending product changes)
        for each product code.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishingScope'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/publishing/publishsets:
    get:
      tags:
        - ProductPublishing
      summary: Get Publish Sets
      description: Retrieves a list of PublishSets including the product counts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSetCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/PublishSetCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/PublishSetCollection'
    post:
      tags:
        - ProductPublishing
      summary: Assign Products to Publish Sets
      description: Assign products to publish sets.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishSet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSet'
            text/json:
              schema:
                $ref: '#/components/schemas/PublishSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/PublishSet'
  /commerce/catalog/admin/publishing/publishsets/{publishSetCode}:
    get:
      tags:
        - ProductPublishing
      summary: Get Publish Sets
      description: Retrieves the details of a single PublishSet.
      parameters:
        - name: publishSetCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSet'
            text/json:
              schema:
                $ref: '#/components/schemas/PublishSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/PublishSet'
    delete:
      tags:
        - ProductPublishing
      summary: Delete Publish Set
      description: >-
        Removes all details about a PublishSet from the product service. If the
        discardDrafts param is true, it also deletes the product drafts.
      parameters:
        - name: publishSetCode
          in: path
          description: The code of the PublishSet to delete
          required: true
          schema:
            type: string
        - name: discardDrafts
          in: query
          description: Whether to also discard the drafts for this publish set.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/search/synonym-definitions/{localeCode}:
    get:
      tags:
        - SearchSynonyms
      summary: Get Synonym Definition Collection
      parameters:
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
      description: Get synonym definition collection.
    post:
      tags:
        - SearchSynonyms
      summary: Add Synonym Definition Collection
      description: Add or update a synonym definition collection.
      parameters:
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymDefinitionCollection'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
  /commerce/catalog/admin/search/master-catalog-synonym-definitions/{languageCode}:
    get:
      tags:
        - SearchSynonyms
      summary: Get Synonym Definition Collections
      parameters:
        - name: languageCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionCollection'
      description: Get synonym definition collections.
  /commerce/catalog/admin/search/synonyms:
    get:
      tags:
        - SearchSynonyms
      summary: Get Synonym Definitions
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionPagedCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionPagedCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinitionPagedCollection'
      description: Get synonym definitions.
    post:
      tags:
        - SearchSynonyms
      summary: Add Synonym Definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymDefinition'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
      description: Add synonym definitions.
  /commerce/catalog/admin/search/synonyms/{synonymId}:
    get:
      tags:
        - SearchSynonyms
      summary: Get Synonym Definition
      parameters:
        - name: synonymId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
      description: Get a specific synonym definition by ID.
    put:
      tags:
        - SearchSynonyms
      summary: Update Synonym Definition
      parameters:
        - name: synonymId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymDefinition'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/SynonymDefinition'
      description: Update a specific synonym definition by ID.
    delete:
      tags:
        - SearchSynonyms
      summary: Delete Synonym Definition
      parameters:
        - name: synonymId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
      description: Delete a specific synonym definition by ID.
  /commerce/catalog/admin/search/searchtuningrules:
    get:
      tags:
        - SearchTuningRules
      summary: Get Search Tuning Rules
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleCollection'
      description: Get search tuning rules.
    post:
      tags:
        - SearchTuningRules
      summary: Add Search Tuning Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTuningRule'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
      description: Add search tuning rule.
  /commerce/catalog/admin/search/searchtuningrules/{searchTuningRuleCode}:
    get:
      tags:
        - SearchTuningRules
      summary: Get Search tuning Rule
      parameters:
        - name: searchTuningRuleCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
      description: Get a specific search tuning rule.
    put:
      tags:
        - SearchTuningRules
      summary: Update Search Tuning Rule
      parameters:
        - name: searchTuningRuleCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTuningRule'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchTuningRule'
      description: Update a specific search tuning rule.
    delete:
      tags:
        - SearchTuningRules
      summary: Delete search tuning rule
      parameters:
        - name: searchTuningRuleCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      description: Delete a specific search tuning rule.
  /commerce/catalog/admin/search/searchtuningrulesortfields:
    get:
      tags:
        - SearchTuningRules
      summary: Get Search Tuning Rule Sort Fields
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleSortFields'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleSortFields'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleSortFields'
      description: Get search tuning rule sort fields.
    post:
      tags:
        - SearchTuningRules
      summary: Update Search Tuning Rule Sort Fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTuningRuleSortFields'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleSortFields'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleSortFields'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchTuningRuleSortFields'
      description: Update search tuning rule sort fields.
  /commerce/catalog/admin/search/{name}/categorysuggestsettings:
    get:
      tags:
        - SearchCategorySuggestSettings
      summary: Get Category Suggest Settings
      description: Get CategorySuggestSettings for a specific SearchSettings.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
    put:
      tags:
        - SearchCategorySuggestSettings
      summary: Update Category Suggest Settings
      description: >-
        Adds or updates the CategorySuggestSettings for a specific
        SearchSetting.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
    delete:
      tags:
        - SearchCategorySuggestSettings
      summary: Delete Category Suggest Settings
      description: >-
        Deletes the CategorySuggestSettings for a specific SearchSetting by
        name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/search/{name}/listingsettings:
    get:
      tags:
        - SearchListingSettings
      summary: Get Search Listing Settings
      description: Get ListingSettings for a specific SearchSettings by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/ListingSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/ListingSettings'
    put:
      tags:
        - SearchListingSettings
      summary: Update Search Listing Settings
      description: >-
        Adds or updates the ListingSettings for a specific SearchSetting by
        name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/ListingSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/ListingSettings'
    delete:
      tags:
        - SearchListingSettings
      summary: Delete Search Listing Settings
      description: Deletes the ListingSettings for a specific SearchSetting by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/search/{name}/productsuggestsettings:
    get:
      tags:
        - SearchProductSuggestSettings
      summary: Get Product Suggest Settings
      description: Get ProductSuggestSettings for a specific SearchSettings by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SuggestSettings'
    put:
      tags:
        - SearchProductSuggestSettings
      summary: Update Product Suggest Settings
      description: >-
        Adds or updates the ProductSuggestSettings for a specific SearchSetting
        by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSuggestSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSuggestSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductSuggestSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductSuggestSettings'
    delete:
      tags:
        - SearchProductSuggestSettings
      summary: Delete Product Suggest Settings
      description: Deletes the ProductSuggestSettings for a specific SearchSetting by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/search/redirect:
    get:
      tags:
        - SearchRedirect
      summary: Get Search Redirects
      description: Get search redirect list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRedirectCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchRedirectCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchRedirectCollection'
    post:
      tags:
        - SearchRedirect
      summary: Add Search Redirect
      description: Adds a search redirect for a specific site.
      parameters:
        - name: fromSystemDefault
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRedirect'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
  /commerce/catalog/admin/search/redirect/{redirectId}:
    get:
      tags:
        - SearchRedirect
      summary: Get Search Redirect
      description: Get search redirect by redirect id.
      parameters:
        - name: redirectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
    put:
      tags:
        - SearchRedirect
      summary: Update Search Redirect
      description: Update a search redirect for a specific site.
      parameters:
        - name: redirectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRedirect'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
    delete:
      tags:
        - SearchRedirect
      summary: Delete Search Redirect
      description: Deletes a specific redirect for a site.
      parameters:
        - name: redirectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchRedirect'
  /commerce/catalog/admin/search/settings:
    get:
      tags:
        - SearchSettings
      summary: Get Search Settings
      description: Get site search settings list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSettingsCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSettingsCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSettingsCollection'
    post:
      tags:
        - SearchSettings
      summary: Add Search Settings
      description: Adds the Search Settings for a specific site.
      parameters:
        - name: fromSystemDefault
          in: query
          schema:
            type: boolean
            default: false
        - name: copyFromName
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: makeDefault
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSettings'
  /commerce/catalog/admin/search/settings/{name}:
    get:
      tags:
        - SearchSettings
      summary: Get Search Settings by Name
      description: Get specific site search settings by name.
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSettings'
    put:
      tags:
        - SearchSettings
      summary: Update Search Settings by Name
      description: Update site search settings for a specific site by name.
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSettings'
    delete:
      tags:
        - SearchSettings
      summary: Delete Search Settings by Name
      description: Delete the Search Settings for a specific site by name.
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSettings'
  /commerce/catalog/admin/search/settings/systemdefault:
    get:
      tags:
        - SearchSettings
      summary: Get System Default Search Settings
      description: Get the system default search settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSettings'
  /commerce/catalog/admin/search/{name}/sitesearchsettings:
    get:
      tags:
        - SearchSettings
      summary: Get Site Search Settings
      description: Get SiteSearchSettings for a specific SearchSettings by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SiteSearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SiteSearchSettings'
    put:
      tags:
        - SearchSettings
      summary: Update Site Search Settings
      description: Updates the SiteSearchSettings for a specific SearchSetting by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteSearchSettings'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSearchSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/SiteSearchSettings'
            text/plain:
              schema:
                $ref: '#/components/schemas/SiteSearchSettings'
    delete:
      tags:
        - SearchSettings
      summary: Delete Site Search Settings
      description: Deletes the SiteSearchSettings for a specific SearchSetting by name.
      parameters:
        - name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/search/spellcheck:
    put:
      tags:
        - SearchSettings
      summary: Update Spellcheck Settings
      description: Update Spellcheck for SiteSearchSettings.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpellcheckUpdate'
      responses:
        '200':
          description: Success
  /commerce/catalog/admin/searchmerchandizingrules/{code}:
    get:
      tags:
        - SearchMerchandizingRule
      summary: Get Search Merchandizing Rule
      parameters:
        - name: code
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
      description: Get Search Merchandizing Rule
    put:
      tags:
        - SearchMerchandizingRule
      summary: Update Search Merchandizing Rule
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
      description: Update Search Merchandizing Rule
    delete:
      tags:
        - SearchMerchandizingRule
      summary: Delete Search Merchandizing Rule
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      description: Delete Search Merchandizing Rule
  /commerce/catalog/admin/searchmerchandizingrules:
    get:
      tags:
        - SearchMerchandizingRule
      summary: Get Search Merchandizing Rules
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMerchandizingRuleCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchMerchandizingRuleCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchMerchandizingRuleCollection'
      description: Get Search Merchandizing Rules
    post:
      tags:
        - SearchMerchandizingRule
      summary: Create Search Merchandizing Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
      description: Create Search Merchandizing Rule
  /commerce/catalog/admin/searchmerchandizingrules/{code}/clone:
    get:
      tags:
        - SearchMerchandizingRule
      summary: Clone Search Merchandizing Rule
      parameters:
        - name: code
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
      description: Clone Search Merchandizing Rule
  /commerce/catalog/admin/tags:
    get:
      tags:
        - Tag
      summary: Get Tags
      description: Retrieves a list of tags.
      parameters:
        - name: path
          in: query
          description: ''
          schema:
            type: string
        - name: startIndex
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ''
          schema:
            type: string
        - name: filter
          in: query
          description: ''
          schema:
            type: string
        - name: responseGroups
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/TagCollection'
    post:
      tags:
        - Tag
      summary: Create Tag
      description: Creates a tag.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsTag'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
  /commerce/catalog/admin/tags/{tagCode}:
    get:
      tags:
        - Tag
      summary: Get Tag
      description: Retrieves the details of a single tag.
      parameters:
        - name: tagCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
    delete:
      tags:
        - Tag
      summary: Delete Tag
      description: Deletes a Tag specified by its tagCode.
      parameters:
        - name: tagCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      tags:
        - Tag
      summary: Update Tag
      description: Modifies a tag.
      parameters:
        - name: tagCode
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAdminsTag'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAdminsTag'
  /commerce/catalog/admin/tags/node/tree:
    get:
      tags:
        - Tag
      summary: Get Tag Collection as Tag Tree
      description: Retrieves the tag collection as tag tree for specified tagCode.
      parameters:
        - name: tagCode
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagNodeTree'
            text/json:
              schema:
                $ref: '#/components/schemas/TagNodeTree'
            text/plain:
              schema:
                $ref: '#/components/schemas/TagNodeTree'
  /commerce/catalog/admin/searchSchema/fieldTypes/{language}:
    get:
      tags:
        - FieldTypeDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldTypeDefinitionRepositoryEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldTypeDefinitionRepositoryEntry'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldTypeDefinitionRepositoryEntry'
      summary: Get Field Type Definitions
      description: Get Field Type Definitions
  /commerce/catalog/admin/searchSchema/definition:
    get:
      tags:
        - SchemaDefinition
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchemaDefinition'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchemaDefinition'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchemaDefinition'
      summary: List Schema Definitions
      description: List Schema Definitions
  /commerce/catalog/admin/searchSchema/definition/{language}:
    get:
      tags:
        - SchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: published
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
      summary: Get Schema Definition
      description: Get Schema Definition
    put:
      tags:
        - SchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/SchemaDefinition'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/SchemaDefinition'
          application/zip:
            schema:
              $ref: '#/components/schemas/SchemaDefinition'
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaDefinition'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
            text/plain:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
      summary: Update Schema Definition
      description: Update Schema Definition
  /commerce/catalog/admin/searchSchema/definition/{language}/revert:
    post:
      tags:
        - SchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
      summary: Revert
      description: Revert
  /commerce/catalog/admin/searchSchema/definition/{language}/publish:
    post:
      tags:
        - SchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: reindex
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
      summary: Publish
      description: Publish
  /commerce/catalog/admin/searchSchema/suggest/{language}:
    get:
      tags:
        - SuggestDefinition
      summary: Downloads the suggest file for the site
      parameters:
        - name: language
          in: path
          description: langage code used by the site (en, es, fr)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      description: Downloads the suggest file for the site
    put:
      tags:
        - SuggestDefinition
      summary: Uploads a suggest file for the site in tab seperated format)
      parameters:
        - name: language
          in: path
          description: language code use by the site (en, es, fr)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: Uploads a suggest file for the site in tab seperated format)
  /commerce/catalog/admin/searchSchema/suggest/settings/{language}:
    get:
      tags:
        - SuggestDefinition
      summary: Gets the suggester settings for the site
      parameters:
        - name: language
          in: path
          description: language code use by the site (en, es, fr)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suggester'
            text/json:
              schema:
                $ref: '#/components/schemas/Suggester'
            text/plain:
              schema:
                $ref: '#/components/schemas/Suggester'
      description: Gets the suggester settings for the site
    put:
      tags:
        - SuggestDefinition
      summary: Updates the suggester settings for the site
      parameters:
        - name: language
          in: path
          description: language code use by the site (en, es, fr)
          required: true
          schema:
            type: string
      requestBody:
        description: suggset definition in
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/Suggester'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/Suggester'
          application/zip:
            schema:
              $ref: '#/components/schemas/Suggester'
          application/json:
            schema:
              $ref: '#/components/schemas/Suggester'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suggester'
            text/json:
              schema:
                $ref: '#/components/schemas/Suggester'
            text/plain:
              schema:
                $ref: '#/components/schemas/Suggester'
      description: Updates the suggester settings for the site
  /commerce/catalog/admin/searchSchema/synonyms/reload:
    post:
      tags:
        - Synonym
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
      summary: Update Synonyms
      description: Update Synonyms
  /commerce/catalog/admin/searchSchema/synonyms:
    get:
      tags:
        - Synonym
      parameters:
        - name: language
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      summary: List Synonyms
      description: List Synonyms
tags:
  - name: ProductAttributes
    x-displayName: ProductAttributes
  - name: Categories
    x-displayName: Categories
  - name: searchCategoryAttributes
    x-displayName: searchCategoryAttributes
  - name: CategoryAttributeDefinition
    x-displayName: CategoryAttributeDefinition
  - name: CouponSets
    x-displayName: CouponSets
  - name: Currency
    x-displayName: Currency
  - name: Discounts
    x-displayName: Discounts
  - name: DiscountSettings
    x-displayName: DiscountSettings
  - name: Facets
    x-displayName: Facets
  - name: MasterCatalogPublishSettings
    x-displayName: MasterCatalogPublishSettings
  - name: PriceLists
    x-displayName: PriceLists
  - name: PriceListEntries
    x-displayName: PriceListEntries
  - name: Products
    x-displayName: Products
  - name: ProductVariations
    x-displayName: ProductVariations
  - name: ProductExtras
    x-displayName: ProductExtras
  - name: ProductOptions
    x-displayName: ProductOptions
  - name: ProductProperties
    x-displayName: ProductProperties
  - name: ProductQuickEdit
    x-displayName: ProductQuickEdit
  - name: ProductSortDefinitions
    x-displayName: ProductSortDefinitions
  - name: ProductTypes
    x-displayName: ProductTypes
  - name: ProductPublishing
    x-displayName: ProductPublishing
  - name: Publishing
    x-displayName: Publishing
  - name: SearchSynonyms
    x-displayName: SearchSynonyms
  - name: SearchTuningRules
    x-displayName: SearchTuningRules
  - name: SearchCategorySuggestSettings
    x-displayName: SearchCategorySuggestSettings
  - name: SearchListingSettings
    x-displayName: SearchListingSettings
  - name: SearchProductSuggestSettings
    x-displayName: SearchProductSuggestSettings
  - name: SearchRedirect
    x-displayName: SearchRedirect
  - name: SearchSettings
    x-displayName: SearchSettings
  - name: SearchMerchandizingRule
    x-displayName: SearchMerchandizingRule
  - name: Tag
    x-displayName: Tag
  - name: FieldTypeDefinition
    x-displayName: FieldTypeDefinition
  - name: SchemaDefinition
    x-displayName: SchemaDefinition
  - name: SuggestDefinition
    x-displayName: SuggestDefinition
  - name: Synonym
    x-displayName: Synonym
x-tagGroups:
  - name: productadmin
    tags:
      - ProductAttributes
      - Categories
      - searchCategoryAttributes
      - CategoryAttributeDefinition
      - CouponSets
      - Currency
      - Discounts
      - DiscountSettings
      - Facets
      - MasterCatalogPublishSettings
      - PriceLists
      - PriceListEntries
      - Products
      - ProductVariations
      - ProductExtras
      - ProductOptions
      - ProductProperties
      - ProductQuickEdit
      - ProductSortDefinitions
      - ProductTypes
      - ProductPublishing
      - Publishing
      - SearchSynonyms
      - SearchTuningRules
      - SearchCategorySuggestSettings
      - SearchListingSettings
      - SearchProductSuggestSettings
      - SearchRedirect
      - SearchSettings
      - SearchMerchandizingRule
      - Tag
  - name: solrschemamanager
    tags:
      - FieldTypeDefinition
      - SchemaDefinition
      - SuggestDefinition
      - Synonym
components:
  schemas:
    AttributeVocabularyValueLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description: >-
            Language used for the string attribute value. Currently, only en_US
            is supported.
          nullable: true
        stringValue:
          type: string
          description: Localized Value in the language of the locale code
          nullable: true
      additionalProperties: false
      description: Attribute Value Localized Resource
    AttributeSearchSettings:
      type: object
      properties:
        searchableInStorefront:
          type: boolean
          description: >-
            Indicates whether the attribute value should be searchable on the
            public storefront.
        searchableInAdmin:
          type: boolean
          description: >-
            Indicates whether the attribute value should be searchable in the
            merchant catalog admin.
        searchDisplayValue:
          type: boolean
          description: "If true, the system will index the display value of string attributes instead of the canonical value for searching. \r\nThe canonical value will always be used for filtering. Does not apply for for non-string attributes."
        allowFilteringAndSortingInStorefront:
          type: boolean
          description: >-
            Indicates whether the attribute should be able to be used in
            filters, facets, and sorting on the public storefront.
          nullable: true
        indexValueWithCase:
          type: boolean
          description: "Indicates whether the attribute value is case sensative for filtering and faceting. This applies to Text Admin entered attributes. \r\nA null value means it is not case sensative"
          nullable: true
        customWeightInStorefrontSearch:
          type: boolean
          description: >-
            Indicates whether the attribute is indevidually stored as a
            tokenized field in search for custom term search weight
          nullable: true
      additionalProperties: false
      description: >-
        Attribute Search Settings. A container for all of the search and
        indexing settings of an Attribute
    AttributeTypeRule:
      type: object
      properties:
        attributeInputType:
          type: string
          description: AttributeInputType identifier
          nullable: true
        attributeDataType:
          type: string
          description: AttributeDataType identifier
          nullable: true
        attributeValueType:
          type: string
          description: AttributeValueType identifier
          nullable: true
        attributeUsageType:
          type: string
          description: AttributeUsageType identifier
          nullable: true
      additionalProperties: false
      description: Attribute Value Localized Resource
    AttributeTypeRuleCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeRule'
          nullable: true
      additionalProperties: false
      description: A collection of AttributeType rules
    CategoryAttributeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
          nullable: true
      additionalProperties: false
    CategoryLocalizedImage:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the image. System-supplied and read-only.
          format: int32
          nullable: true
        localeCode:
          type: string
          description: Language used for the image content.
          nullable: true
        imageLabel:
          type: string
          description: Image title that appears on the storefront.
          nullable: true
        altText:
          type: string
          description: >-
            Descriptive text associated with the image or video that appears on
            the storefront.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        videoUrl:
          type: string
          description: URL of a video associated with the category.
          nullable: true
        mediaType:
          type: string
          description: >-
            Type of media. Used by the client to determine how to render the
            image or video or what have you.
          nullable: true
        sequence:
          type: integer
          description: >-
            For categories with multiple images, the order in which this image
            appears on the storefront.
          format: int32
          nullable: true
      additionalProperties: false
      description: >-
        Contains the image label and alternate text for a category image or
        video in the language specified by LocalCode.
    CategoryLocalizedContent:
      type: object
      properties:
        categoryImages:
          type: array
          items:
            $ref: '#/components/schemas/CategoryLocalizedImage'
          description: List of images associated with the category.
          nullable: true
        name:
          type: string
          description: Name of the category.
          nullable: true
        description:
          type: string
          description: Description of the category to display on the storefront.
          nullable: true
        pageTitle:
          type: string
          description: Title that appears at the top of new pages.
          nullable: true
        localeCode:
          type: string
          description: >-
            Lanugage used for category content. Currently, only en_US is
            supported.
          nullable: true
        metaTagTitle:
          type: string
          description: >-
            Metadata title. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagDescription:
          type: string
          description: >-
            Metadata description. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagKeywords:
          type: string
          description: >-
            Metadata keywords. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        slug:
          type: string
          description: "Human-readable identifier that you can give to the category to create friendly URLs. For example, \r\ninstead of \"http: //example.com/products?category=2&id=25,\" the friendly URL can be \"http: //example.com/products/category/2/25.\""
          nullable: true
      additionalProperties: false
      description: >-
        Container for language-specific content to display on the storefront.
        You'll have a container for each supported language (LocaleCode). This
        enables you to display a category in multiple languages yet manage it as
        a single category internally.
    Expression:
      type: object
      properties:
        type:
          type: string
          description: Container or Predicate
          nullable: true
        logicalOperator:
          type: string
          description: And or Or (if Container with More than one Node)
          nullable: true
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Expression'
          nullable: true
        left:
          type: string
          description: The field target of a predicate
          nullable: true
        operator:
          type: string
          description: The operator of a predicate
          nullable: true
        right:
          description: The literal values of a predicate
          nullable: true
      additionalProperties: false
    DynamicExpression:
      type: object
      properties:
        text:
          type: string
          nullable: true
        tree:
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
      description: Category
    ExtensibleAttributeMetadataItem:
      required:
        - key
        - value
      type: object
      properties:
        key:
          maxLength: 50
          type: string
        value:
          type: string
      additionalProperties: false
    ExtensibleAttributeLocalizedContent:
      type: object
      properties:
        localeCode:
          maxLength: 8
          type: string
          nullable: true
        value:
          maxLength: 100
          type: string
          nullable: true
      additionalProperties: false
    ExtensibleAttributeValidation:
      type: object
      properties:
        regularExpression:
          maxLength: 200
          type: string
          nullable: true
        minStringLength:
          type: integer
          format: int32
          nullable: true
        maxStringLength:
          type: integer
          format: int32
          nullable: true
        minNumericValue:
          type: number
          format: double
          nullable: true
        maxNumericValue:
          type: number
          format: double
          nullable: true
        minDateTime:
          type: string
          format: date-time
          nullable: true
        maxDateTime:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ExtensibleAttributeValueLocalizedContent:
      required:
        - localeCode
        - value
      type: object
      properties:
        localeCode:
          type: string
        value:
          type: string
      additionalProperties: false
    ExtensibleAttributeVocabularyValue:
      required:
        - value
      type: object
      properties:
        value:
          maxLength: 50
          type: string
        sequence:
          type: integer
          format: int32
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        content:
          $ref: '#/components/schemas/ExtensibleAttributeValueLocalizedContent'
      additionalProperties: false
    ExtensibleAttribute:
      required:
        - attributeCode
        - displayGroup
        - valueType
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        adminName:
          maxLength: 50
          type: string
          nullable: true
        namespace:
          maxLength: 200
          type: string
          nullable: true
        attributeCode:
          maxLength: 50
          type: string
        inputType:
          type: string
          nullable: true
        valueType:
          type: string
        dataType:
          type: string
          nullable: true
        attributeMetadata:
          type: array
          items:
            $ref: '#/components/schemas/ExtensibleAttributeMetadataItem'
          nullable: true
        attributeFQN:
          type: string
          nullable: true
        content:
          $ref: '#/components/schemas/ExtensibleAttributeLocalizedContent'
        validation:
          $ref: '#/components/schemas/ExtensibleAttributeValidation'
        vocabularyValues:
          type: array
          items:
            $ref: '#/components/schemas/ExtensibleAttributeVocabularyValue'
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        isActive:
          type: boolean
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
          nullable: true
        isVisible:
          type: boolean
          nullable: true
        order:
          type: integer
          format: int32
          nullable: true
        displayGroup:
          type: string
        availableForOrderRouting:
          type: boolean
      additionalProperties: false
    ExtensibleAttributeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExtensibleAttribute'
          nullable: true
      additionalProperties: false
    CouponSet:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: >-
            Internal unique identifier of the couponset. System-supplied and
            read-only.
          format: int32
          nullable: true
        couponSetCode:
          maxLength: 32
          type: string
          description: "Unique tenant supplied identifier.\r\nUsed as the prefix for generated sets.\r\nRequired\r\nSystem generated if left null."
          nullable: true
        name:
          maxLength: 200
          type: string
          description: CouponSet Name
        couponCodeType:
          type: string
          description: "Determines if the coupon is a persisted list of codes (static) or a list based on generated specification\r\n(dynamic)."
          nullable: true
        status:
          type: string
          description: "CouponSet status which can be: Active, Expired,  Inactive\r\nSystem-supplied and read-only."
          nullable: true
        canBeDeleted:
          type: boolean
          description: "Signifies that the coupon has not been exported and can be updated\r\nReadOnly"
        maxRedemptionsPerUser:
          type: integer
          description: "Maximum number of times any single user can redeem any code.\r\nMust be null, >=1 or -1.\r\nDefaults to 1 on creation if null.\r\n-1 indicates unlimited."
          format: int32
          nullable: true
        maxRedemptionsPerCouponCode:
          type: integer
          description: "Maximum number of times any code can de used.\r\nMust be null, >=1 or -1.\r\nDefaults to 1 on creation if null.\r\n-1 indicates unlimited."
          format: int32
          nullable: true
        endDate:
          type: string
          description: Date and time that the coupon codes becomes expired
          format: date-time
          nullable: true
        startDate:
          type: string
          description: Date and time that the coupon codes becomes active
          format: date-time
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        setSize:
          type: integer
          description: "Sets the number of codes to generate for dynamic coupons\r\nRequired when CouponCodeType is \"Dynamic\""
          format: int32
          nullable: true
        couponCodeCount:
          type: integer
          description: "Count of associated couponCodes.\r\nMust use \"counts\" response group to get this value\r\nReadOnly"
          format: int32
          nullable: true
        redemptionCount:
          type: integer
          description: ReadOnly count of all redemptions for this coupon set.
          format: int32
          nullable: true
        assignedDiscountCount:
          type: integer
          description: "ReadOnly sum of all redemptions for this coupon.\r\nUse \"counts\" response group."
          format: int32
          nullable: true
      additionalProperties: false
      description: >-
        Represents a claimable item that allows a user to use one or more
        discounts.
    CouponSetCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CouponSet'
          nullable: true
      additionalProperties: false
      description: Paged collection of Mozu.ProductAdmin.Contracts.CouponSet
    Coupon:
      required:
        - couponCode
      type: object
      properties:
        couponSetId:
          type: integer
          description: ReadOnly system id for releated couponset.
          format: int32
        couponSetCode:
          type: string
          description: Link to associated coupon
          nullable: true
        couponCode:
          type: string
          description: The code the customer uses to claim this coupon
        canBeDeleted:
          type: boolean
        redemptionCount:
          type: integer
          description: "Total number of times this code has been redeemed. ReadOnly, calculated.\r\nOnly returned with response group includeCounts"
          format: int32
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Coupon in a coupon set.
    CouponCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
          nullable: true
      additionalProperties: false
    AssignedDiscount:
      required:
        - discountId
      type: object
      properties:
        couponSetCode:
          type: string
          description: ReadOnly, CouponSetCode copied from URI
          nullable: true
        couponSetId:
          type: integer
          description: ReadOnly, CouponSetId
          format: int32
        discountId:
          type: integer
          description: Discount Id for the associated discount
          format: int32
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
    CurrencyLocalization:
      type: object
      properties:
        currencyCode:
          type: string
          description: Currency Code
          nullable: true
        decimalPlaces:
          type: integer
          description: Number of decimal places to round to
          format: int32
          nullable: true
        roundingStrategy:
          type: integer
          description: The rounding strategy to use
          format: int32
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: A currency and some localization options
    CurrencyLocalizationCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyLocalization'
          nullable: true
      additionalProperties: false
      description: Non-pages collection of currency-localizations.
    CurrencyExchangeRateCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsCurrencyExchangeRate'
          nullable: true
      additionalProperties: false
      description: Non-pages collection of currency-exchange-rates.
    DiscountLocalizedContent:
      required:
        - name
      type: object
      properties:
        localeCode:
          maxLength: 8
          minLength: 0
          type: string
          description: >-
            Lanugage used for the discount in the current catalog. Defaults
            setting for the active catalog.
          nullable: true
        name:
          maxLength: 200
          minLength: 0
          type: string
          description: Name of the discount.
        friendlyDescription:
          type: string
          description: >-
            Promotional text or HTML that can be utilized as friendly content
            like "Buy this product now and get X!"
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: "Container for the language-specific name of the discount. You will have a container for each supported language\r\n(LocaleCode).\r\nThis enables you to display the discount name in multiple languages yet manage it as a single discount internally."
    CategoryDiscountCondition:
      type: object
      properties:
        categoryId:
          type: integer
          description: >-
            Unique identifier of the category to which the discount condition
            applies.
          format: int32
      additionalProperties: false
      description: Represents a product category and quantity constraint
    ProductDiscountCondition:
      type: object
      properties:
        productCode:
          type: string
          description: Product code of the product to discount.
          nullable: true
      additionalProperties: false
      description: Represents a product and quantity constraint
    ContinuityRecurrenceSettings:
      type: object
      properties:
        startOrdinal:
          type: integer
          description: Continuity ordinal to start discounting
          format: int32
          nullable: true
        interval:
          type: integer
          description: Interval until next discount applies
          format: int32
          nullable: true
        stopOrdinal:
          type: integer
          description: Continuity ordinal to stop discounting
          format: int32
          nullable: true
      additionalProperties: false
    TargetedCategory:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the category to which the discount applies.
          format: int32
          nullable: true
      additionalProperties: false
      description: >-
        Category to discount. When a discount applies to a category, all
        products in the category are discounted.
    TargetedProduct:
      type: object
      properties:
        productCode:
          type: string
          description: Product code of the product to discount.
          nullable: true
      additionalProperties: false
      description: Product to discount.
    TargetedShippingMethod:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 64
          minLength: 0
          type: string
          description: "Unique identifier of the shipping method as it appears in the SiteShippingMethod property of the Shipping Settings\r\nresource."
        name:
          type: string
          description: >-
            Name of the shipping method as it appears in
            SiteShippingMethodLocalizedContent of the Shipping Settings
            resource.
          nullable: true
      additionalProperties: false
      description: "Shipping method that is eligible for free shipping. This is the shipping method that is defined with the Shipping\r\nSettings resource."
    TargetedShippingZone:
      required:
        - zone
      type: object
      properties:
        zone:
          maxLength: 200
          minLength: 0
          type: string
          description: "Indicates the shipping zone that this discount is valid for.  If zone is provided the\r\nmethod selected must be valid for the zone and both populated in the order for the discount\r\nto be valid."
      additionalProperties: false
      description: "Shipping method that is eligible for free shipping. This is the shipping method that is defined with the Shipping\r\nSettings resource."
    ThresholdMessageLocalizedContent:
      required:
        - messageTemplate
      type: object
      properties:
        localeCode:
          maxLength: 8
          minLength: 0
          type: string
          description: >-
            Language used for the discount in the current catalog. Defaults
            setting for the active catalog.
          nullable: true
        messageTemplate:
          type: string
          description: Locale-based contents of the Threshold Message.
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
    DiscountCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsDiscount'
          nullable: true
      additionalProperties: false
      description: Collection of discounts returned as a whole. A collection is not paged.
    DiscountTag:
      type: object
      properties:
        discountId:
          type: integer
          format: int32
        tagCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    DiscountTagCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/DiscountTag'
          nullable: true
      additionalProperties: false
      description: Collection of discounts returned as a whole. A collection is not paged.
    TagCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsTag'
          nullable: true
      additionalProperties: false
      description: Collection of Tags returned as a whole. A collection is not paged.
    StackingConfiguration:
      type: object
      properties:
        stackingEnabled:
          type: boolean
          description: >-
            Indicates if discount stacking is enabled for discounts in this
            catalog
        productOrderLayers:
          type: integer
          description: Number of Product Order discount layers
          format: int32
        productLineItemLayers:
          type: integer
          description: Number of Product Line Item discount layers
          format: int32
      additionalProperties: false
    DiscountSettings:
      type: object
      properties:
        stackingConfiguration:
          $ref: '#/components/schemas/StackingConfiguration'
        usePostDiscountedOrderValue:
          type: boolean
          description: >-
            Use the pre or post line item discounts order total to evaluate the
            order minimum constraint
          nullable: true
        doNotApplyToHandlingFees:
          type: boolean
          description: Prevents discounts from applying to handling fees
          nullable: true
      additionalProperties: false
      description: Tenant level discount settings
    FacetSource:
      type: object
      properties:
        id:
          type: string
          description: Name of field, or FQN of attribute
          nullable: true
        type:
          type: string
          description: "The type of source field used by the facet. Allowable values are: Element, Attribute. \r\nMust be a valid value for DataType defined in FacetFieldTypeConst."
          nullable: true
        name:
          type: string
          description: Read-only system-generated label for the source field.
          nullable: true
        dataType:
          maxLength: 20
          type: string
          description: >-
            Read-only system-generated DataType of the Attribute or Element
            source field. Will be valid value for DataType defined in
            DataTypeConst.
          nullable: true
        allowsRangeQuery:
          type: boolean
          description: >-
            Read-only system-generated indicator of whether the source field
            supports RangeQuery type facets.
      additionalProperties: false
    FacetValidity:
      type: object
      properties:
        isValid:
          type: boolean
        reasonCode:
          type: string
          nullable: true
      additionalProperties: false
    FacetRangeQuery:
      type: object
      properties:
        rangeValueStart:
          nullable: true
        rangeValueEnd:
          nullable: true
      additionalProperties: false
    FacetCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsFacet'
          nullable: true
      additionalProperties: false
    FacetSet:
      type: object
      properties:
        configured:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsFacet'
          description: Facets that are configured
          nullable: true
        available:
          type: array
          items:
            $ref: '#/components/schemas/FacetSource'
          description: Facets that are not configured, but COULD BE!
          nullable: true
      additionalProperties: false
    MasterCatalogCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsMasterCatalog'
          nullable: true
      additionalProperties: false
      description: Collection of MasterCatalogs
    PriceListCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsPriceList'
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    PriceListEntryPrice:
      type: object
      properties:
        minQty:
          type: integer
          format: int32
        listPriceMode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
          nullable: true
        salePriceMode:
          type: string
          nullable: true
        salePrice:
          type: number
          format: double
          nullable: true
        subscriptionPriceMode:
          type: string
          nullable: true
        subscriptionPrice:
          type: number
          format: double
          nullable: true
        subscriptionSalePriceMode:
          type: string
          nullable: true
        subscriptionSalePrice:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    PriceListEntryExtra:
      required:
        - attributeFQN
      type: object
      properties:
        attributeFQN:
          type: string
          description: "AttributeFQN of the extra\r\nReadOnly"
        value:
          description: "The value stored with the extra\r\nReadOnly"
          nullable: true
        price:
          type: number
          description: PriceList price for the extra
          format: double
        attributeCode:
          type: string
          description: "AttributeCode.\r\nReadOnly"
          nullable: true
        displayValue:
          type: string
          description: "Value to display.  Currently only vaild when Value is a string type.\r\nReadOnly"
          nullable: true
      additionalProperties: false
      description: Extra for an entry on a price list
    PriceListEntry:
      required:
        - currencyCode
        - productCode
      type: object
      properties:
        priceListCode:
          type: string
          description: "External unique identifier of the PriceList. Must be unique an only contain url sanitized characters. Max length is\r\n50"
          nullable: true
        priceListEntrySequence:
          type: integer
          format: int32
        productCode:
          type: string
        productName:
          type: string
          nullable: true
        isVariation:
          type: boolean
        options:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductOption'
          nullable: true
        currencyCode:
          type: string
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        priceListEntryMode:
          type: string
          nullable: true
        priceListEntryTypeCode:
          type: string
          nullable: true
        discountsRestrictedMode:
          type: string
          nullable: true
        discountsRestricted:
          type: boolean
          nullable: true
        discountsRestrictedStartDate:
          type: string
          format: date-time
          nullable: true
        discountsRestrictedEndDate:
          type: string
          format: date-time
          nullable: true
        msrpMode:
          type: string
          nullable: true
        msrp:
          type: number
          format: double
          nullable: true
        mapMode:
          type: string
          nullable: true
        map:
          type: number
          format: double
          nullable: true
        mapStartDate:
          type: string
          format: date-time
          nullable: true
        mapEndDate:
          type: string
          format: date-time
          nullable: true
        costMode:
          type: string
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        priceEntries:
          type: array
          items:
            $ref: '#/components/schemas/PriceListEntryPrice'
          nullable: true
        extraEntries:
          type: array
          items:
            $ref: '#/components/schemas/PriceListEntryExtra'
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Category
    PriceListEntryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/PriceListEntry'
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    ProductLocalizedImage:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the image. System-supplied and read-only.
          format: int32
          nullable: true
        localeCode:
          type: string
          description: Language used for the image content.
          nullable: true
        imageLabel:
          type: string
          description: Image title that appears on the storefront.
          nullable: true
        altText:
          type: string
          description: >-
            Descriptive text associated with the image or video that appears on
            the storefront.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        videoUrl:
          type: string
          description: URL of a video associated with the product.
          nullable: true
        mediaType:
          type: string
          description: >-
            Type of media. Used by the client to determine how to render the
            image or video or what have you.
          nullable: true
        sequence:
          type: integer
          description: >-
            For products with multiple images, the order in which this image
            appears on the storefront.
          format: int32
          nullable: true
        productImageGroupId:
          type: string
          description: Image group to which this image belongs.  Default is null.
          nullable: true
      additionalProperties: false
      description: >-
        Contains the image label and alternate text for a product image or video
        in the language specified by LocalCode.
    ProductLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description: >-
            Lanugage used for product content. Currently, only en_US is
            supported.
          nullable: true
        productName:
          type: string
          description: Name of the product.
          nullable: true
        productFullDescription:
          type: string
          description: >-
            Long description of the product typically used for a product details
            page.
          nullable: true
        productShortDescription:
          type: string
          description: >-
            Brief description of the product typically used when the product is
            displayed in a list or search results.
          nullable: true
        productImages:
          type: array
          items:
            $ref: '#/components/schemas/ProductLocalizedImage'
          description: List of images associated with the product.
          nullable: true
      additionalProperties: false
      description: >-
        Container for language-specific content to display on the storefront.
        You'll have a container for each supported language (LocaleCode). This
        enables you to display a product in multiple languages yet manage it as
        a single product internally.
    ProductLocalizedSEOContent:
      type: object
      properties:
        localeCode:
          type: string
          description: >-
            Lanugage used for product content. Currently, only en_US is
            supported.
          nullable: true
        metaTagTitle:
          type: string
          description: >-
            Metadata title. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagDescription:
          type: string
          description: >-
            Metadata description. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagKeywords:
          type: string
          description: >-
            Metadata keywords. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        titleTagTitle:
          type: string
          description: >-
            Used to customize the HTML title tag within the head section of the
            product details page
          nullable: true
        seoFriendlyUrl:
          type: string
          description: "Human-readable identifier that you can give to the product to create friendly URLs. For example, \r\ninstead of \"http: //example.com/products?category=2&id=25,\" the friendly URL can be \"http: //example.com/products/category/2/25.\""
          nullable: true
      additionalProperties: false
      description: >-
        Container for language-specific content to display on the storefront.
        You'll have a container for each supported language (LocaleCode). This
        enables you to display a product in multiple languages yet manage it as
        a single product internally.
    ProductCategory:
      type: object
      properties:
        categoryId:
          type: integer
          description: Unique identifier of the category. System-supplied and read-only.
          format: int32
      additionalProperties: false
      description: Categories to which the product belongs.
    ProductInCatalogInfo:
      type: object
      properties:
        catalogId:
          type: integer
          description: >-
            The CatalogId of the catalog that the product is associated with
            (The catalog must a valid catalog within the MasterCatalog that the
            product belongs to)
          format: int32
        isActive:
          type: boolean
          description: >-
            If true, the product is marked as available for sale in the catalog.
            Setting a product to IsActive = false will prevent it from being
            shown on the customer facing storefront.
          nullable: true
        isContentOverridden:
          type: boolean
          description: >-
            If true, the content for this product is overridden in the catalog.
            If false, the MasterCatalog level content will be used for the
            product.
          nullable: true
        content:
          $ref: '#/components/schemas/ProductLocalizedContent'
        isPriceOverridden:
          type: boolean
          description: >-
            If true, the price for this product is overridden in the catalog. If
            false, the MasterCatalog level price will be used for the product.
          nullable: true
        price:
          $ref: '#/components/schemas/CatalogAdminsProductPrice'
        isSeoContentOverridden:
          type: boolean
          description: >-
            If true, the SEO content for this product is overridden in the
            catalog. If false, the MasterCatalog level SEO content will be used
            for the product.
          nullable: true
        seoContent:
          $ref: '#/components/schemas/ProductLocalizedSEOContent'
        productCategories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          description: Categories to which the product belongs for this catalog.
          nullable: true
        primaryProductCategory:
          $ref: '#/components/schemas/ProductCategory'
        dateFirstAvailableInCatalog:
          type: string
          description: >-
            Date this product was first Available for sale in the catalog. This
            is utilized in expressions that reference DaysInCatloag.
          format: date-time
          nullable: true
        activeDateRange:
          $ref: '#/components/schemas/CatalogAdminsActiveDateRange'
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: >-
        Use the Products resource to create and manage products for your store.
        You can create products with options that a shopper configures (such as
        a T-shirt color and size). The system can manage inventory for all
        combinations of your product options, and can calculate tax and shipping
        costs.
    ProductExtraValueDeltaPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Which currency to use.
          nullable: true
        deltaPrice:
          type: number
          description: Amount of money saved when discounts are applied.
          format: double
      additionalProperties: false
      description: >-
        How much a product option costs above the cost of the base product, if
        at all.
    ProductExtraValue:
      type: object
      properties:
        value:
          nullable: true
        deltaPrice:
          $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
        localizedDeltaPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductExtraValueDeltaPrice'
          nullable: true
        deltaWeight:
          type: number
          format: double
          nullable: true
        isDefaulted:
          type: boolean
          nullable: true
        quantity:
          type: integer
          format: int32
          nullable: true
        attributeVocabularyValueDetail:
          $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      additionalProperties: false
      description: >-
        A value of a product option for this product. For example, a computer
        product may have an option called "Memory" that can have the values
        "6GB,"8GB," and "12GB."
    ProductExtra:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isMultiSelect:
          type: boolean
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/ProductExtraValue'
          nullable: true
      additionalProperties: false
      description: "Product options for configurable or stand-alone products. A configurable option is one that the shopper chooses when ordering, for example, \r\nthe color of a T-shirt. A stand-alone option is independent of the product and can be added to the product order. For example, a monogram."
    ProductPropertyValueLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description: Language used for the string attribute value.
          nullable: true
        stringValue:
          type: string
          description: Localized Value in the language of the locale code
          nullable: true
      additionalProperties: false
      description: Attribute Value Localized Resource
    ProductSupplierInfo:
      type: object
      properties:
        mfgPartNumber:
          type: string
          nullable: true
        distPartNumber:
          type: string
          nullable: true
        cost:
          $ref: '#/components/schemas/CatalogAdminsProductCost'
      additionalProperties: false
      description: Supplier info for the product
    ProductVariationOption:
      type: object
      properties:
        attributeFQN:
          type: string
          description: >-
            Unique identifier of the product variation option. System-supplied
            and read-only.
          nullable: true
        value:
          description: >-
            Name of the product variation option used on the admin side
            independent of how it appears on the storefront. For example, the
            internal "SZ" attribute might appear as "size" on the storefront.
          nullable: true
        content:
          $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
      additionalProperties: false
      description: >-
        An option for a product variation. For example, a T-shirt with size and
        color configurable options, might have a product variation option of
        "size" or "color."
    ProductPublishingInfo:
      type: object
      properties:
        publishedState:
          type: string
          nullable: true
        lastPublishedBy:
          type: string
          nullable: true
        lastPublishedDate:
          type: string
          format: date-time
          nullable: true
        publishSetCode:
          type: string
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    ProductCollectionProduct:
      type: object
      properties:
        memberKey:
          $ref: '#/components/schemas/CatalogAdminsProductCollectionMemberKey'
        productUsage:
          type: string
          description: >-
            ReadOnly Indicates the usage type of this product. Must be one of
            the values in ProductUsageConst.
          nullable: true
        content:
          $ref: '#/components/schemas/ProductLocalizedContent'
        price:
          $ref: '#/components/schemas/CatalogAdminsProductPrice'
      additionalProperties: false
      description: List of products that belong to a product collection product.
    SlicingSettings:
      type: object
      properties:
        slicingAttributeFqn:
          type: string
          description: Product option FQN to create slices on
          nullable: true
      additionalProperties: false
      description: Container class for Slicing Settings
    ProductCodeRename:
      type: object
      properties:
        existingProductCode:
          type: string
          description: The existing ProductCode that should be renamed
          nullable: true
        newProductCode:
          type: string
          description: The new ProductCode that will be the result of the rename
          nullable: true
      additionalProperties: false
      description: A tuple used to rename the productCode of a product
    ProductVariationDeltaPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Which currency is in use.
          nullable: true
        value:
          type: number
          description: >-
            How much more the variation costs above the cost of the base
            product.
          format: double
          nullable: true
        msrp:
          type: number
          description: Manufacturer Suggested Retail Price.
          format: double
          nullable: true
        creditValue:
          type: number
          description: Credit amt of the product
          format: double
          nullable: true
      additionalProperties: false
      description: >-
        How much more a product variation costs above the cost of the base
        product. If the price of the base product changes, this price is
        adjusted automatically.
    ProductVariationFixedPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Which currency is in use.
          nullable: true
        listPrice:
          type: number
          description: Variation price for fixed pricing
          format: double
          nullable: true
        salePrice:
          type: number
          description: Variation sale price whne fixed pricing
          format: double
          nullable: true
        msrp:
          type: number
          description: Manufacturer Suggested Retail Price.
          format: double
          nullable: true
        creditValue:
          type: number
          description: Credit amt of the product
          format: double
          nullable: true
      additionalProperties: false
    ProductVariationProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductPropertyValue'
          nullable: true
      additionalProperties: false
      description: ''
    ProductVariation:
      type: object
      properties:
        isActive:
          type: boolean
          description: >-
            If true, the merchant accepts the variation generated from the
            configurable options as a product offering. If IsActive is false
            then the product variation is not for sale--either because it was
            never a product offering or it was permanently dropped. IsActive is
            not intended for temporary unavailability. Default is false.
          nullable: true
        isOrphan:
          type: boolean
          description: >-
            If true, the variation is no longer possible. The system sets
            IsOrphan to true when the merchant has changed something to make
            this variation impossible. For example, if the merchant stopped
            selling all "small" shirts, all product variations with the "small"
            option are set to IsOrphan. System-supplied and read-only.
          nullable: true
        variationExists:
          type: boolean
          description: >-
            If true, the product variation exists. When the merchant sets
            IsActive to true, the system sets VariationExists to true and
            creates a Variation Key as a unique identifier for this variation.
            System-supplied and read-only.
          nullable: true
        variationkey:
          type: string
          description: >-
            Unique identifier for a single variation ("small" + "red" +
            "short-sleeved"). System-supplied and read-only.
          nullable: true
        variationProductCode:
          type: string
          description: >-
            Descriptive code to refer to a single variation. Typically this is a
            sequence appended to the base ProduceCode. A merchant can create
            this code to easily recognize a product variation. By default, the
            system creates this code by appending a number to the base product.
            After the merchant supplies this code, it becomes read-only.
          nullable: true
        deltaPrice:
          $ref: '#/components/schemas/ProductVariationDeltaPrice'
        localizedDeltaPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariationDeltaPrice'
          description: "How much more the variation costs above the cost of the base product. If the price of the base product changes, this price is adjusted accordingly.\r\nThis collection allows for multiple currencies."
          nullable: true
        fixedPrice:
          $ref: '#/components/schemas/ProductVariationFixedPrice'
        localizedFixedPrice:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariationFixedPrice'
          description: "Price of the variation using fixed per currency\r\nThis collection allows for multiple currencies."
          nullable: true
        deltaWeight:
          type: number
          description: Weight of the product with this variation.
          format: double
          nullable: true
        fixedWeight:
          type: number
          description: Fixed weight of the product with this variation.
          format: double
          nullable: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariationOption'
          description: >-
            List of values for this product variation: such as "small, "red..
            these are read only here as the variationKey defines the values "
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariationProperty'
          description: List of properties specific to this variation
          nullable: true
        upc:
          type: string
          description: Price Lookup Unit code for the product
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        supplierInfo:
          $ref: '#/components/schemas/ProductSupplierInfo'
      additionalProperties: false
      description: >-
        The ProductVariation resource helps merchants manage their products with
        configurable options. Using this resource, the system creates a matrix
        of all possible combinations of the product options and the merchant
        confirms which variations match products for sale. For example, a
        T-shirt with three color and three size options has nine possible
        product variations. The system keeps track of inventory for each
        variation.
    ProductVariationPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariation'
          nullable: true
      additionalProperties: false
      description: >-
        Collection of product variations where the variations are returned in a
        series of pages.
    ProductVariationCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariation'
          nullable: true
      additionalProperties: false
      description: >-
        Collection of product variations returned as a whole. A collection is
        not paged.
    ProductTypeChangeRequest:
      type: object
      properties:
        targetProductTypeId:
          type: integer
          description: The target product type id to move the product to.
          format: int32
        ignoreDataLoss:
          type: boolean
          description: "When set to true any attributes or values that were set on the product that are\r\nnot defined the target product type will be lost.  When false, the process will stop\r\nwithout making updates if there are any conditions that would result in dataloss.\r\nValidation output will be returned. Defaults to false."
        testMode:
          type: boolean
          description: "When set to true no updates will be made but the validation will return any\r\nwarnings or failures. Defaults to false."
          nullable: true
        shouldFailFast:
          type: boolean
          description: >-
            When true the validation will stop on the first error.  Defaults to
            run all validation.
          nullable: true
      additionalProperties: false
    ProductTypeChangeValidationResult:
      type: object
      properties:
        attributeFqn:
          type: string
          nullable: true
        code:
          type: integer
          format: int32
        severity:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductTypeChangeResponse:
      type: object
      properties:
        productCode:
          type: string
          nullable: true
        initialProductTypeId:
          type: integer
          format: int32
        targetProductTypeId:
          type: integer
          format: int32
        status:
          type: string
          nullable: true
        validationResults:
          type: array
          items:
            $ref: '#/components/schemas/ProductTypeChangeValidationResult'
          nullable: true
      additionalProperties: false
    ProductPropertyPatchOperation:
      type: object
      properties:
        value:
          nullable: true
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
      additionalProperties: false
    ProductPropertyPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ProductPropertyPatchOperation'
          nullable: true
      additionalProperties: false
    ProductPropertyPatchAction:
      type: object
      properties:
        productCode:
          type: string
          description: Product code of the target product
          nullable: true
        attributeFqn:
          type: string
          description: AttributeFQN
          nullable: true
        patches:
          $ref: '#/components/schemas/ProductPropertyPatchDocument'
        saveAndPublish:
          type: boolean
          description: "If true and publishing is enabled, actions are applied to a draft version of the product and then the draft is published otherwise\r\nchanges are saved to the live product."
      additionalProperties: false
      description: >-
        List of JsonPatch operations to be applied to a
        Mozu.ProductAdmin.Contracts.ProductProperty
    QuickEditProductPropertyActions:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ProductPropertyPatchAction'
          description: >-
            List of Mozu.ProductAdmin.Contracts.ProductPropertyPatchAction
            actions to perform
          nullable: true
      additionalProperties: false
      description: "List of Mozu.ProductAdmin.Contracts.ProductPropertyPatchActions to be applied to a list of\r\nMozu.ProductAdmin.Contracts.ProductPropertys."
    QuickEditResult:
      type: object
      properties:
        resourceId:
          type: string
          description: The unique resouce identifier
          nullable: true
        success:
          type: boolean
          description: true if the patch succeeded.
        message:
          type: string
          description: Error message if any.
          nullable: true
      additionalProperties: false
      description: Individual update action result
    QuickEditResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuickEditResult'
          description: List of Mozu.ProductAdmin.Contracts.QuickEditResult
          nullable: true
      additionalProperties: false
      description: Aggregates the individual results of update actions per product update
    ProductInCatalogInfoPatchOperation:
      type: object
      properties:
        value:
          nullable: true
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
      additionalProperties: false
    ProductInCatalogInfoPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCatalogInfoPatchOperation'
          nullable: true
      additionalProperties: false
    ProductInCatalogPatchAction:
      type: object
      properties:
        productCode:
          type: string
          description: Product code of the target product
          nullable: true
        catalogId:
          type: integer
          description: CatalogId
          format: int32
        patches:
          $ref: '#/components/schemas/ProductInCatalogInfoPatchDocument'
        saveAndPublish:
          type: boolean
          description: "If true and publishing is enabled, actions are applied to a draft version of the product and then the draft is published otherwise\r\nchanges are saved to the live product."
      additionalProperties: false
      description: >-
        List of JsonPatch operations to be applied to a
        Mozu.ProductAdmin.Contracts.ProductInCatalogInfo
    QuickEditProductInCatalogActions:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCatalogPatchAction'
          description: >-
            List of Mozu.ProductAdmin.Contracts.ProductPropertyPatchAction
            actions to perform
          nullable: true
      additionalProperties: false
      description: >-
        List of Mozu.ProductAdmin.Contracts.ProductInCatalogPatchActions to be
        applied
    ProductPatchOperation:
      type: object
      properties:
        value:
          nullable: true
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
      additionalProperties: false
    ProductPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ProductPatchOperation'
          nullable: true
      additionalProperties: false
    ProductPatchAction:
      type: object
      properties:
        productCode:
          type: string
          description: Target product code
          nullable: true
        patches:
          $ref: '#/components/schemas/ProductPatchDocument'
        saveAndPublish:
          type: boolean
          description: "If true and publishing is enabled, actions are applied to a draft version of the product and then the draft is published otherwise\r\nchanges are saved to the live product."
      additionalProperties: false
      description: >-
        List of JsonPatch operations to be applied to a
        Mozu.ProductAdmin.Contracts.Product
    QuickEditProductActions:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ProductPatchAction'
          description: >-
            List of Mozu.ProductAdmin.Contracts.ProductPatchAction actions to
            perform
          nullable: true
      additionalProperties: false
      description: >-
        List of Mozu.ProductAdmin.Contracts.ProductPatchActions to be applied to
        a list of Mozu.ProductAdmin.Contracts.Products.
    ProductSortExpression:
      required:
        - field
      type: object
      properties:
        field:
          type: string
          description: "The name of the field to sort on.\r\nMust be a known sort field or sortable attribute"
        direction:
          type: string
          description: ASC or DESC
          nullable: true
      additionalProperties: false
    ProductSortOverride:
      required:
        - productCode
      type: object
      properties:
        productCode:
          type: string
          description: The product code of the product being overridden
        sliceValue:
          type: string
          description: The slicing value of the product being overridden
          nullable: true
        position:
          type: integer
          description: "Indicates the relative position of the product to other overridden products.\r\nPosition is absolute if IsPinned is true.\r\nNot applicable to buried products. Buried products will be given a default\r\nposition of -1"
          format: int32
          nullable: true
        isPinned:
          type: boolean
          description: "Flag to indicate that the product is pinned at the specified position.\r\nNot applicable to buried products"
          nullable: true
      additionalProperties: false
      description: "Represents a product that is positioned out of its normal sort position.\r\nIt can be boosted to the top of the list, positioned exactly or buried at the bottom"
    ProductSortDefinition:
      required:
        - name
        - sortExpressions
        - startDate
      type: object
      properties:
        productSortDefinitionId:
          type: integer
          description: System or user provided ID for the ProductSortDefinition
          format: int32
          nullable: true
        categoryId:
          type: integer
          description: ''
          format: int32
          nullable: true
        name:
          type: string
          description: Short Name for the sort definition. Required.
        startDate:
          type: string
          description: The Start Date when the sort definition becomes active
          format: date-time
        endDate:
          type: string
          description: Optional end date for a product sort definition
          format: date-time
          nullable: true
        sortExpressions:
          type: array
          items:
            $ref: '#/components/schemas/ProductSortExpression'
          description: "Sort expression to apply\r\nMax two expressions"
        boosted:
          type: array
          items:
            $ref: '#/components/schemas/ProductSortOverride'
          description: List of products being positioned
          nullable: true
        buried:
          type: array
          items:
            $ref: '#/components/schemas/ProductSortOverride'
          description: List of products being positioned
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: "Defines a default sort for a list of products and allows some products to be\r\nboosted to the top or pinned ot a specific position, or buried at the bottom of the\r\nlist.  Only 10 items can be boosted or pinned and up to"
    ProductSortDefinitionPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductSortDefinition'
          nullable: true
      additionalProperties: false
      description: >-
        Collection of product sort definitions where product sort definitions
        are returned in a series of pages.
    AttributeInProductTypeDisplayInfo:
      type: object
      properties:
        displayIntention:
          type: string
          description: >-
            Defines the intended display of this Attribute in the storeFront
            (ex. DropDown, ImagePicker, RadioButtons....)
          nullable: true
      additionalProperties: false
    AttributeVocabularyValueInProductType:
      type: object
      properties:
        value:
          description: >-
            The actual value of the attribute vocabulary. This must be an
            existing value defined in the attribute vocabulary
          nullable: true
        order:
          type: integer
          description: >-
            Used to order the display of the attribute values in the
            storefront....
          format: int32
          nullable: true
        displayInfo:
          $ref: >-
            #/components/schemas/CatalogAdminsAttributeVocabularyValueDisplayInfo
        vocabularyValueDetail:
          $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      additionalProperties: false
    AttributeInProductType:
      type: object
      properties:
        attributeFQN:
          type: string
          description: >-
            Unique identifier of the Attribute. Must be an attribute fully
            qualilfied name that already exists. If no namespace is specified
            Tenant is assumed
          nullable: true
        isInheritedFromBaseType:
          type: boolean
          description: >-
            If True, the attribute is part of the base product type and can only
            have order modified.
          nullable: true
        order:
          type: integer
          description: Used to order the display of the attributes within a section
          format: int32
          nullable: true
        isRequiredByAdmin:
          type: boolean
          description: >-
            If True, the admin must include this attribute in products of this
            productType
          nullable: true
        isHiddenProperty:
          type: boolean
          description: >-
            If True, the property is hidden in the storefront. This field only
            applies to properties.
          nullable: true
        isAdminOnlyProperty:
          type: boolean
          description: >-
            If true, this property is not available on the storefront. If false,
            this property will be available on storefront. The IsHiddenProperty
            hides the property from the customer, but is still available from
            the API.
          nullable: true
        isProductDetailsOnlyProperty:
          type: boolean
          description: >-
            If True this property will not be returned  storefront product
            listings (Search,GetProduct) it will still be returned on
            GetProduct, ValidateProduct...)
          nullable: true
        isMultiValueProperty:
          type: boolean
          description: >-
            If True, the property can have multiple values selected on the
            product. Only applies to PredefinedVocabulary properties.
          nullable: true
        displayInfo:
          $ref: '#/components/schemas/AttributeInProductTypeDisplayInfo'
        vocabularyValues:
          type: array
          items:
            $ref: '#/components/schemas/AttributeVocabularyValueInProductType'
          description: The collection of vocabulary values included in this product type.
          nullable: true
        attributeDetail:
          $ref: '#/components/schemas/CatalogAdminsAttribute'
      additionalProperties: false
    ProductType:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the ProductType. System-supplied and read-only.
          format: int32
          nullable: true
        name:
          type: string
          description: Name of the productType
          nullable: true
        masterCatalogId:
          type: integer
          description: >-
            Indentifier of the Master Catalog that this ProductType is a member
            of. System-supplied and read-only.
          format: int32
          nullable: true
        isBaseProductType:
          type: boolean
          description: >-
            System supplied and read only. There is only one BaseProductType per
            MasterCatalog.
        productCount:
          type: integer
          description: >-
            Indicates the number of products currently using this Product Type.
            System-supplied and read-only.
          format: int32
          nullable: true
        productUsages:
          type: array
          items:
            type: string
          description: List of ProductUsages supported by the ProductType.
          nullable: true
        goodsType:
          type: string
          description: The TYpe of Goods of this product
          nullable: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/AttributeInProductType'
          description: Collection of the Attributes that are Options in this productType
          nullable: true
        extras:
          type: array
          items:
            $ref: '#/components/schemas/AttributeInProductType'
          description: Collection of the Attributes that are Extras in this productType
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/AttributeInProductType'
          description: Collection of the Attributes that are Properties in this productType
          nullable: true
        variantProperties:
          type: array
          items:
            $ref: '#/components/schemas/AttributeInProductType'
          description: >-
            Collection of the Attributes that are VariantProperties in this
            productType
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
    ProductTypeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
          nullable: true
      additionalProperties: false
      description: Collection of attributes.
    PublishingScope:
      type: object
      properties:
        allPending:
          type: boolean
          description: True = scope to all pending products
          nullable: true
        productCodes:
          type: array
          items:
            type: string
          description: List of specific productCodes to scope publish operation against
          nullable: true
        publishSetCode:
          type: string
          description: The Publish Set to publish
          nullable: true
      additionalProperties: false
    PublishSet:
      type: object
      properties:
        code:
          type: string
          description: The PublishSet unique identifier
          nullable: true
        productCount:
          type: integer
          description: Number of product drafts that are included in the publish set
          format: int32
        productCodes:
          type: array
          items:
            type: string
          description: List of specific product codes that are included in the publish set
          nullable: true
      additionalProperties: false
    PublishSetCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/PublishSet'
          nullable: true
      additionalProperties: false
      description: Non-paged collection of PublishSets.
    SynonymDefinition:
      type: object
      properties:
        synonymId:
          type: integer
          description: The unique identifier for the synonym definition
          format: int32
          nullable: true
        key:
          type: string
          description: If key is defined then map is directed
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: >-
            List of synonyms.  If no key is defined the matches are
            bidirectional
          nullable: true
      additionalProperties: false
    SynonymDefinitionCollection:
      type: object
      properties:
        tenantId:
          type: integer
          description: Read-only TenantId
          format: int32
        siteId:
          type: integer
          description: Read-only  Site Id
          format: int32
        localeCode:
          type: string
          description: The locale code to which this definition applies
          nullable: true
        synonymDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/SynonymDefinition'
          description: List of mappings for this definition
          nullable: true
      additionalProperties: false
      description: >-
        Non-paged collection of all synonyms for a Site-Locale. Used for bulk
        operations
    SynonymDefinitionPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/SynonymDefinition'
          nullable: true
      additionalProperties: false
      description: Paged collection of synonyms for a Site-Locale.
    SearchTuningRuleFilter:
      type: object
      properties:
        field:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    SearchTuningRule:
      type: object
      properties:
        siteId:
          type: integer
          format: int32
        searchTuningRuleCode:
          type: string
          nullable: true
        searchTuningRuleName:
          type: string
          nullable: true
        searchTuningRuleDescription:
          type: string
          nullable: true
        keywords:
          type: array
          items:
            type: string
          nullable: true
        filters:
          type: array
          items:
            $ref: '#/components/schemas/SearchTuningRuleFilter'
          nullable: true
        active:
          type: boolean
        isDefault:
          type: boolean
        activeStartDate:
          type: string
          format: date-time
          nullable: true
        activeEndDate:
          type: string
          format: date-time
          nullable: true
        boostedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        blockedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
    SearchTuningRuleCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchTuningRule'
          nullable: true
      additionalProperties: false
    SearchTuningRuleSortFields:
      type: object
      properties:
        sortFields:
          type: array
          items:
            type: string
          nullable: true
        inclusionExclusionType:
          type: string
          nullable: true
      additionalProperties: false
    FieldWeight:
      type: object
      properties:
        searchFieldName:
          type: string
          description: field in the index to target
          nullable: true
        weight:
          type: integer
          description: weight to apply to boost field
          format: int32
      additionalProperties: false
    SuggestSettings:
      type: object
      properties:
        fieldWeights:
          type: array
          items:
            $ref: '#/components/schemas/FieldWeight'
          nullable: true
        personalizationExperience:
          type: string
          nullable: true
        personalizationFactor:
          type: number
          format: double
          nullable: true
        returnFields:
          type: array
          items:
            type: string
          nullable: true
        crossFieldAdditiveScoreFactor:
          type: number
          format: double
      additionalProperties: false
    BoostValue:
      type: object
      properties:
        value:
          type: string
          nullable: true
        boost:
          type: integer
          format: int32
        operator:
          type: string
          nullable: true
      additionalProperties: false
    BoostField:
      type: object
      properties:
        fieldName:
          type: string
          nullable: true
        valueExpressions:
          type: array
          items:
            $ref: '#/components/schemas/BoostValue'
          nullable: true
      additionalProperties: false
    FieldValueBoost:
      type: object
      properties:
        boostType:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/BoostField'
          nullable: true
      additionalProperties: false
    ListingSettings:
      type: object
      properties:
        customBoosts:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: '#/components/schemas/FieldValueBoost'
        personalizationExperience:
          type: string
          nullable: true
        personalizationFactor:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    ProductSuggestSettings:
      type: object
      allOf:
        - $ref: '#/components/schemas/SuggestSettings'
      properties:
        customBoosts:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: '#/components/schemas/FieldValueBoost'
        searchChildProductsByDefault:
          type: boolean
      additionalProperties: false
    SearchRedirect:
      type: object
      properties:
        redirectId:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        statusId:
          type: integer
          format: int32
          nullable: true
        tenantId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
          nullable: true
        searchTermList:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Redirects based on what is entered in site search
    SearchRedirectCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchRedirect'
          nullable: true
      additionalProperties: false
      description: List of search redirects
    SiteSearchFieldWeight:
      type: object
      allOf:
        - $ref: '#/components/schemas/FieldWeight'
      properties:
        phraseWeight:
          type: integer
          description: weight to apply in phrase boosting
          format: int32
      additionalProperties: false
      description: A custom field and weight value for search relevancy
    TypoTolerance:
      type: object
      properties:
        factor:
          type: integer
          description: Typo tolerance distance for fuzzy match. Must be Integer 1-10.
          format: int32
        distance:
          type: integer
          description: Typo tolerance distance for fuzzy match. Must be Integer 1 or 2.
          format: int32
        enabled:
          type: boolean
          description: "Only the class itself can set Enabled to some value, \r\nhowever anyone could read the value in Enabled."
          readOnly: true
      additionalProperties: false
    SiteSearchSettings:
      type: object
      properties:
        sowBehavior:
          type: integer
          description: "controls sowBehavior (Never=0, Always=1, WhenNoMultiTermSyn=2)\r\nnever sow=false, always sow=true,  WhenNoMultiTermSyn = (depends on existance of multitermsynonym match in query)"
          format: int32
          nullable: true
        fieldWeights:
          type: array
          items:
            $ref: '#/components/schemas/SiteSearchFieldWeight'
          nullable: true
        customBoosts:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: '#/components/schemas/FieldValueBoost'
        multiTermSynMinimumMatchPercents:
          type: array
          items:
            type: integer
            format: int32
          description: "if values present is used for mm when sowBehavior.WhenNoMultiTermSyn and multi term sym match found in query\r\nif no values are present or null fallback to MinMatchPercents"
          nullable: true
        minimumMatchPercents:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        phraseSlop:
          type: integer
          format: int32
        twoWordPhraseBoost:
          type: boolean
          description: "if true, 2 word shingles used for phrase boosting based on fields with phrase weights greater than 0\r\nif false, only full phrase mathing used for phrase boosting"
          nullable: true
        personalizationExperience:
          type: string
          nullable: true
        personalizationFactor:
          type: number
          format: double
          nullable: true
        searchChildProductsByDefault:
          type: boolean
        crossFieldAdditiveScoreFactor:
          type: number
          format: double
        typoTolerance:
          $ref: '#/components/schemas/TypoTolerance'
        spellcheck:
          $ref: '#/components/schemas/CatalogAdminsSpellcheck'
      additionalProperties: false
    SearchSettings:
      type: object
      properties:
        settingsName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isDefault:
          type: boolean
        siteSearchSettings:
          $ref: '#/components/schemas/SiteSearchSettings'
        productSuggestSettings:
          $ref: '#/components/schemas/ProductSuggestSettings'
        categorySuggestSettings:
          $ref: '#/components/schemas/SuggestSettings'
        listingSettings:
          $ref: '#/components/schemas/ListingSettings'
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Settings to control product search and indexing behavior
    SearchSettingsCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchSettings'
          nullable: true
      additionalProperties: false
    SpellcheckUpdate:
      type: object
      properties:
        spellcheckEnabled:
          type: boolean
          description: Spellcheck true/false
        tenantId:
          type: integer
          description: ''
          format: int32
        masterCatalogId:
          type: integer
          description: ''
          format: int32
        localeCode:
          type: string
          description: e.g en-US
          nullable: true
      additionalProperties: false
      description: ''
    SearchType:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    SearchMerchandizingRuleField:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    SearchMerchandizingImpactItem:
      type: object
      properties:
        productCode:
          type: string
          nullable: true
        sliceValue:
          type: string
          nullable: true
        position:
          type: integer
          format: int32
        isPinned:
          type: boolean
      additionalProperties: false
    SearchMerchandizingSortField:
      type: object
      properties:
        direction:
          type: string
          nullable: true
        propertyName:
          type: string
          nullable: true
      additionalProperties: false
    SearchMerchandizingBoostType:
      enum:
        - 1
      type: integer
      format: int32
    SearchMerchandizingBoostValueExpression:
      type: object
      properties:
        value:
          type: string
          nullable: true
        boostNumber:
          type: integer
          format: int32
        operator:
          type: string
          nullable: true
      additionalProperties: false
    SearchMerchandizingBoostField:
      type: object
      properties:
        fieldName:
          type: string
          nullable: true
        valueExpressions:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingBoostValueExpression'
          nullable: true
      additionalProperties: false
    SearchMerchandizingFieldValueBoost:
      type: object
      properties:
        boostType:
          $ref: '#/components/schemas/SearchMerchandizingBoostType'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingBoostField'
          nullable: true
      additionalProperties: false
    SearchMerchandizingFilter:
      type: object
      properties:
        inclusion:
          type: string
          nullable: true
        exclusion:
          type: string
          nullable: true
      additionalProperties: false
    SearchMerchandizingRuleImpact:
      type: object
      properties:
        rankedItems:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingImpactItem'
          nullable: true
        buriedItems:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingImpactItem'
          nullable: true
        excludedItems:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingImpactItem'
          nullable: true
        sortFields:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingSortField'
          nullable: true
        fieldValueBoost:
          $ref: '#/components/schemas/SearchMerchandizingFieldValueBoost'
        filter:
          $ref: '#/components/schemas/SearchMerchandizingFilter'
      additionalProperties: false
      description: SearchMerchandizingRule Condition
    SearchMerchandizingRuleCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRule'
          nullable: true
      additionalProperties: false
    TagNode:
      type: object
      properties:
        tagName:
          type: string
          nullable: true
        tagPath:
          type: string
          nullable: true
        tagCode:
          type: string
          nullable: true
        isRoot:
          type: boolean
        children:
          type: array
          items:
            $ref: '#/components/schemas/TagNode'
          nullable: true
      additionalProperties: false
    TagNodeTree:
      type: object
      properties:
        total:
          type: integer
          format: int32
        success:
          type: boolean
        items:
          $ref: '#/components/schemas/TagNode'
      additionalProperties: false
      description: Hierarchical tree for Tags
    AdminUserAuditInfo:
      type: object
      properties:
        updateDate:
          type: string
          format: date-time
          nullable: true
        createDate:
          type: string
          format: date-time
          nullable: true
        updateBy:
          type: string
          nullable: true
        createBy:
          type: string
          nullable: true
      additionalProperties: false
    CatalogAdminsMasterCatalog:
      type: object
      properties:
        id:
          type: integer
          description: MasterCatalogId (readonly)
          format: int32
        name:
          type: string
          description: Name of the MasterCatalog (readonly)
          nullable: true
        productPublishingMode:
          type: string
          description: >-
            The product publishing mode of this MasterCatalog. "Pending" saves
            product updates as a draft, and "Live" publishes updates
            immediately.
          nullable: true
        enableLiveEdit:
          type: boolean
          description: >-
            If the publishingMode is Pending and LiveEditsEnabled = true,
            DataViewMode live can be passed in the header and live products can
            be directly edited. This should only be enabled for immediate
            changes to the live version of products. 
          nullable: true
        isDeleted:
          type: boolean
          description: >-
            Indicates whether the MasterCatalog has been deleted and should no
            longer be used
      additionalProperties: false
    CatalogAdminsAttribute:
      type: object
      properties:
        adminName:
          type: string
          description: >-
            Name of the product displayed in the admin, This field does not need
            to be unqiue, but is required. It can include spaces...and is
            limited to a length of 50.
          nullable: true
        namespace:
          type: string
          description: "NameSpace, each application creating attributes will have a uniqe namespace to avoid name (Code) collisions. The namespace provided must be a valid registered\r\nnamespace. If no namespace is specified it is assumed to be the namespace of the Tenant."
          nullable: true
        attributeCode:
          type: string
          description: "Unique identifier of the Attribute. Must be unique within a namespace and cannot be changed once the attribute is created. This value will be generated and match the attribute\r\nsequence if not provided on create."
          nullable: true
        attributeFQN:
          type: string
          description: >-
            Attribute fully qualified name, Read only value that combines
            namespace and attribute code as NameSpace~AttributeCode
          nullable: true
        isValueMappingAttribute:
          type: boolean
          description: >-
            Specifies if this attribute can can be used to generalize values of
            another attribute
          nullable: true
        valueMappingAttributeFQN:
          type: string
          description: >-
            Attribute fully qualified name of a corresponding value mapping
            atribuite
          nullable: true
        attributeSequence:
          type: integer
          description: >-
            Read only System generated monotonically increasing unique sequence
            for each attribute created.
          format: int32
          nullable: true
        attributeDataTypeSequence:
          type: integer
          description: >-
            Read only System generated monotonically increasing unique sequence
            for each attribute,DataType created (this is used to optimize
            indexed field names in search).
          format: int32
          nullable: true
        masterCatalogId:
          type: integer
          description: >-
            Indentifier of the master that this attribute is a member of.
            System-supplied and read-only. Attributes will be created in the
            MasterCatalog of the supplied context.
          format: int32
          nullable: true
        inputType:
          maxLength: 20
          type: string
          description: "The InputType type of the attribute. Must be a valid value for InputType defined in InputTypeConst and the combination of types set must match an entry in the AttributeTypeRules resource. \r\nThis value cannot be changed after create"
          nullable: true
        valueType:
          maxLength: 20
          type: string
          description: "The ValueType of the attribute.  Must be a valid value for ValueType defined in ValueTypeTypeConst and the combination of types set must match an entry in the AttributeTypeRules resource. \r\nThis value cannot be changed after create"
          nullable: true
        dataType:
          maxLength: 20
          type: string
          description: "The DataType of the attribute.  Must be a valid value for DataType defined in DataTypeTypeConst and the combination of types set must match an entry in the AttributeTypeRules resource. \r\nThis value cannot be changed after create"
          nullable: true
        isOption:
          type: boolean
          description: >-
            Specifies if this attribute can have a usage type of Option in a
            ProductType. This value can only be true when when it matches an
            AttributeTypeRule in the AttributeTypeRules resource.
          nullable: true
        isExtra:
          type: boolean
          description: >-
            Specifies if this attribute can have a usage type of Extra in a
            ProductType. This value can only be true when when it matches an
            AttributeTypeRule in the AttributeTypeRules resource.
          nullable: true
        isProperty:
          type: boolean
          description: >-
            Specifies if this attribute can have a usage type of Property in a
            ProductType. This value can only be true when when it matches an
            AttributeTypeRule in the AttributeTypeRules resource.
          nullable: true
        availableForOrderRouting:
          type: boolean
          description: Specifies if this attribute is available for order routing
        attributeMetadata:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsAttributeMetadataItem'
          description: >-
            Attribute Metadata. This list can contain opaque data (key value
            pairs) that can be used as a property bag for UI concerns.
          nullable: true
        content:
          $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
        localizedContent:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsAttributeLocalizedContent'
          description: >-
            The Content of an attribute. This content is always in the default
            language of the MasterCatalog.
          nullable: true
        validation:
          $ref: '#/components/schemas/CatalogAdminsAttributeValidation'
        vocabularyValues:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
          description: >-
            The list of Values for this attribute. Only available for
            ValueType:PredefinedVocabulary
          nullable: true
        searchSettings:
          $ref: '#/components/schemas/AttributeSearchSettings'
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Attribute
    CatalogAdminsDiscount:
      required:
        - amountType
        - content
        - scope
        - target
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the discount. System-supplied and read-only.
          format: int32
          nullable: true
        content:
          $ref: '#/components/schemas/DiscountLocalizedContent'
        scope:
          type: string
          description: >-
            Scope to which the discount applies, valid values are: Order,
            LineItem
        conditions:
          $ref: '#/components/schemas/CatalogAdminsDiscountCondition'
        target:
          $ref: '#/components/schemas/CatalogAdminsDiscountTarget'
        currentRedemptionCount:
          type: integer
          description: >-
            How many times this discount has been redeemed. System-supplied and
            read-only.
          format: int32
          nullable: true
        amount:
          type: number
          description: "    Amount of the discount, as a percentage or monetary amount, for example 15% or $15.\r\nMust be either null or greater than zero."
          format: double
          nullable: true
        amountType:
          type: string
          description: "Type of discount, which can be either a percentage off the price, \r\na specific monetary amount, or free. \r\nPossible values: \r\n\tPercentage \r\n\tAmount \r\n\tFree\r\n\tFixedPrice"
        status:
          type: string
          description: >-
            Discount status which can be "Active," "Scheduled," or "Expired."
            System-supplied and read-only.
          nullable: true
        canBeDeleted:
          type: boolean
          description: >-
            Signifies that the discount is not referenced and can be hard
            deleted
        doesNotApplyToSalePrice:
          type: boolean
          description: "Determines if the discount should apply to sale price or regular price only.\r\nDiscounts will apply to sale prices by default.\r\nOnly applies to LineItem product discounts."
          nullable: true
        doesNotApplyToProductsWithSalePrice:
          type: boolean
          description: "Determines whether or not a discount applies to a items with a sale price.  Applicable \r\non order and line item discounts.  For line items, when this is true, the discount will \r\nbe disqualified.  For order level discounts, when true, the discount will not be applied \r\nto those items have a sale price."
          nullable: true
        isDisabled:
          type: boolean
          description: Signifies if the discount is disabled (Null is treated as false)
          nullable: true
        maximumUsesPerUser:
          type: integer
          description: "Maximum number of times a user can redeem this discount.\r\n Must be either null or greater than zero."
          format: int32
          nullable: true
        maximumDiscountImpactPerOrder:
          type: number
          description: "Maximum impact this discount can apply on a single order.\r\n Must be either null or greater than zero."
          format: double
          nullable: true
        maximumDiscountImpactPerRedemption:
          type: number
          description: "Maximum impact this discount can apply on a single line item.\r\n Must be either null or greater than zero."
          format: double
          nullable: true
        maximumRedemptionsPerOrder:
          type: integer
          description: "Maximum number of redemptions allowed per order.\r\nIf null, defaults to unlimited."
          format: int32
          nullable: true
        includedPriceLists:
          type: array
          items:
            type: string
          description: "Products receiving a price from a price list specified here or a child of a specified \r\nprice list can be discounted."
          nullable: true
        doesNotApplyToMultiShipToOrders:
          type: boolean
          description: "Flag to allow or prevent application to multi-ship-to orders,\r\nOnly applicable to shipping discounts."
          nullable: true
        isBxGx:
          type: boolean
          description: "Readonly property indicating that the condition required purchase is the \r\nsame as the target items.  Used in BxGx and BoGo type discounts."
          nullable: true
        canBeStackedUpon:
          type: boolean
          description: Indicates whether or not stacking is enabled for this discount
          nullable: true
        stackingLayer:
          type: integer
          description: Indicates which stacking layer this discount is a part of
          format: int32
          nullable: true
        thresholdMessage:
          $ref: '#/components/schemas/CatalogAdminsThresholdMessage'
        preventLineItemShippingDiscounts:
          type: boolean
          description: "Prevents Line Item Shipping discounts from being applied when a Line Item Product  \r\ndiscount has been applied"
          nullable: true
        preventOrderProductDiscounts:
          type: boolean
          description: "Prevents Order Product discounts from being applied when a Line Item Product  \r\nor Shipping discount has been applied"
          nullable: true
        preventOrderShippingDiscounts:
          type: boolean
          description: "Prevents Order Shipping discounts from being applied when a Line Item Product/Shipping  \r\nor Order Product discount has been applied"
          nullable: true
        hasPurchaseConditions:
          type: boolean
          description: "Indicates if this discount has purchase conditions that must be met before \r\nthe discount is applied"
        purchaseRequirementType:
          type: string
          description: "The type of purchase requirement for this discount, either purchase conditions and targets which   \r\nSupports BoGo, and BxGx scenarios. Or Target only that only have a target and no purchase conditions"
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        tagCodes:
          type: array
          items:
            type: string
          description: System-supplied and read-only.
          nullable: true
        isSubscriptionDiscount:
          type: boolean
          description: >-
            Determines how discounts will be evaluated for subscription items
            and during continuity orders.
          nullable: true
      additionalProperties: false
      description: "Allows you to define and manage discounts to apply to your products, product categories, or orders. The discounts can be a specified monetary amount off the price, percentage off the price, or for free shipping.\r\nYou can create a coupon code that applies to the discount."
    CatalogAdminsThresholdMessage:
      required:
        - content
        - discountId
        - thresholdValue
      type: object
      properties:
        discountId:
          type: integer
          description: Unique identifier of the discount. System-supplied and read-only.
          format: int32
        thresholdValue:
          type: number
          description: >-
            The cart total amount that must be met before the threshold message
            is displayed
          format: double
        isActive:
          type: boolean
          description: Indicates if threshold messages are active for this discount
        showInCart:
          type: boolean
          description: Indicates if the threshold message will display in the cart
        showOnCheckout:
          type: boolean
          description: Indicates if the threshold message will display on the checkout page
        requiresCouponCode:
          type: boolean
          description: >-
            Indicates if the threshold message will display when a promo code is
            evaluated
        content:
          $ref: '#/components/schemas/ThresholdMessageLocalizedContent'
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
    CommerceRuntimeMeasurement:
      type: object
      properties:
        unit:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    CatalogAdminsProductOption:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        isProductImageGroupSelector:
          type: boolean
          description: >-
            Defines whether or not this option can be used to segment product
            images
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductOptionValue'
          description: List of all the values for this product option.
          nullable: true
      additionalProperties: false
      description: "Product options for configurable or stand-alone products. A configurable option is one that the shopper chooses when ordering, for example, \r\nthe color of a T-shirt. A stand-alone option is independent of the product and can be added to the product order. For example, a monogram."
    CatalogAdminsProductPropertyValue:
      type: object
      properties:
        value:
          nullable: true
        content:
          $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
        localizedContent:
          type: array
          items:
            $ref: '#/components/schemas/ProductPropertyValueLocalizedContent'
          nullable: true
        attributeVocabularyValueDetail:
          $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      additionalProperties: false
      description: >-
        A value of a product option for this product. For example, a computer
        product may have an option called "Memory" that can have the values
        "6GB,"8GB," and "12GB."
    CatalogAdminsProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductPropertyValue'
          nullable: true
      additionalProperties: false
      description: "Product options for configurable or stand-alone products. A configurable option is one that the shopper chooses when ordering, for example, \r\nthe color of a T-shirt. A stand-alone option is independent of the product and can be added to the product order. For example, a monogram."
    CatalogAdminsCategory:
      type: object
      properties:
        id:
          type: integer
          description: >-
            Internal unique identifier of the category. System-supplied and
            read-only.
          format: int32
          nullable: true
        categoryType:
          type: string
          description: The Type of Category Static, Dyanmic, DynamicPreComputed
          nullable: true
        catalogId:
          type: integer
          description: The CatalogId that the category belongs to.
          format: int32
          nullable: true
        parentCategoryId:
          type: integer
          description: >-
            Unique identifier of the category to which this category belongs. If
            nil, this is a top-level category. System-supplied and read-only.
          format: int32
          nullable: true
        parentCategoryCode:
          type: string
          nullable: true
        parentCategoryName:
          type: string
          nullable: true
        parentIsActive:
          type: boolean
          nullable: true
        categoryCode:
          type: string
          description: External unique identifier of the category.
          nullable: true
        isActive:
          type: boolean
          description: >-
            If false, the category is considered unavailable in runtime (default
            is true if not specified on create)
          nullable: true
        isDisplayed:
          type: boolean
          description: If true, the category appears to shoppers on the storefront.
          nullable: true
        sequence:
          type: integer
          description: >-
            Order in which categories appear when they are at the same level
            (siblings). For example, you could change the sequence of categories
            so that a specific category always appears first.
          format: int32
          nullable: true
        content:
          $ref: '#/components/schemas/CategoryLocalizedContent'
        dynamicExpression:
          $ref: '#/components/schemas/DynamicExpression'
        productCount:
          type: integer
          description: >-
            Number of products contained in this category. This count includes
            all products contained in any subcategories of this category.
          format: int32
          nullable: true
        childCount:
          type: integer
          description: >-
            Number of subcategories that belong to this category. These
            subcategories are at the same level (siblings).
          format: int32
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        shouldSlice:
          type: boolean
          description: If True, search displays sliced view
          nullable: true
        activeDateStart:
          type: string
          description: Active Start Date
          format: date-time
          nullable: true
        activeDateEnd:
          type: string
          description: Active end Date
          format: date-time
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsCategoryAttribute'
          description: List of attributes for the category.
          nullable: true
      additionalProperties: false
      description: Category
    CatalogAdminsProductPrice:
      type: object
      properties:
        isoCurrencyCode:
          type: string
          description: Currency code.
          nullable: true
        price:
          type: number
          description: >-
            Price of the product. This is the price the merchant intends to sell
            the product if no sale price is present.
          format: double
          nullable: true
        salePrice:
          type: number
          description: >-
            Current sale price of the product. Sale price is a numeric
            (monetary) amount, not a percentage off.
          format: double
          nullable: true
        msrp:
          type: number
          description: Manufacturer Suggested Retail Price. +
          format: double
          nullable: true
        map:
          type: number
          description: Minimum Advertised Price
          format: double
          nullable: true
        mapStartDate:
          type: string
          description: >-
            Minimum Advertised Price effective start date (null = begining of
            time)
          format: date-time
          nullable: true
        mapEndDate:
          type: string
          description: Minimum Advertised Price effectivity end date (null = forever)
          format: date-time
          nullable: true
        creditValue:
          type: number
          description: Credit amt of the product
          format: double
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    CatalogAdminsBundledProduct:
      type: object
      properties:
        productCode:
          type: string
          description: Product Code
          nullable: true
        quantity:
          type: integer
          description: Qty of the bundled PRoduct
          format: int32
        price:
          $ref: '#/components/schemas/CatalogAdminsProductPrice'
        productName:
          type: string
          description: Read only Name of the BundledProduct
          nullable: true
        packageHeight:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        packageWidth:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        packageLength:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        packageWeight:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    CatalogAdminsProduct:
      type: object
      properties:
        productCode:
          type: string
          description: >-
            Merchant-created code identifier associated with the product, for
            example, a SKU or product item number.
          nullable: true
        productUsage:
          type: string
          description: >-
            Indicates the usage type of this product. Must be one of the values
            in ProductUsageConst.
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        masterCatalogId:
          type: integer
          description: >-
            Identifier of the Master Catalog that this product is a member of.
            System-supplied and read-only
          format: int32
          nullable: true
        productSequence:
          type: integer
          description: System generated monotonically increasing sequence
          format: int32
          nullable: true
        productTypeId:
          type: integer
          description: >-
            Unique identifier of the productType of the product. Refers to a
            valid ProductType that was previously created with the ProductType
            resource.
          format: int32
          nullable: true
        isValidForProductType:
          type: boolean
          description: >-
            Read only flag that indicates if the product meets the product type
            constraints (All adminRequired attributes have a valid value)
          nullable: true
        baseProductCode:
          type: string
          description: >-
            This is the base product ProductCode of a product that is a
            variation. It is read-only and only populated for products that are
            variations of a configurable base product.
          nullable: true
        productInCatalogs:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCatalogInfo'
          description: >-
            Catalog specific info for each catalog a product is valid in. There
            should always be one or more entries here.
          nullable: true
        content:
          $ref: '#/components/schemas/ProductLocalizedContent'
        price:
          $ref: '#/components/schemas/CatalogAdminsProductPrice'
        pricingBehavior:
          $ref: '#/components/schemas/CatalogAdminsProductPricingBehaviorInfo'
        seoContent:
          $ref: '#/components/schemas/ProductLocalizedSEOContent'
        options:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductOption'
          description: >-
            The Options defined in the product Type that are currently assigned
            to this product
          nullable: true
        extras:
          type: array
          items:
            $ref: '#/components/schemas/ProductExtra'
          description: >-
            The Extras defined in the product Type that are currently assigned
            to this product
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductProperty'
          description: >-
            The Properties defined in the product Type that are currently
            assigned to this product
          nullable: true
        isTaxable:
          type: boolean
          description: If true, the product is subject to tax.
          nullable: true
        inventoryInfo:
          $ref: '#/components/schemas/CatalogAdminsProductInventoryInfo'
        shippingClassId:
          type: integer
          format: int32
          nullable: true
        isRecurring:
          type: boolean
          description: >-
            If true, the product can be purchased or fulfilled at regular
            intervals, for example, monthly billing or a subscription.
          nullable: true
        upc:
          type: string
          description: UPC code of the product.
          nullable: true
        supplierInfo:
          $ref: '#/components/schemas/ProductSupplierInfo'
        isPackagedStandAlone:
          type: boolean
          description: Does this product need to be packaged on its own
          nullable: true
        standAlonePackageType:
          type: string
          description: When packaged alone this is the package type
          nullable: true
        packageHeight:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        packageWidth:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        packageLength:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        packageWeight:
          $ref: '#/components/schemas/CommerceRuntimeMeasurement'
        applicableDiscounts:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsDiscount'
          description: Read only. List of discounts that are available for a product.
          nullable: true
        isVariation:
          type: boolean
          description: >-
            Read only. If true, this is a product variation of a product with
            configurable options. System-supplied and read-only.
        variationKey:
          type: string
          description: >-
            Read only. If IsVariation true, thish provides a unique key to
            manage the variation of the base product.
          nullable: true
        hasConfigurableOptions:
          type: boolean
          description: >-
            Read only. If true, this product has configurable options. The
            product is not purchasable until the shopper selects options that
            resolve to a product variation. System-supplied and read-only.
        hasStandAloneOptions:
          type: boolean
          description: >-
            Read only. If true, the product has stand-alone options that a
            shopper may select. System-supplied and read-only.
        variationOptions:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariationOption'
          description: >-
            Read only List of variations that exist for a product. This is only
            populated when IsVariation is true. To get the list of options, the
            GET request must include the VariationOptions response group.
          nullable: true
        publishingInfo:
          $ref: '#/components/schemas/ProductPublishingInfo'
        bundledProducts:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsBundledProduct'
          description: "list of other products that are included in a BundleProduct\r\nThis requires that the ProductUsage be set to Bundle"
          nullable: true
        productCollectionProducts:
          type: array
          items:
            $ref: '#/components/schemas/ProductCollectionProduct'
          description: "list of other products that are members of a ProductCollection\r\nThis requires that the ProductUsage be set to Collection"
          nullable: true
        productCollections:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductCollectionInfo'
          description: >-
            List of Mozu.ProductAdmin.Contracts.ProductCollectionInfo that this
            product belongs to
          nullable: true
        productImageGroups:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductImageGroup'
          description: "List of the image groups this product uses.\r\nImage groups are used to map different images to different product options.\r\nIf the product doesn't have options then all images will be in the default\r\nimage group."
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        slicingSettings:
          $ref: '#/components/schemas/SlicingSettings'
        primaryProductCollectionCode:
          type: string
          description: >-
            When this product belongs to a product collection this is the
            product id for the primary collection.
          nullable: true
      additionalProperties: false
      description: >-
        Use the Products resource to create and manage products for your store.
        You can create products with options that a shopper configures (such as
        a T-shirt color and size). The system can manage inventory for all
        combinations of your product options, and can calculate tax and shipping
        costs.
    CatalogAdminsAttributeMetadataItem:
      type: object
      properties:
        key:
          type: string
          description: The key
          nullable: true
        value:
          type: string
          description: The value
          nullable: true
      additionalProperties: false
      description: >-
        Attribute Metadata Item.  It can be utilized for storing abitrary
        key/value pairs of data related to an attribute.
    CatalogAdminsAttributeLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description: >-
            Language used for the attribute name and description. Currently,
            only en_US is supported.
          nullable: true
        name:
          type: string
          description: Name of the attribute in the language specified by LocaleCode.
          nullable: true
        description:
          type: string
          description: >-
            Description of the attribute in the language specified by
            LocaleCode.
          nullable: true
      additionalProperties: false
      description: >-
        Container for language-specific content to display on the storefront.
        You'll have a container for each supported language (LocaleCode). This
        enables you to display an attribute in multiple languages yet manage it
        as a single attribute internally.
    CatalogAdminsAttributeValidation:
      type: object
      properties:
        regularExpression:
          type: string
          description: >-
            Regular expression to run against the attribute value. This should
            follow JavaScript/EMCA's Regular Expression syntax.
          nullable: true
        minStringLength:
          type: integer
          description: For validating strings, minimum length allowed for a string.
          format: int32
          nullable: true
        maxStringLength:
          type: integer
          description: For validating strings, maximum length allowed for a string.
          format: int32
          nullable: true
        minNumericValue:
          type: number
          description: For validating Number attribute value, minimum number allowed.
          format: double
          nullable: true
        maxNumericValue:
          type: number
          description: For validating Number attribute value, maximum number allowed.
          format: double
          nullable: true
        minDateValue:
          type: string
          description: For validating a DateTime attribute value, minimum datetime allowed.
          format: date-time
          nullable: true
        maxDateValue:
          type: string
          description: For validating a DateTime attribute value, maximum datetime allowed.
          format: date-time
          nullable: true
      additionalProperties: false
      description: Used to validate attributes.
    CatalogAdminsAttributeVocabularyValue:
      type: object
      properties:
        valueSequence:
          type: integer
          description: Read only System generated monotonically increasing unique sequence.
          format: int32
          nullable: true
        value:
          description: "The actual value of the attribute vocabulary. This value must be unique within the vocabulary for a single attribute and match the datatype of the attribute. \r\nString data type requires a canonical value here or one will be system generated if null. The actual string content displayed to users should be stored as Content. \r\nString values require content to be present.\r\nOnce this value is set it cannot be changed."
          nullable: true
        mappedGenericValues:
          type: array
          items: {}
          description: "The actual values of the related generic attribute. This value must match the datatype of the attribute and already exist \r\nwithin the Vocabulary values of the related ValueMappingAttribute. Only supporting string at this time."
          nullable: true
        productName:
          type: string
          description: The ProductName when the Attribute DataType is ProductCode.
          nullable: true
        content:
          $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
        localizedContent:
          type: array
          items:
            $ref: '#/components/schemas/AttributeVocabularyValueLocalizedContent'
          description: >-
            The Content of an attribute value. This content is in multiple
            locals supported by the master catalog and is only valid for String
            DataType.
          nullable: true
        displayOrder:
          type: integer
          description: >-
            The order in which the attribute value displays. If you omit a value
            for this property, Mozu infers the display order from the attribute
            value's position the list.
          format: int32
          nullable: true
      additionalProperties: false
      description: Value of an attribute
    CatalogAdminsAttributeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsAttribute'
          nullable: true
      additionalProperties: false
      description: Collection of attributes.
    CatalogAdminsActiveDateRange:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      description: Active Effectivity Dates
    CatalogAdminsCustomerSegment:
      type: object
      properties:
        id:
          type: integer
          description: "The Customer segment Id.\r\nThis is the  system Id not the code."
          format: int32
      additionalProperties: false
      description: Represents a customer segment
    CatalogAdminsTag:
      required:
        - tagCode
      type: object
      properties:
        tagCode:
          type: string
          description: A unique code per catalog. Limit 500 characters.
        tagName:
          type: string
          description: >-
            Readonly and computed from TagCode. If using hierarchical tag-codes,
            only the last node
          nullable: true
          readOnly: true
        tagPath:
          type: string
          description: >-
            Readonly and computed from TagCode. If using hierarchical tag-codes,
            the node path without the TagName
          nullable: true
          readOnly: true
      additionalProperties: false
      description: A generic tag that can be used for any purpose.
    CatalogAdminsDiscountTarget:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: "    Type of target to which the discount applies. Possible values: <pre>Product</pre> or <pre>Shipping</pre>. \r\nIf this is a <pre>Product</pre> type, you can specify which products or categories that the discount applies to.\r\n    If this is a <pre>Shipping</pre> type then you must specify which shipping methods apply."
        includeAllProducts:
          type: boolean
          description: If yes, the discount applies to all products sold on the storefront.
          nullable: true
        includedCategoriesOperator:
          type: string
          description: "Applies to Included categories\r\nWhen Any, the target product can belong to any specified category.\r\nWhen All, the target product must belong to all specified categories.\r\nDefaults to Any"
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/TargetedCategory'
          description: >-
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        excludedCategoriesOperator:
          type: string
          description: "Applies to Included categories\r\nDefaults to Any"
          nullable: true
        excludedCategories:
          type: array
          items:
            $ref: '#/components/schemas/TargetedCategory'
          description: >-
            List of categories to exclude from the discount. Useful to exclude
            specific child categories.
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/TargetedProduct'
          description: List of products that are eligible for the discount.
          nullable: true
        excludedProducts:
          type: array
          items:
            $ref: '#/components/schemas/TargetedProduct'
          description: List of products that are excluded from the discount.
          nullable: true
        excludeItemsWithExistingShippingDiscounts:
          type: boolean
          description: "Prevents order scoped discounts from layering over items that already have a shipping discount with the \r\nsame type."
          nullable: true
        excludeItemsWithExistingProductDiscounts:
          type: boolean
          description: "Prevents order scoped discounts from layering over items that already have a product discount with the \r\nsame type."
          nullable: true
        shippingMethods:
          type: array
          items:
            $ref: '#/components/schemas/TargetedShippingMethod'
          description: >-
            Shipping method that is eligible for shipping discounts. This is a
            shipping method defined in Shipping Settings.
          nullable: true
        shippingZones:
          type: array
          items:
            $ref: '#/components/schemas/TargetedShippingZone'
          description: Shipping Zones that are applicable for this discount
          nullable: true
        doNotApplyToHandlingFees:
          type: boolean
          description: Prevents the discount from being applied to handling fees
          nullable: true
        maximumQuantityPerRedemption:
          type: integer
          description: "When a condition is specified, this property limits the number of items that can be targeted per discount redemption with an order.\r\nif multiple redemptions are allowed per order then multiples of this value would be allowed in multiples of the associated \r\ncondition.\r\nIf no condition is specified then this value is not used.  \r\nIf null and condition exists, then defaults to 1."
          format: int32
          nullable: true
        appliesToLeastExpensiveProductsFirst:
          type: boolean
          description: "Determines which way the discount is optimized.  Consumers favor(default - false/null) or tenants favor (when this is set to true)\r\nApplies to discounts where target is not a specific product or list of products.  \r\nMay also impact behavior of Buy X Get Y so that X is the most expensive items and Y the least expensive."
          nullable: true
      additionalProperties: false
      description: "What to discount. Specifies the type of discount (percentage off, monetary amount, or free shipping) and which products, categories, or shipping methods are eligible for the discount.\r\nCan also specify the minimum amount that the order must total for the discount to apply."
    CatalogAdminsDiscountCondition:
      type: object
      properties:
        maxRedemptionCount:
          type: integer
          description: >-
            Maximum number of times that the discount can be redeemed. Default
            is null (no limit to discount redemptions).
          format: int32
          nullable: true
        requiresCoupon:
          type: boolean
          description: >-
            If true, the shopper needs to enter a coupon code to redeem the
            discount.
        couponCode:
          type: string
          description: >-
            Code of the coupon associated with the discount (if a coupon code is
            required). The merchant can supply the code or the system can
            generate it.
          nullable: true
        requiresAuthenticatedUser:
          type: boolean
          description: "Determines is this discount can be used by an anonymous user \r\nDefaults to false to allow discounts for anonymous users."
        includedPaymentWorkflows:
          type: array
          items:
            type: string
          description: List of payment types that trigger this discount to be valid.
          nullable: true
        includedCategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDiscountCondition'
          description: >-
            List of categories that must be purchased in order for the discount
            to be valid.
          nullable: true
        excludedCategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDiscountCondition'
          description: >-
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        includedProducts:
          type: array
          items:
            $ref: '#/components/schemas/ProductDiscountCondition'
          description: List of products that are eligible for the discount.
          nullable: true
        excludedProducts:
          type: array
          items:
            $ref: '#/components/schemas/ProductDiscountCondition'
          description: List of products that are eligible for the discount.
          nullable: true
        customerSegments:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsCustomerSegment'
          description: List of customer groups for which the discount applies
          nullable: true
        minimumQuantityRequiredProducts:
          type: integer
          description: "Minimum quantity of products in the specified IncludedProducts that must be purchased to\r\nqualify for the associated discount.\r\nDefaults to 1 if  null and IncludedProducts has values."
          format: int32
          nullable: true
        minimumQuantityProductsRequiredInCategories:
          type: integer
          description: "Minimum quantity of products in the categories specified in IncludedCategories that must be purchased to\r\nqualify for the associated discount.\r\nDefaults to 1 if  null and IncludedCategories has values"
          format: int32
          nullable: true
        minimumOrderAmount:
          type: number
          description: "Only applies to order.\r\nMinimum order subtotal after discounts in order for the associated discount to be applied"
          format: double
          nullable: true
        maximumOrderAmount:
          type: number
          description: "Only applies to order.\r\nMaximum order subtotal after discounts in order for the associated discount to be applied"
          format: double
          nullable: true
        categoriesToExcludeFromMinOrderTotal:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDiscountCondition'
          description: >-
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        productsToExcludeFromMinOrderTotal:
          type: array
          items:
            $ref: '#/components/schemas/ProductDiscountCondition'
          description: List of products that are eligible for the discount.
          nullable: true
        minimumLifetimeValueAmount:
          type: number
          description: Minimum lifetime value amount required for this discount to apply
          format: double
          nullable: true
        startDate:
          type: string
          description: >-
            Date when the discount can goes into effect, in the format
            yyyy-mm-dd.
          format: date-time
          nullable: true
        expirationDate:
          type: string
          description: >-
            Date when the discount expires. Default is null (no expiration
            date).
          format: date-time
          nullable: true
        minimumCategorySubtotalBeforeDiscounts:
          type: number
          description: "Minimum amount that must be purchased in the combined categories defined in \r\nIncludedCategories.  Amount is calculated before discounting.\r\nNot used if IncludedCategories is empty."
          format: double
          nullable: true
        minimumRequiredQuantityPerRedemption:
          type: integer
          description: >-
            Defines a minimum quantity that is required for a target only
            discount
          format: int32
          nullable: true
        validSubscriptionFrequencies:
          type: array
          items:
            type: string
          description: List of subscription frequencies to which the discount will apply.
          nullable: true
        validSubscriptionContinuityOrdinals:
          type: array
          items:
            type: integer
            format: int32
          description: Ordinals at which a continuity order should receive the discount.
          nullable: true
        minDistinctProductsRequired:
          type: integer
          description: "The minimum number of distinct products on the order\r\nNot a quantity calculation."
          format: int32
          nullable: true
        minTotalOrderQuantity:
          type: integer
          description: "The order must contain at least this total quantity of items for the discount to apply.\r\nYou must buy a combined quantity of at least x amount."
          format: int32
          nullable: true
        pricingContext:
          type: string
          description: "The pricing context must match on this value for the discount to apply.\r\nThis only matters for tenants that use subscription products"
          nullable: true
        continuityRecurrenceSettings:
          $ref: '#/components/schemas/ContinuityRecurrenceSettings'
      additionalProperties: false
      description: "Specifies constraints that must be satified for a discount to be applied to a target.\r\nConstraints are Anded together"
    CatalogAdminsCategoryAttribute:
      type: object
      properties:
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    CatalogAdminsCurrencyExchangeRate:
      required:
        - rate
      type: object
      properties:
        fromCurrencyCode:
          type: string
          description: The source currency code
          nullable: true
        toCurrencyCode:
          type: string
          description: The target currency code
          nullable: true
        rate:
          type: number
          description: The exchange rate
          format: double
        multiplier:
          type: number
          description: An additional multiplier to use in calculations
          format: double
          nullable: true
        referenceData:
          type: string
          description: Reference data for miscellaneous metadata from updates
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: The exchange rate between two currencies
    CatalogAdminsFacet:
      type: object
      properties:
        facetId:
          type: integer
          description: The unique identifier for the facet definition
          format: int32
          nullable: true
        source:
          $ref: '#/components/schemas/FacetSource'
        facetType:
          type: string
          description: "The type of facet. Allowable values are: Value, RangeQuery \r\nMust be a valid value for DataType defined in FacetTypeConst."
          nullable: true
        order:
          type: integer
          description: Used to order the display of the facets within a section
          format: int32
        categoryId:
          type: integer
          description: The category that the facet is being configured at
          format: int32
          nullable: true
        categoryCode:
          type: string
          description: The category that the facet is being configured at
          nullable: true
        valueSortType:
          type: string
          description: "Determines how the facet values will be sorted in the store. \r\nMust be a valid value for DataType defined in FacetValueSortTypeConst. \r\nAllowable values are: CountAscending, CountDescending, ValuesAscending, ValuesDescending, AttributeDefinition, AttributeDefinitionDescending.\r\nThe default if no value is specified will be CountDescending."
          nullable: true
        overrideFacetId:
          type: integer
          description: The ID of a parent category's facet being overriden
          format: int32
          nullable: true
        isHidden:
          type: boolean
          description: Indicates whether the facet is hidden for the given category
        validity:
          $ref: '#/components/schemas/FacetValidity'
        rangeQueries:
          type: array
          items:
            $ref: '#/components/schemas/FacetRangeQuery'
          description: List of ranges if the Facet is of type Range
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: The definition of a Facet
    CatalogAdminsPriceList:
      required:
        - name
        - priceListCode
      type: object
      properties:
        priceListCode:
          type: string
          description: >-
            External unique identifier of the PriceList. Must be unique an only
            contain url sanitized characters. Max length is 50
        priceListSequence:
          type: integer
          format: int32
        parentPriceListCode:
          type: string
          description: Parent PriceList code, Can be null for root level priceLists
          nullable: true
        parentPriceListName:
          type: string
          description: >-
            Parent PriceList name, Can be null for root level priceLists. Read
            only in contract.
          nullable: true
        name:
          type: string
          description: Name of the priceList. Max length is 100
        description:
          type: string
          description: Description of the price list. Max length is 300
          nullable: true
        enabled:
          type: boolean
          description: >-
            Is the price list enabled and valid in the storefront. Default is
            true.
          nullable: true
        filteredInStorefront:
          type: boolean
          description: >-
            When true, only products with valid price list entries will be
            visible in the storefront. Default is false
          nullable: true
        validForAllSites:
          type: boolean
          description: >-
            When true, no valid sites need to be specifiied. Price list is
            considered valid for all sites. Default is true
          nullable: true
        validSites:
          type: array
          items:
            type: integer
            format: int32
          description: >-
            When ValidForAllSites = false, a list of siteIDs that the price list
            is valid for should be supplied
          nullable: true
        defaultForSites:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        indexedSites:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        mappedCustomerSegments:
          type: array
          items:
            type: string
          description: "List of customer segment code associated with this price list.\r\nUsed to resolve default price list"
          nullable: true
        rank:
          type: integer
          description: >-
            Used to prioritize price list resolution when more than 1 price list
            maps
          format: int32
          nullable: true
        resolvable:
          type: boolean
          description: "Determines if this price list can be resolved as the current price list \r\nwithin a session."
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Category
    CatalogAdminsProductOptionValue:
      type: object
      properties:
        value:
          nullable: true
        attributeVocabularyValueDetail:
          $ref: '#/components/schemas/CatalogAdminsAttributeVocabularyValue'
      additionalProperties: false
      description: >-
        A value of a product option for this product. For example, a computer
        product may have an option called "Memory" that can have the values
        "6GB,"8GB," and "12GB."
    CatalogAdminsProductPricingBehaviorInfo:
      type: object
      properties:
        discountsRestricted:
          type: boolean
          nullable: true
        discountsRestrictedStartDate:
          type: string
          format: date-time
          nullable: true
        discountsRestrictedEndDate:
          type: string
          format: date-time
          nullable: true
        variationPricingMethod:
          type: string
          description: Only used when product is a variation
          nullable: true
      additionalProperties: false
      description: Pricing behavior associated with the product
    CatalogAdminsProductInventoryInfo:
      type: object
      properties:
        manageStock:
          type: boolean
          description: If true, the Products service manages inventory for this product.
          nullable: true
        outOfStockBehavior:
          type: string
          description: >-
            The behvior when the ManageStock is true and the product is not in
            stock.
          nullable: true
      additionalProperties: false
      description: >-
        Use the Products resource to create and manage products for your store.
        You can create products with options that a shopper configures (such as
        a T-shirt color and size). The system can manage inventory for all
        combinations of your product options, and can calculate tax and shipping
        costs.
    CatalogAdminsProductCost:
      type: object
      properties:
        isoCurrencyCode:
          type: string
          description: Currency code.
          nullable: true
        cost:
          type: number
          description: >-
            Cost of the product. This is the price the merchant pays for the
            product.
          format: double
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    CatalogAdminsProductCollectionMemberKey:
      type: object
      properties:
        value:
          type: string
          description: Key to resolve a collection member product
          nullable: true
      additionalProperties: false
      description: Key to resolve a collection member
    CatalogAdminsProductCollectionInfo:
      type: object
      properties:
        collectionProductCode:
          type: string
          description: >-
            Product code of the product that is the collection that the
            containing product belongs to
          nullable: true
        collectionName:
          type: string
          description: Collection name in the language of the master catalog
          nullable: true
        isPrimaryCollection:
          type: boolean
          description: True when this is the primary collection for the containing product.
          nullable: true
      additionalProperties: false
      description: "Information about the relationship between a Mozu.ProductAdmin.Contracts.Product and a productCollection (product with usagetype of collection)\r\nThis is only represented on the product member side of the relationship."
    CatalogAdminsProductImageGroupTag:
      required:
        - fqn
      type: object
      properties:
        fqn:
          type: string
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CatalogAdminsProductCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProduct'
          nullable: true
      additionalProperties: false
      description: Collection of products returned as a whole. A collection is not paged.
    CatalogAdminsAttributeVocabularyValueDisplayInfo:
      type: object
      properties:
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        colorValue:
          type: string
          description: Hex Color value to display in a color picker
          nullable: true
      additionalProperties: false
    CatalogAdminsSpellcheck:
      type: object
      properties:
        autocorrect:
          type: boolean
          description: Enables/disables the use of spell correct/auto correct at query time
        didyoumean:
          type: boolean
          description: Enables/disables the use of did you mean at query time
        spellcheckEnabled:
          type: boolean
          description: "Does the spelling dictionary exists in SOLR\r\nThis determines if toggle in site search settings should be enabled/disabled"
      additionalProperties: false
      description: ''
    CatalogAdminsSearchMerchandizingRuleCondition:
      type: object
      properties:
        terms:
          type: array
          items:
            type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SearchMerchandizingRuleField'
          nullable: true
      additionalProperties: false
      description: SearchMerchandizingRule Condition
    CatalogAdminsSearchMerchandizingRule:
      type: object
      properties:
        code:
          type: string
          description: Unique identifier. Will be generated if not provided.
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        context:
          $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRuleContext'
        ruleImpact:
          $ref: '#/components/schemas/SearchMerchandizingRuleImpact'
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
      description: Search Merchandizing Rule
    CatalogAdminsCategoryPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsCategory'
          nullable: true
      additionalProperties: false
      description: >-
        Collection of categories where categories are returned in a series of
        pages.
    CatalogAdminsCategoryCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsCategory'
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    CatalogAdminsProductImageGroup:
      required:
        - productImageGroupId
      type: object
      properties:
        productImageGroupId:
          type: string
        productImageGroupTags:
          type: array
          items:
            $ref: '#/components/schemas/CatalogAdminsProductImageGroupTag'
          nullable: true
      additionalProperties: false
    CatalogAdminsSearchMerchandizingRuleContext:
      type: object
      properties:
        searchType:
          $ref: '#/components/schemas/SearchType'
        startDate:
          type: string
          description: StartDate
          format: date-time
          nullable: true
        endDate:
          type: string
          description: Defaults to MAXDATE
          format: date-time
          nullable: true
        condition:
          $ref: '#/components/schemas/CatalogAdminsSearchMerchandizingRuleCondition'
      additionalProperties: false
      description: SearchMerchandizingRule Condition
    FieldTypeDefinitionRepositoryEntry:
      type: object
      properties:
        name:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        solrFieldType:
          nullable: true
        description:
          type: string
          nullable: true
        usageRestrictions:
          description: "Restricts the fields used by specific SOLR analyzer.\r\nOriginally developed for entity entraction/ aka noun_extraction\r\n(e.g. searching for sofa tables should return tables, not sofas)"
          nullable: true
      additionalProperties: false
      description: ''
    SchemaDefinitionField:
      required:
        - fieldDefinition
        - fieldName
      type: object
      properties:
        fieldName:
          type: string
        fieldDefinition:
          type: string
        friendlyName:
          type: string
          nullable: true
        searchFieldName:
          type: string
          nullable: true
        ingestFieldName:
          type: string
          nullable: true
      additionalProperties: false
    SpellingSchemaDefinitionField:
      type: object
      properties:
        ingestFieldName:
          type: string
          nullable: true
      additionalProperties: false
    SchemaDefinition:
      required:
        - fields
        - language
      type: object
      properties:
        language:
          type: string
        isPublished:
          type: boolean
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SchemaDefinitionField'
        spellingFields:
          type: array
          items:
            $ref: '#/components/schemas/SpellingSchemaDefinitionField'
          description: List of attributes used in the spelling dictionary
          nullable: true
        spellCorrectEnabled:
          type: boolean
          description: Returns boolean if contains any SpellingFields members.
          nullable: true
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      additionalProperties: false
    Suggester:
      type: object
      properties:
        name:
          type: string
          nullable: true
        highlight:
          type: string
          nullable: true
        allTermsRequired:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    bearerAuth:
      type: http
      description: JWT Authorization header using the Bearer scheme.
      scheme: bearer
      bearerFormat: JWT
    clientOauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://home.mozu.com/api/platform/applications/authtickets/oauth
          scopes: {}
servers:
  - url: https://t{tenantId}.{env}.mozu.com/api
    description: Tenant Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      env:
        default: sandbox
        enum:
          - sandbox
          - tp1
          - tp2
          - tp3
          - tp4
          - tp5
          - stg1
          - stg2
  - url: https://t{tenantId}-s{siteId}.{env}.mozu.com/api
    description: Site Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      siteId:
        default: '0'
        description: Id of the Site
      env:
        default: sandbox
        enum:
          - sandbox
          - tp1
          - tp2
          - tp3
          - tp4
          - tp5
          - stg1
  - url: https://home.mozu.com/api
    description: HomePod Api
  - url: https://t{tenantId}.{env}.euw1.kibocommerce.com/api
    description: EURO Tenant Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      env:
        default: sandbox
        enum:
          - sb
          - tp1
  - url: https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api
    description: EURO Site Level Api
    variables:
      tenantId:
        default: '0'
        description: Id of the Tenant
      siteId:
        default: '0'
        description: Id of the Site
      env:
        default: sandbox
        enum:
          - sb
          - tp1
  - url: https://home.euw1.kibocommerce.com/api
    description: EURO HomePod Api
security:
  - bearerAuth: []
